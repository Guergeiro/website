!function(e){function t(t){for(var s,n,i=t[0],l=t[1],c=t[2],d=0,p=[];d<i.length;d++)n=i[d],Object.prototype.hasOwnProperty.call(o,n)&&o[n]&&p.push(o[n][0]),o[n]=0;for(s in l)Object.prototype.hasOwnProperty.call(l,s)&&(e[s]=l[s]);for(u&&u(t);p.length;)p.shift()();return a.push.apply(a,c||[]),r()}function r(){for(var e,t=0;t<a.length;t++){for(var r=a[t],s=!0,i=1;i<r.length;i++){var l=r[i];0!==o[l]&&(s=!1)}s&&(a.splice(t--,1),e=n(n.s=r[0]))}return e}var s={},o={0:0},a=[];function n(t){if(s[t])return s[t].exports;var r=s[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=s,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="";var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var c=0;c<i.length;c++)t(i[c]);var u=l;a.push([135,1]),r()}([,,,,,function(e,t,r){"use strict";var s=function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{staticClass:"text-2xl mb-5",attrs:{id:this.hash}},[t("strong",[this._t("default")],2)])};s._withStripped=!0;var o={computed:{hash(){return this.$slots.default[0].text.toLowerCase().replace(/ /g,"-").replace(/\?/g,"").replace(/\,/g,"")}}},a=r(0),n=Object(a.a)(o,s,[],!1,null,null,null);n.options.__file="assets/common/vue/h2_hash.vue";t.a=n.exports},,function(e,t,r){var s=r(3),o=r(38);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(40);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(42);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(44);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(46);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(48);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(73);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(75);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(132);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},function(e,t,r){var s=r(3),o=r(134);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};s(o,a);e.exports=o.locals||{}},,function(e,t,r){"use strict";var s=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("h1",{staticClass:"text-5xl"},[e._v(e._s(e.title))]),e.subtitle?r("h2",{staticClass:"mb-5 text-4xl"},[e._v(e._s(e.subtitle))]):e._e(),e.toc?r("div",[r("hr"),r("h2-hash",[e._v("Table Of Contents")]),r("ul",{staticClass:"mb-5"},e._l(e.toc,(function(t){return r("li",[r("a",{attrs:{href:e.base_url+"/#"+e.$route.path+"#"+e.normalizeHref(t)}},[e._v(e._s(t))])])})),0)],1):e._e(),r("hr"),e._t("default")],2)};s._withStripped=!0;var o={components:{H2Hash:r(5).a},props:{base_url:{type:String},subtitle:{type:String,required:!1},title:{type:String,required:!0},toc:{type:Array,required:!1}},methods:{normalizeHref:e=>(e=e.replace(/ /g,"-").replace(/\?/g,"").replace(/\,/g,"")).toLowerCase()}},a=r(0),n=Object(a.a)(o,s,[],!1,null,null,null);n.options.__file="assets/common/vue/page.vue";t.a=n.exports},,,,,,,,,,,,,,,function(e,t,r){"use strict";(function(e){var s=r(17),o=r(34);e.env.conf;let a=[],n={};o.a.forEach(e=>{e.resource.meta&&e.resource.meta.error_code?n[e.resource.meta.error_code]=e.default:e.resource.paths.forEach(t=>{a.push({path:t,component:e.default,meta:e.resource.meta})})}),a.push({path:"*",component:n[404]});const i=new s.a({routes:a,scrollBehavior(e,t,r){if(e.hash)return{selector:e.hash,offset:{x:0,y:10}}}});i.beforeEach((e,t,r)=>{e.meta||(e.meta={title:"404 (Not Found)"}),e.meta.title||(e.meta.title="404 (Not Found)"),document.title="Drash - "+e.meta.title,r()}),i.afterEach((e,t)=>{window.scrollTo(0,0)}),t.a=i}).call(this,r(22))},function(e,t,r){"use strict";var s={};r.r(s),r.d(s,"resource",(function(){return me})),r.d(s,"default",(function(){return ye}));var o={};r.r(o),r.d(o,"resource",(function(){return ke})),r.d(o,"default",(function(){return Se}));var a={};r.r(a),r.d(a,"resource",(function(){return Re})),r.d(a,"default",(function(){return qe}));var n={};r.r(n),r.d(n,"resource",(function(){return He})),r.d(n,"default",(function(){return Pe}));var i={};r.r(i),r.d(i,"resource",(function(){return Le})),r.d(i,"default",(function(){return Oe}));var l={};r.r(l),r.d(l,"resource",(function(){return Ge})),r.d(l,"default",(function(){return We}));var c={};r.r(c),r.d(c,"resource",(function(){return Je})),r.d(c,"default",(function(){return Xe}));var u={};r.r(u),r.d(u,"resource",(function(){return et})),r.d(u,"default",(function(){return st}));var d={};r.r(d),r.d(d,"resource",(function(){return at})),r.d(d,"default",(function(){return lt}));var p={};r.r(p),r.d(p,"resource",(function(){return ut})),r.d(p,"default",(function(){return vt}));var h={};r.r(h),r.d(h,"resource",(function(){return ft})),r.d(h,"default",(function(){return yt}));var _={};r.r(_),r.d(_,"resource",(function(){return kt})),r.d(_,"default",(function(){return St}));var v={};r.r(v),r.d(v,"resource",(function(){return Rt})),r.d(v,"default",(function(){return qt}));var m={};r.r(m),r.d(m,"resource",(function(){return Ht})),r.d(m,"default",(function(){return Pt}));var f={};r.r(f),r.d(f,"resource",(function(){return Lt})),r.d(f,"default",(function(){return Ot}));var g={};r.r(g),r.d(g,"resource",(function(){return Gt})),r.d(g,"default",(function(){return Jt}));var b={};r.r(b),r.d(b,"resource",(function(){return Qt})),r.d(b,"default",(function(){return er}));var y={};r.r(y),r.d(y,"resource",(function(){return rr})),r.d(y,"default",(function(){return ar}));var w={};r.r(w),r.d(w,"resource",(function(){return ir})),r.d(w,"default",(function(){return ur}));var k={};r.r(k),r.d(k,"resource",(function(){return pr})),r.d(k,"default",(function(){return fr}));var x={};r.r(x),r.d(x,"resource",(function(){return br})),r.d(x,"default",(function(){return kr}));var T={};r.r(T),r.d(T,"resource",(function(){return Tr})),r.d(T,"default",(function(){return Rr}));var S={};r.r(S),r.d(S,"resource",(function(){return Er})),r.d(S,"default",(function(){return Hr}));var D={};r.r(D),r.d(D,"resource",(function(){return Ar})),r.d(D,"default",(function(){return Lr}));var R={};r.r(R),r.d(R,"resource",(function(){return Mr})),r.d(R,"default",(function(){return Gr}));var C={};r.r(C),r.d(C,"resource",(function(){return Ur})),r.d(C,"default",(function(){return Wr}));var E={};r.r(E),r.d(E,"resource",(function(){return Jr})),r.d(E,"default",(function(){return Xr}));var q={};r.r(q),r.d(q,"resource",(function(){return es})),r.d(q,"default",(function(){return ss}));var j={};r.r(j),r.d(j,"resource",(function(){return as})),r.d(j,"default",(function(){return ls}));var H={};r.r(H),r.d(H,"resource",(function(){return us})),r.d(H,"default",(function(){return hs}));var $={};r.r($),r.d($,"resource",(function(){return vs})),r.d($,"default",(function(){return gs}));var A={};r.r(A),r.d(A,"resource",(function(){return ys})),r.d(A,"default",(function(){return xs}));var P={};r.r(P),r.d(P,"resource",(function(){return Ss})),r.d(P,"default",(function(){return Cs}));var Y={};r.r(Y),r.d(Y,"resource",(function(){return qs})),r.d(Y,"default",(function(){return Ps}));var L={};r.r(L),r.d(L,"resource",(function(){return Ls})),r.d(L,"default",(function(){return Os}));var I={};r.r(I),r.d(I,"resource",(function(){return Gs})),r.d(I,"default",(function(){return Vs}));var M={};r.r(M),r.d(M,"resource",(function(){return Ws})),r.d(M,"default",(function(){return zs}));var O={};r.r(O),r.d(O,"resource",(function(){return Xs})),r.d(O,"default",(function(){return to}));var B={};r.r(B),r.d(B,"resource",(function(){return so})),r.d(B,"default",(function(){return no}));var G={};r.r(G),r.d(G,"resource",(function(){return lo})),r.d(G,"default",(function(){return po}));var N={};r.r(N),r.d(N,"resource",(function(){return _o})),r.d(N,"default",(function(){return fo}));var U={};r.r(U),r.d(U,"resource",(function(){return bo})),r.d(U,"default",(function(){return ko}));var V={};r.r(V),r.d(V,"resource",(function(){return To})),r.d(V,"default",(function(){return Ro}));var F={};r.r(F),r.d(F,"resource",(function(){return Eo})),r.d(F,"default",(function(){return Ho}));var W={};r.r(W),r.d(W,"resource",(function(){return Ao})),r.d(W,"default",(function(){return Lo}));var K={};r.r(K),r.d(K,"resource",(function(){return Bo})),r.d(K,"default",(function(){return Uo}));var J={};r.r(J),r.d(J,"resource",(function(){return Fo})),r.d(J,"default",(function(){return Jo}));var z={};r.r(z),r.d(z,"resource",(function(){return Qo})),r.d(z,"default",(function(){return ea}));var Q={};r.r(Q),r.d(Q,"resource",(function(){return ra})),r.d(Q,"default",(function(){return aa}));var X={};r.r(X),r.d(X,"resource",(function(){return ia})),r.d(X,"default",(function(){return ua}));var Z={};r.r(Z),r.d(Z,"resource",(function(){return pa})),r.d(Z,"default",(function(){return va}));var ee={};r.r(ee),r.d(ee,"resource",(function(){return fa})),r.d(ee,"default",(function(){return ya}));var te={};r.r(te),r.d(te,"resource",(function(){return ka})),r.d(te,"default",(function(){return Sa}));var re={};r.r(re),r.d(re,"resource",(function(){return Ra})),r.d(re,"default",(function(){return qa}));var se={};r.r(se),r.d(se,"resource",(function(){return Ha})),r.d(se,"default",(function(){return Pa}));var oe={};r.r(oe),r.d(oe,"resource",(function(){return La})),r.d(oe,"default",(function(){return Oa}));var ae={};r.r(ae),r.d(ae,"resource",(function(){return Ga})),r.d(ae,"default",(function(){return Va}));var ne={};r.r(ne),r.d(ne,"resource",(function(){return Wa})),r.d(ne,"default",(function(){return za}));var ie={};r.r(ie),r.d(ie,"resource",(function(){return Xa})),r.d(ie,"default",(function(){return tn}));var le={};r.r(le),r.d(le,"resource",(function(){return sn})),r.d(le,"default",(function(){return nn}));var ce={};r.r(ce),r.d(ce,"resource",(function(){return cn})),r.d(ce,"default",(function(){return pn}));var ue={};r.r(ue),r.d(ue,"resource",(function(){return _n})),r.d(ue,"default",(function(){return fn}));var de={};r.r(de),r.d(de,"resource",(function(){return bn})),r.d(de,"default",(function(){return kn}));var pe={};r.r(pe),r.d(pe,"resource",(function(){return Tn})),r.d(pe,"default",(function(){return Rn}));var he={};r.r(he),r.d(he,"resource",(function(){return En})),r.d(he,"default",(function(){return Hn}));var _e={};r.r(_e),r.d(_e,"resource",(function(){return An})),r.d(_e,"default",(function(){return Ln}));var ve=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("What is Drash?")]),r("p",[e._v("Drash is a REST microframework for "),r("a",{attrs:{href:"https://deno.land",target:"_BLANK"}},[e._v("Deno")]),e._v("'s HTTP server with zero dependencies.")]),r("p",[e._v("Drash is designed to help you build your projects quickly with the ability to scale. You can build an API, a web app, an SPA (like these documentation pages), or even a static HTML site. How you use Drash is up to you, so it can be everything you need and nothing you don't — like a DRASH tent.")]),r("hr"),r("h2-hash",[e._v("Why Use Drash?")]),r("p",[e._v("Drash takes concepts from the following:")]),r("ul",[r("li",[r("a",{attrs:{href:"https://flask.palletsprojects.com/en/1.1.x/",target:"_BLANK"}},[e._v("Flask")]),e._v(" — being "),r("a",{attrs:{href:"https://flask.palletsprojects.com/en/1.1.x/foreword/#what-does-micro-mean",target:"_BLANK"}},[e._v("micro")]),e._v(" and extensible")]),r("li",[r("a",{attrs:{href:"https://laravel.com/",target:"_BLANK"}},[e._v("Laravel")]),e._v(" — use of similarly styled "),r("a",{attrs:{href:"https://laravel.com/docs/master/middleware"}},[e._v("middleware")])]),r("li",[r("a",{attrs:{href:"https://www.peej.co.uk/tonic/",target:"_BLANK"}},[e._v("Tonic")]),e._v(" — use of "),r("a",{attrs:{href:"https://github.com/peej/tonic#how-it-works",target:"_BLANK"}},[e._v("resources")])]),r("li",[r("a",{attrs:{href:"https://www.restapitutorial.com/lessons/whatisrest.html",target:"_BLANK"}},[e._v("RESTful")]),e._v(" principles — content negotiation, HTTP verbs, URIs, etc.")])]),r("p",[e._v("Thrown into the mix is Drash's own concepts such as:")]),r("ul",[r("li",[e._v("Documentation-driven development")]),r("li",[e._v("Test-driven development")]),r("li",[e._v("Lowering barriers to usage")]),r("li",[e._v("Zero dependencies")])]),r("P",[e._v("Drash's versioning system will always follow "),r("a",{attrs:{href:"https://semver.org/",target:"_BLANK"}},[e._v("semver.org")]),e._v(". Also, Drash's versions will always be compatible with Deno's versions. That is, Drash v1.x will always be compatible with Deno v1.x, Drash v2.x will always be compatible with Deno v2.x, and so on.")]),r("hr"),r("h2-hash",[e._v("Articles")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://dev.to/drash_land/why-was-drash-built-4bob",target:"_BLANK"}},[e._v("Why Was Drash Built?")])])]),r("li",[r("p",[r("a",{attrs:{href:"https://dev.to/drash_land/what-makes-drash-different-idd",target:"_BLANK"}},[e._v("What Makes Drash Different?")])])])]),r("hr"),r("h2-hash",[e._v("About These Documentation Pages")]),r("p",[e._v("We know the pain of using new software that is not extensively documented. Therefore, all released Drash code that is intended to be used is documented. Anything that will be released will be documented before being released. This is how we lower our barriers to usage, so you can continue coding confidently without questions.")]),r("p",[e._v("Most of the pages on this site are written in a tutorial format. You are given an introduction to the page, example code, and an end state that you can work towards. These pages mostly assume you have no working knowledge of Drash and try to be explicit as possible in the instructions.")])],1)};ve._withStripped=!0;const me={paths:["/about-drash"],meta:{title:"About Drash"}};var fe={data:()=>({title:"About Drash",toc:["What Is Drash?","Why Use Drash?","Articles","About These Documentation Pages"]})},ge=r(0),be=Object(ge.a)(fe,ve,[],!1,null,null,null);be.options.__file="src/drash/vue/pages/about_drash.vue";var ye=be.exports,we=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,title:e.title,subtitle:e.subtitle}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to implement "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation",target:"_BLANK"}},[e._v("content negotation")]),e._v(" in a Drash server. You will learn how to make a Drash server serve different representations of a resource. For simplicity, the only two representations this tutorial will cover are "),r("code",[e._v("application/json")]),e._v(" and "),r("code",[e._v("text/html")]),e._v(". However, this tutorial will set your resource up in a way that will allow you to add more representations.")]),r("p",[e._v("The resource you will be creating is a users resource. It will contain data about users and will be able to display a single user's data as a profile card in HTML or as JSON. The client (your browser in this case) will decide what representation to receive.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below are samples of what you will create.")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_5/verification_2.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_4/verification_3_json.png"}})]),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}})],1)};we._withStripped=!0;const ke={paths:["/advanced-tutorials/content-negotiation","/advanced-tutorials/content-negotiation/introduction"],meta:{title:"Content Negotiation",subtitle:"Introduction"}};var xe={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/content-negotiation",title:"Content Negotiation",subtitle:"Introduction"}}},Te=Object(ge.a)(xe,we,[],!1,null,null,null);Te.options.__file="src/drash/vue/pages/advanced_tutorials/content_negotiation/introduction.vue";var Se=Te.exports,De=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Before you start building your application, you need the data that will drive this tutorial. For simplicity, you will simulate retrieving records from a database. You will pretend that you have queried a database and retrieved three user records. This data will be parsable as JSON.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    users.json")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create the "),r("code",[e._v("users.json")]),e._v(" file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/users.json",language:"json"}},[e._v('{\n  "1": {\n    "id": 1,\n    "alias": "Captain America",\n    "name": "Steve Rogers",\n    "api_key": "46096ec9-5bf9-4978-b77b-07018dc32a74",\n    "api_secret": "1b64d3ac-7e19-4018-ab99-29f50e097f4b"\n  },\n  "2": {\n    "id": 2,\n    "alias": "Black Widow",\n    "name": "Natasha Romanoff",\n    "api_key": "3d93a3f9-c5ad-439d-bacb-75a9e4fb2b42",\n    "api_secret": "e5b11faa-629f-4255-bf3a-ee736dc9468d"\n  },\n  "3": {\n    "id": 3,\n    "alias": "Thor",\n    "name": "Thor Odinson",\n    "api_key": "7442f354-2a89-47ef-a3ce-5a7c68e82157",\n    "api_secret": "365e362f-fa21-4e5a-bb84-9da76e1c5f49"\n  }\n}')])],1)])]),r("hr"),r("h2-hash",[e._v("Verification (optional)")]),r("p",[e._v("Since you just made a JSON file and will be parsing this file as JSON in a later part, you should test that deno can parse it as JSON.")]),r("ol",[r("li",[e._v("Open up the deno REPL by typing in "),r("code",[e._v("deno")]),e._v(" in your terminal."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno\n>")])],1),r("li",[e._v("Parse your file."),r("code-block",{attrs:{title:"Terminal"}},[e._v('> let fileContents = Deno.readFileSync("./users.json");\nundefined\n\n> const decoder = new TextDecoder();\nundefined\n \n> let decoded = decoder.decode(fileContents);\nundefined\n \n> JSON.parse(decoded);\n[ { id: 1, alias: "Captain America", name: "Steve Rogers", api_key: "46096ec9-5bf9-4978-b77b-07018dc32a74", api_secret: "1b64d3ac-7e19-4018-ab99-29f50e097f4b" }, { id: 2, alias: "Black Widow", name: "Natasha Romanoff", api_key: "3d93a3f9-c5ad-439d-bacb-75a9e4fb2b42", api_secret: "e5b11faa-629f-4255-bf3a-ee736dc9468d" }, { id: 3, alias: "Thor", name: "Thor Odinson", api_key: "7442f354-2a89-47ef-a3ce-5a7c68e82157", api_secret: "365e362f-fa21-4e5a-bb84-9da76e1c5f49" } ]\n \n>')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}})],1)};De._withStripped=!0;const Re={paths:["/advanced-tutorials/content-negotiation/part-1"],meta:{title:"Content Negotiation",subtitle:"Part 1: Simulate Database Records"}};var Ce={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/content-negotiation",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Content Negotiation",subtitle:"Part 1: Simulate Database Records"}}},Ee=Object(ge.a)(Ce,De,[],!1,null,null,null);Ee.options.__file="src/drash/vue/pages/advanced_tutorials/content_negotiation/part_1.vue";var qe=Ee.exports,je=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v('Now that you have your user records from your "database" in place from Part 1, you need a server to handle requests for that data. The server you will create in this tutorial part will be very basic. It will only handle requests to one resource. This resource will be your users resource.')]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    users.json")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport UsersResource from "./users_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [UsersResource],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("p",[e._v("When this file is run, it will load in Drash, set up your server, and start your server.")]),r("p",[e._v("You will notice that there is an "),r("code",[e._v("import")]),e._v(" statement for a "),r("code",[e._v("users_resource.ts")]),e._v(" file (highlighted). You will be creating this file in the next tutorial part. For now, you just need to make sure your server expects and registers this resource file.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your app in its current state, you will get an error. The TypeScript compiler will throw an error stating it cannot resolve the "),r("code",[e._v("users_resource.ts")]),e._v(" module. So, before you verify that your server is working, you need to comment out the lines relevant to "),r("code",[e._v("users_resource.ts")]),e._v(".")]),r("ol",[r("li",[e._v("Comment out the "),r("code",[e._v("import")]),e._v(" statement and "),r("code",[e._v("resources")]),e._v(" config."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\n// import UsersResource from "./users_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  // resources: [UsersResource],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Not Found"')]),r("p",[e._v("You will receive a "),r("code",[e._v("404 Not Found")]),e._v(" error because your server does not have any resources. This is expected. You will be creating your resources next.")])],1),r("li",[e._v("Uncomment the "),r("code",[e._v("import")]),e._v(" statement and "),r("code",[e._v("resources")]),e._v(" config before moving on to the next part."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport UsersResource from "./users_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [UsersResource],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}})],1)};je._withStripped=!0;const He={paths:["/advanced-tutorials/content-negotiation/part-2"],meta:{title:"Content Negotiation",subtitle:"Part 2: Creating The Server"}};var $e={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/content-negotiation",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Content Negotiation",subtitle:"Part 2: Creating The Server"}}},Ae=Object(ge.a)($e,je,[],!1,null,null,null);Ae.options.__file="src/drash/vue/pages/advanced_tutorials/content_negotiation/part_2.vue";var Pe=Ae.exports,Ye=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Your server will not be able to handle requests for your user records until you give it a resource that grants clients access to your user records. In Part 2, you made your server expect the "),r("code",[e._v("users_resource.ts")]),e._v(" file. You will create this file next and make sure your server runs properly with it in the Verification section.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    users.json\n    users_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your users resource file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/users_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class UsersResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/users/:id",\n  ];\n\n  public GET() {\n    let userId = this.request.getPathParam("id");\n    this.response.body = this.getUser(userId);\n    return this.response;\n  }\n\n  protected getUser(userId) {\n    let user = null;\n\n    try {\n      let users = this.readFileContents("./users.json");\n      users = JSON.parse(users);\n      user = users[userId];\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(400, `Error getting user with ID "${userId}". Error: ${error.message}.`);\n    }\n\n    if (!user) {\n      throw new Drash.Exceptions.HttpException(404, `User with ID "${userId}" not found.`);\n    }\n\n    return user;\n  }\n\n  protected readFileContents(file: string) {\n    let fileContentsRaw = Deno.readFileSync(file);\n    const decoder = new TextDecoder();\n    let decoded = decoder.decode(fileContentsRaw);\n    return decoded;\n  }\n}')])],1),r("p",[e._v("Your resource will only handle "),r("code",[e._v("GET")]),e._v(" requests at the following URI:")]),r("ul",[r("li",[r("code",[e._v("/users/:id")])])]),r("p",[e._v("When a "),r("code",[e._v("GET")]),e._v(" request is made to the above URIs, your resource will handle the request by:")]),r("ol",[r("li",[e._v("Checking if an "),r("code",[e._v("id")]),e._v(" path param was specified in the URI (e.g., if the request was to "),r("code",[e._v("/users/1")]),e._v(", then "),r("code",[e._v("1")]),e._v(" would be the "),r("code",[e._v("id")]),e._v(").")]),r("li",[e._v("Using the "),r("code",[e._v("id")]),e._v(" path param to match it to a user's ID in your user records; and")]),r("ul",[r("li",[e._v("setting the user's record in the body of the response if the "),r("code",[e._v("id")]),e._v(" path param is matched; or")]),r("li",[e._v("throwing a "),r("code",[e._v("404 Not Found")]),e._v(" error with "),r("code",[e._v("User not found.")]),e._v(" as the response body if the "),r("code",[e._v("id")]),e._v(" path param is not matched.")])]),r("li",[e._v("Sending the response back to the server object for further processing back to the client that made the request.")])])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2. Now that you have the resource file that your server is expecting, you can start your server and make a "),r("code",[e._v("GET")]),e._v(" request to one of your resource's URIs.")]),r("ol",[r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1),r("li",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/users/1")]),e._v(" in your browser."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users/1")]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n    "id": 1,\n    "alias": "Captain America",\n    "name": "Steve Rogers",\n    "api_key": "46096ec9-5bf9-4978-b77b-07018dc32a74",\n    "api_secret": "1b64d3ac-7e19-4018-ab99-29f50e097f4b"\n}')])],1),r("li",[e._v("Make another request."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users/2")]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n    "id": 2,\n    "alias": "Black Widow",\n    "name": "Natasha Romanoff",\n    "api_key": "3d93a3f9-c5ad-439d-bacb-75a9e4fb2b42",\n    "api_secret": "e5b11faa-629f-4255-bf3a-ee736dc9468d"\n}')])],1),r("li",[e._v("Make a bad request."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users/4")]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{header:!1,language:"text"}},[e._v('"User with ID \\"4\\" not found."')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}})],1)};Ye._withStripped=!0;const Le={paths:["/advanced-tutorials/content-negotiation/part-3"],meta:{title:"Content Negotiation",subtitle:"Part 3: Creatin The Resource"}};var Ie={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/content-negotiation",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Content Negotiation",subtitle:"Part 3: Creatin The Resource"}}},Me=Object(ge.a)(Ie,Ye,[],!1,null,null,null);Me.options.__file="src/drash/vue/pages/advanced_tutorials/content_negotiation/part_3.vue";var Oe=Me.exports,Be=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[r("strong",[r("em",[e._v("Before diving into having your resource handle HTML representations of itself, you need to understand how the "),r("code",[e._v("Accept")]),e._v(" header, "),r("code",[e._v("Content-Type")]),e._v(" header, MIME types, and the "),r("code",[e._v("response_output")]),e._v(" server config play their roles in Drash's request-resource-response lifecycle. So, please read the entire block below.")])])]),r("div",{staticClass:"mb-5 items-center bg-blue-500 text-white text-sm font-bold px-4 py-3",attrs:{role:"alert"}},[r("p",[e._v("Drash uses the "),r("code",[e._v("Accept")]),e._v(" header to determine what representation of a resource a request wants. Clients can specify one or many content types in this header. It is up to you — the developer — to handle this header properly so that you can serve the correct content type to the client based on the request.")]),r("p",[e._v("There are many ways to handle the "),r("code",[e._v("Accept")]),e._v(" header in Drash. We will go over one way in this tutorial part. Other ways to handle the "),r("code",[e._v("Accept")]),e._v(" header can be found in Tutorials > Misc > Content Negotiation.")]),r("p",{staticStyle:{"margin-bottom":"0"}},[e._v("To ensure that your server always serves a response with the "),r("code",[e._v("Content-Type")]),e._v(" header, Drash will set the response object's "),r("code",[e._v("Content-Type")]),e._v(" header as the value of the "),r("code",[e._v("response_output")]),e._v(" server config. If you do not set this config, then Drash will default it to "),r("code",[e._v("application/json")]),e._v(".")])]),r("p",[e._v("Now that your server can use your users resource to serve user data, you can have your resource change the representation (the content type) of its user data before it is sent back to the client. Drash defines content types according to the MDN: "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",target:"_BLANK"}},[e._v("https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type")]),e._v(".")]),r("p",[e._v("In this tutorial part, you will create a profile card in HTML using Tailwind CSS. When clients make requests to your users resource, they will be able to specify how they want to your data using the "),r("code",[e._v("Accept")]),e._v(" header.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    user.html\n    users.json\n    users_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Add your "),r("code",[e._v("user.html")]),e._v(" file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/user.html",language:"html",line_highlight:"14,21"}},[e._v(e._s(e.user_html))])],1),r("p",[e._v("When a request is made to your resource for the "),r("code",[e._v("text/html")]),e._v(" representation of its data, this is the HTML file that will be sent as the response. After your resource reads this HTML file, it will replace the highlighted variables ("),r("code",[e._v("alias")]),e._v(" and "),r("code",[e._v("name")]),e._v(") with the requested user's data. This replacement process is basically the process a template engine would perform, but in a much simpler way.")])]),r("li",[r("p",[e._v("Modify your resource by adding the highlighted code so it can generate a "),r("code",[e._v("text/html")]),e._v(" representation of its data. Also, organize your code with specific response-generating methods (e.g., "),r("code",[e._v("generateHtml()")]),e._v(" and "),r("code",[e._v("generateJson()")]),e._v(") for readability.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/users_resource.ts",language:"typescript",line_highlight:"13-19,40-60"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class UsersResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/users/:id"\n  ];\n\n  public GET() {\n    let userId = this.request.getPathParam("id");\n    let user = this.getUser(userId);\n\n    // Read the Accept header and check if text/html is acceptable\n    if (this.request.accepts("text/html")) {\n      return this.generateHtml(user);\n    }\n\n    // Default to a JSON representation\n    return this.generateJson(user);\n  }\n\n  protected getUser(userId: any) {\n    let user = null;\n\n    try {\n      let users = this.readFileContents("./users.json");\n      users = JSON.parse(users);\n      user = users[userId];\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(400, `Error getting user with ID "${userId}". Error: ${error.message}.`);\n    }\n\n    if (!user) {\n      throw new Drash.Exceptions.HttpException(404, `User with ID "${userId}" not found.`);\n    }\n\n    return user;\n  }\n\n  protected generateHtml(user: any) {\n    this.response.headers.set("Content-Type", "text/html");\n    try {\n      let html = this.readFileContents("./user.html");\n      html = html\n        .replace(/\\{\\{ alias \\}\\}/, user.alias)\n        .replace(/\\{\\{ name \\}\\}/, user.name);\n      this.response.body = html;\n      return this.response;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(500, error.message);\n    }\n  }\n\n  protected generateJson(user: any) {\n    this.response.headers.set("Content-Type", "application/json");\n    user.api_key = "**********";\n    user.api_secret = "**********";\n    this.response.body = user;\n    return this.response;\n  }\n\n  protected readFileContents(file: string) {\n    let fileContentsRaw = Deno.readFileSync(file);\n    const decoder = new TextDecoder();\n    let decoded = decoder.decode(fileContentsRaw);\n    return decoded;\n  }\n}')])],1),r("p",[e._v("The highlighted code will check what content type the request accepts and will make sure that the user data is sent in an acceptable format. If the request does not specify the "),r("code",[e._v("Accept")]),e._v(" header, then the resource will default to serving "),r("code",[e._v("application/json")]),e._v(". You should also note that the resource — when handling content negotiation — is in charge of setting the response's "),r("code",[e._v("Content-Type")]),e._v(" header properly as seen in the "),r("code",[e._v("generateHtml()")]),e._v(" and "),r("code",[e._v("generateJson()")]),e._v(" methods.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("You now have the option to specify which content type you want to receive: "),r("code",[e._v("application/json")]),e._v(" or "),r("code",[e._v("text/html")]),e._v(". Verify that your resource can serve both content types of itself.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Make a request to "),r("code",[e._v("localhost:1447/users/1")]),e._v(" in your browser.")]),r("p",[e._v("You should receive the following response:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_4/verification_3.png"}})])]),r("li",[r("p",[e._v("Make a request to "),r("code",[e._v("localhost:1447/users/1")]),e._v(" in Postman (or similar).")]),r("p",[e._v("You should receive the following response:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_4/verification_3_json.png"}})])]),r("li",[r("p",[e._v("Make a request to "),r("code",[e._v("localhost:1447/users/1")]),e._v(" in Postman (or similar) with the following header:")]),r("p",[r("code-block",{attrs:{header:!1,language:"text"}},[e._v("Accept: text/html")])],1),r("p",[e._v("You should receive the following response:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_4/verification_3_html.png"}})])]),r("li",[r("p",[e._v("Make a request to "),r("code",[e._v("localhost:1447/users/1")]),e._v(" in Postman (or similar) with the following header:")]),r("p",[r("code-block",{attrs:{header:!1,language:"text"}},[e._v("Accept: text/xml")])],1),r("p",[e._v("You should receive the following response because the resource defaults to JSON responses.")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/content_negotiation/user_profiles/part_4/verification_3_json.png"}})])])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}})],1)};Be._withStripped=!0;const Ge={paths:["/advanced-tutorials/content-negotiation/part-4"],meta:{title:"Content Negotiation",subtitle:"Part 4: Handling Representations"}};var Ne={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/content-negotiation",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Content Negotiation",subtitle:"Part 4: Handling Representations",user_html:Ue}}};const Ue='<!DOCTYPE html>\n<html class="h-full w-full">\n<head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <title>Hello World</title>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n</head>\n<body class="h-full w-full">\n    <div class="flex h-full w-full items-center justify-center">\n        <div class="max-w-sm rounded overflow-hidden shadow-lg">\n            <img class="w-full" src="https://images.bewakoof.com/original/avengers-logos-mini-backpack-avl-essential-printed-mini-backpacks-183193-1524728878.jpg" alt="Avengers">\n            <div class="px-6">\n                <div class="font-bold text-xl my-6">{{ alias }}</div>\n                <div class="mb-6">\n                    <div class="flex my-2">\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base font-bold">Name</p>\n                        </div>\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base">{{ name }}</p>\n                        </div>\n                    </div>\n                    <div class="flex my-2">\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base font-bold">API Key</p>\n                        </div>\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base">**********</p>\n                        </div>\n                    </div>\n                    <div class="flex my-2">\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base font-bold">API Secret</p>\n                        </div>\n                        <div class="w-1/2">\n                            <p class="text-grey-darker text-base">**********</p>\n                        </div>\n                    </div>\n                </div>\n                <hr class="border-b border-gray">\n            </div>\n            <div class="px-6 py-4">\n                <span class="inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2">#deno</span>\n                <span class="inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2">#drash</span>\n                <span class="inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker">#marvel</span>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\n';var Ve=Ne,Fe=Object(ge.a)(Ve,Be,[],!1,null,null,null);Fe.options.__file="src/drash/vue/pages/advanced_tutorials/content_negotiation/part_4.vue";var We=Fe.exports,Ke=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,title:e.title,subtitle:e.subtitle}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:5}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to create a simple React application powered by Drash. You will learn how to make a Drash server serve a "),r("code",[e._v("text/html")]),e._v(" response to clients. The contents of the response will include and render JSX code so that it will mount and render on the screen. Your React app will display Deno tweets.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below is a sample of what you will create.")]),r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_react_app/deno_tweets/1.png"}}),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:5}})],1)};Ke._withStripped=!0;const Je={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react","/advanced-tutorials/creating-a-client-side-rendered-app-react/introduction"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Introduction"}};var ze={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",title:"Creating A Client Side Rendered App (React)",subtitle:"Introduction"}}},Qe=Object(ge.a)(ze,Ke,[],!1,null,null,null);Qe.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/introduction.vue";var Xe=Qe.exports,Ze=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:5}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("The server you will create in this tutorial part will handle requests to a single resource. That resource will serve an HTML template and that HTML template will serve your React app.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file.")]),r("p",[r("code-block",{attrs:{title:"app.ts",language:"typescript",line_highlight:"3"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [HomeResource],\n  directory: ".",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("p",[e._v("When this file is run, it will load in Drash, set up your server, and start your server.")]),r("p",[e._v("You will notice that there is an "),r("code",[e._v("import")]),e._v(" statement for your resource file (highlighted). You will be creating this file in the next tutorial part. For now, you just need to make sure your server expects and registers it.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your app in its current state, you will get an error. The TypeScript compiler will throw an error stating it cannot resolve your resource file. So, before you verify that your server is working, you need to comment out the lines relevant to your resource file.")]),r("ol",[r("li",[r("p",[e._v("Comment out the code relevant to your resource file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\n// import HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  // resources: [HomeResource],\n  directory: ".",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1)]),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447")])],1),r("p",[e._v("You should receive the following response:"),r("code-block",{attrs:{header:!1}},[e._v("Not Found")])],1),r("p",[e._v("You will receive a "),r("code",[e._v("404 Not Found")]),e._v(" error because your server does not have any resources. This is expected. You will be creating your resource next.")])]),r("li",[r("p",[e._v("Before moving on, uncomment the code you commented out.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [HomeResource],\n  directory: ".",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:5}})],1)};Ze._withStripped=!0;const et={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react/part-1"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Part 1: Creating The Server"}};var tt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (React)",subtitle:"Part 1: Creating The Server"}}},rt=Object(ge.a)(tt,Ze,[],!1,null,null,null);rt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/part_1.vue";var st=rt.exports,ot=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:5}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Your server will not be able to serve your HTML file until you give it the resource that can do so. In Part 1, you made your server expect a home resource. You will create this file next and will verify your server runs properly with it in the Verification section.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    home_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your home resource file.")]),r("p",[r("code-block",{attrs:{title:"home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nconst decoder = new TextDecoder();\n\nexport default class HomeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/"\n  ];\n\n  public GET() {\n    try {\n      let fileContentsRaw = Deno.readFileSync("./index.html");\n      let template = decoder.decode(fileContentsRaw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error reading HTML template.`\n      );\n    }\n    return this.response;\n  }\n}')])],1),r("p",[e._v("Your home resource will serve an HTML file and that file will display your React app. You will be creating this HTML file in the next tutorial part.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 1. Now that you have your resource file that your server is expecting, you can start your server and make a "),r("code",[e._v("GET")]),e._v(" request to it.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser. You should receive the following response:")]),r("p",[r("code-block",{attrs:{header:!1}},[e._v("Error reading HTML template.")])],1),r("p",[e._v("This is the proper response since you have not written your "),r("code",[e._v("index.html")]),e._v(" yet.")])])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:5}})],1)};ot._withStripped=!0;const at={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react/part-2"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Part 2: Creating The Resource"}};var nt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (React)",subtitle:"Part 2: Creating The Resource"}}},it=Object(ge.a)(nt,ot,[],!1,null,null,null);it.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/part_2.vue";var lt=it.exports,ct=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:5}}),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    home_resource.ts\n    index.html")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/index.html",language:"html"}},[e._v(e._s(e.index_html))])],1),r("p",[e._v("To make things easier, your HTML file comes with the embedded Twitter Timeline widget. This widget will show Deno's tweets.")]),r("p",[e._v("You will notice there is a "),r("code",[e._v("<script>")]),e._v(" tag. This points to your compiled React component that you will create in the later steps.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2.")]),r("p",[e._v("Unfortunately, if you try the run the app now and go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser, the page will error.")]),r("p",[e._v("This is because all the content of the page is going to come from your React component which has not been created yet.")]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:5}})],1)};ct._withStripped=!0;const ut={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react/part-3"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Part 3: Creating The HTML Template"}};var dt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",toc:["Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (React)",subtitle:"Part 3: Creating The HTML Template",index_html:pt}}};const pt='<!DOCTYPE html>\n<html class="h-full w-full">\n\n<head>\n  <meta charset="utf-8"/>\n  <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n  <title>Deno Tweets</title>\n</head>\n\n<body>\n  <div id="root" style="max-width: 640px; margin: 0 auto;">\n  </div>\n  <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"><\/script>\n</body>\n\n<script src="/public/app.js"><\/script>\n</html>\n';var ht=dt,_t=Object(ge.a)(ht,ct,[],!1,null,null,null);_t.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/part_3.vue";var vt=_t.exports,mt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:5}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("By now, you should have your server serving an HTML file. In this tutorial part, you will configure Webpack and Typescript to transpile your React component to set the title and description for the page.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    home_resource.ts\n    index.html\n    tsconfig.json\n    webpack.config.js")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your Webpack configuration file.")]),r("p",[r("code-block",{attrs:{title:"webpack.config.js",language:"javascript"}},[e._v("const path = require('path')\nmodule.exports = {\n  entry: {\n    app: './components/App.tsx'\n  },\n  output: {\n    filename: \"[name].js\",\n    path: __dirname + '/public/'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: 'ts-loader',\n        exclude: /node_modules/\n      }\n    ]\n  },\n  resolve: {\n    alias: {\n      react: path.resolve('./node_modules/react')\n    },\n    extensions: ['.tsx', '.js']\n  }\n}")])],1),r("p",[e._v("Here, you are telling Webpack to search for your React components and to transpile them.")]),r("p",[e._v("The transpiled files will then be placed in a different directory (see the "),r("code",[e._v("output")]),e._v(" property).")]),r("p",[e._v("You also have a block in the file that will test the found files against a "),r("code",[e._v(".tsx")]),e._v(" extension, and will pass those files through the "),r("code",[e._v("ts-loader")]),e._v(" to support transpiling TSX.")])]),r("li",[r("p",[e._v("Create your Typescript configuration file.")]),r("p",[r("code-block",{attrs:{title:"tsconfig.json",language:"json"}},[e._v('{\n  "compilerOptions": {\n    "strict": true,\n    "esModuleInterop": true,\n    "forceConsistentCasingInFileNames": true,\n    "rootDir": "./components",\n    "jsx": "react",\n    "target": "es6",\n    "module": "commonjs",\n    "allowJs": true\n  },\n  "exclude": ["home_resource.ts", "app.ts"]\n}')])],1),r("p",[e._v("This configuration file aids in allowing Webpack to continue with its task, and will exclude your Deno files from the Typescript compiler — seperate from Deno's Typescript compiler.")])]),r("li",[r("p",[e._v("Install the dependencies.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ npm i --save-dev webpack webpack-cli react react-dom typescript @types/react @types/react-dom ts-loader")])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Test Webpack.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ node_modules/.bin/webpack-cli --config webpack.config.js")])],1),r("p",[e._v("You should see the following output:")]),r("p",[r("code-block",{attrs:{title:"Terminal"}},[e._v("ERROR in Entry module not found: Error: Can't resolve './components/App.tsx'")])],1),r("p",[e._v("This is the correct output because you have not created your components yet. You will do this in the next tutorial part.")])])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:5}})],1)};mt._withStripped=!0;const ft={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react/part-4"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Part 4: Configuring Webpack and Typescript"}};var gt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (React)",subtitle:"Part 4: Configuring Webpack and Typescript"}}},bt=Object(ge.a)(gt,mt,[],!1,null,null,null);bt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/part_4.vue";var yt=bt.exports,wt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:5,parts:5}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have everything set up, you can start writing your React components in TSX.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    ▾ components/\n        App.tsx\n        DenoTweets.tsx\n    home_resource.ts\n    index.html\n    tsconfig.json\n    webpack.config.js")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your React component for the Deno Tweets.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/components/DenoTweets.tsx",language:"tsx"}},[e._v("import * as React from 'react'\n\ninterface Props {\n    title: string,\n    description: string\n}\n\nconst DenoTweets = (props: Props) => {\n    const { title, description } = props;\n    return (\n        "),r("div",[r("h1",{attrs:{className:"text-5xl"}},[e._v("{ title }")]),e._v(" "),r("p",{attrs:{className:"text-xl mb-5"}},[e._v("{ description }")]),e._v(" "),r("hr",{attrs:{className:"mb-5"}}),e._v(" "),r("a",{attrs:{className:"twitter-timeline",href:"https://twitter.com/deno_land?ref_src=twsrc%5Etfw"}},[e._v("\n                Tweets by deno_land\n            ")])]),e._v("\n    )\n}\n\nexport default DenoTweets")])],1),r("p",[e._v("Here, you are creating a component to control the display of the Deno tweets.")])]),r("li",[r("p",[e._v("Create your React App file to handle the display of your components.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/components/App.tsx",language:"tsx"}},[e._v("import DenoTweets from './DenoTweets'\nimport ReactDOM from 'react-dom'\nimport * as React from 'react'\n\nReactDOM.render(\n    "),e._v('"Deno"} description={"A secure runtime for JavaScript and TypeScript"} />,\n    document.getElementById(\'root\')\n);')])],1),r("p",[e._v("This is the entry point React file. This file will import all of your React components and render them.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Build your environment.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ node_modules/.bin/webpack-cli --config webpack.config.js")])],1),r("p",[e._v("Now that you have created your components, Webpack will transpile them so the browser can understand the contents.")])]),r("li",[r("p",[e._v("Start your server.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1),r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser.")]),r("p",[e._v("You should the something similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_react_app/deno_tweets/1.png"}})])])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:5,parts:5}})],1)};wt._withStripped=!0;const kt={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-react/part-5"],meta:{title:"Creating A Client Side Rendered App (React)",subtitle:"Part 5: Creating The React Components"}};var xt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-react",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (React)",subtitle:"Part 5: Creating The React Components"}}},Tt=Object(ge.a)(xt,wt,[],!1,null,null,null);Tt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_react_app/deno_tweets/part_5.vue";var St=Tt.exports,Dt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:3}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to create a simple static HTML app powered by Drash — where the HTML is rendered by the server. You will learn how to make a Drash server serve "),r("code",[e._v("text/html")]),e._v(" responses to clients. The responses will include server-rendered HTML.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below are samples of what you will create.")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/1.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/2.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/3.png"}})]),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:3}})],1)};Dt._withStripped=!0;const Rt={paths:["/advanced-tutorials/creating-a-server-side-rendered-app/","/advanced-tutorials/creating-a-server-side-rendered-app/introduction"],meta:{title:"Creating A Server Side Rendered App",subtitle:"Introduction"}};var Ct={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-server-side-rendered-app",title:"Creating A Server Side Rendered App",subtitle:"Introduction"}}},Et=Object(ge.a)(Ct,Dt,[],!1,null,null,null);Et.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_server_side_rendered_app/introduction.vue";var qt=Et.exports,jt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:3}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("The server you will create in this tutorial part will handle requests to three resources. These resources will serve HTML documents.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file.")]),r("p",[r("code-block",{attrs:{title:"app.ts",language:"typescript",line_highlight:"3-5"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport AboutResource from "./about_resource.ts";\nimport ContactResource from "./contact_resource.ts";\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [\n    AboutResource,\n    ContactResource,\n    HomeResource,\n  ]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("p",[e._v("When this file is run, it will load in Drash, set up your server, and start your server.")]),r("p",[e._v("You will notice that there are "),r("code",[e._v("import")]),e._v(" statements for your resource files (highlighted). You will be creating these files in the next tutorial part. For now, you just need to make sure your server expects and registers them.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your app in its current state, you will get an error. The TypeScript compiler will throw an error stating it cannot resolve your resource files. So, before you verify that your server is working, you need to comment out the lines relevant to your resource files.")]),r("ol",[r("li",[e._v("Comment out the code relevant to your resource file."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3-5,10-12"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \n// import AboutResource from "./about_resource.ts";\n// import ContactResource from "./contact_resource.ts";\n// import HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [\n//    AboutResource,\n//    ContactResource,\n//    HomeResource,\n  ]\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$  curl localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("Not Found")]),r("p",[e._v("You will receive a "),r("code",[e._v("404 Not Found")]),e._v(" error because your server does not have any resources. This is expected. You will be creating your resource next.")])],1),r("li",[e._v("Before moving on, uncomment the code you commented out."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3-5,10-12"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport AboutResource from "./about_resource.ts";\nimport ContactResource from "./contact_resource.ts";\nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [\n    AboutResource,\n    ContactResource,\n    HomeResource,\n  ]\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:3}})],1)};jt._withStripped=!0;const Ht={paths:["/advanced-tutorials/creating-a-server-side-rendered-app/part-1"],meta:{title:"Creating A Server Side Rendered App",subtitle:"Part 1: Creating The Server"}};var $t={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-server-side-rendered-app",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Server Side Rendered App",subtitle:"Part 1: Creating The Server"}}},At=Object(ge.a)($t,jt,[],!1,null,null,null);At.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_server_side_rendered_app/part_1.vue";var Pt=At.exports,Yt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:3}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Your server will not be able to serve HTML until you give it the resources that can do so. In Part 1, you made your server expect three resources. You will create these files next and will verify your server runs properly with them in the Verification section.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    about_resource.ts\n    app.ts\n    contact_resource.ts\n    home_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your home resource file.")]),r("p",[r("code-block",{attrs:{title:"home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nconst decoder = new TextDecoder();\n\nexport default class HomeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/"\n  ];\n\n  public GET() {\n    try {\n      let fileContentsRaw = Deno.readFileSync("./html/home.html");\n      let template = decoder.decode(fileContentsRaw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error reading HTML template.`\n      );\n    }\n    return this.response;\n  }\n}')])],1),r("p",[e._v("Your home resource will serve an HTML file with the following text: This is the home page!")])]),r("li",[r("p",[e._v("Create your contact resource file.")]),r("p",[r("code-block",{attrs:{title:"contact_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nconst decoder = new TextDecoder();\n\nexport default class ContactResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/contact"\n  ];\n\n  public GET() {\n    try {\n      let fileContentsRaw = Deno.readFileSync("./html/contact.html");\n      let template = decoder.decode(fileContentsRaw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error reading HTML template.`\n      );\n    }\n    return this.response;\n  }\n}')])],1),r("p",[e._v("Your contact resource will serve an HTML file with the following text: This is the contact page!")])]),r("li",[r("p",[e._v("Create your about resource file.")]),r("p",[r("code-block",{attrs:{title:"about_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nconst decoder = new TextDecoder();\n\nexport default class AboutResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/about"\n  ];\n\n  public GET() {\n    try {\n      let fileContentsRaw = Deno.readFileSync("./html/about.html");\n      let template = decoder.decode(fileContentsRaw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error reading HTML template.`\n      );\n    }\n    return this.response;\n  }\n}')])],1),r("p",[e._v("Your about resource will serve an HTML file with the following text: This is the about page!")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 1. Now that you have your resource files that your server is expecting, you can start your server and make a "),r("code",[e._v("GET")]),e._v(" requests to them.")]),r("ol",[r("li",[e._v("Run your app."),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser."),r("p",[e._v("You should receive the following response for all of your resources:")]),r("p",[r("code-block",{attrs:{header:!1}},[e._v("Error reading HTML template.")])],1),r("p",[e._v("This is the proper response since you have not written your HTML files yet.")])])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:3}})],1)};Yt._withStripped=!0;const Lt={paths:["/advanced-tutorials/creating-a-server-side-rendered-app/part-2"],meta:{title:"Creating A Server Side Rendered App",subtitle:"Part 2: Creating The Resources"}};var It={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-server-side-rendered-app",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Server Side Rendered App",subtitle:"Part 2: Creating The Resources"}}},Mt=Object(ge.a)(It,Yt,[],!1,null,null,null);Mt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_server_side_rendered_app/part_2.vue";var Ot=Mt.exports,Bt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:3}}),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ html/\n        about.html\n        contact.html\n        home.html\n    about_resource.ts\n    app.ts\n    contact_resource.ts\n    home_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your Home HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/html/home.html",language:"html"}},[e._v(e._s(e.home_html))])],1)]),r("li",[r("p",[e._v("Create your Contact HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/html/contact.html",language:"html"}},[e._v(e._s(e.contact_html))])],1)]),r("li",[r("p",[e._v("Create your About HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/html/about.html",language:"html"}},[e._v(e._s(e.about_html))])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2.")]),r("ol",[r("li",[e._v("Run your app."),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser.")]),r("p",[e._v("You should receive a response similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/1.png"}})])]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/contact")]),e._v(" in your browser.")]),r("p",[e._v("You should receive a response similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/2.png"}})])]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/about")]),e._v(" in your browser.")]),r("p",[e._v("You should receive a response similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_static_html_app/about_me/3.png"}})])])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:3}})],1)};Bt._withStripped=!0;const Gt={paths:["/advanced-tutorials/creating-a-server-side-rendered-app/part-3"],meta:{title:"Creating A Server Side Rendered App",subtitle:"Part 3: Creating The HTML Files"}};var Nt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-server-side-rendered-app",toc:["Folder Structure End State","Steps","Verification"],title:"Creating A Server Side Rendered App",subtitle:"Part 3: Creating The HTML Files",about_html:Vt,contact_html:Ft,home_html:Ut}}};const Ut='<!DOCTYPE html>\n<html class="h-full w-full">\n  <head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n    <title>Home</title>\n  </head>\n  <body style="background: #f4f4f4;">\n    <div style="max-width: 640px; margin: 100px auto;">\n      <h1 class="text-5xl">Home</h1>\n      <p class="text-xl mb-5">This is the home page!</p>\n    </div>\n  </body>\n</html>\n',Vt='<!DOCTYPE html>\n<html class="h-full w-full">\n  <head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n    <title>About</title>\n  </head>\n  <body style="background: #f4f4f4;">\n    <div style="max-width: 640px; margin: 100px auto;">\n      <h1 class="text-5xl">About</h1>\n      <p class="text-xl mb-5">This is the about page!</p>\n    </div>\n  </body>\n</html>\n',Ft='<!DOCTYPE html>\n<html class="h-full w-full">\n  <head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n    <title>Contact</title>\n  </head>\n  <body style="background: #f4f4f4;">\n    <div style="max-width: 640px; margin: 100px auto;">\n      <h1 class="text-5xl">Contact</h1>\n      <p class="text-xl mb-5">This is the contact page!</p>\n    </div>\n  </body>\n</html>\n';var Wt=Nt,Kt=Object(ge.a)(Wt,Bt,[],!1,null,null,null);Kt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_server_side_rendered_app/part_3.vue";var Jt=Kt.exports,zt=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to create a simple Vue application powered by Drash. You will learn how to make a Drash server serve a "),r("code",[e._v("text/html")]),e._v(" response to clients. The response will include some Vue code so that it will mount and render on the screen. Your Vue app will display Deno tweets.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below is a sample of what you will create.")]),r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_vue_app/deno_tweets/part_4.png"}}),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}})],1)};zt._withStripped=!0;const Qt={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-vue","/advanced-tutorials/creating-a-client-side-rendered-app-vue/introduction"],meta:{title:"Creating A Client Side Rendered App (Vue)",subtitle:"Introduction"}};var Xt={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-vue",title:"Creating A Client Side Rendered App (Vue)",subtitle:"Introduction"}}},Zt=Object(ge.a)(Xt,zt,[],!1,null,null,null);Zt.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_vue_app/deno_tweets/introduction.vue";var er=Zt.exports,tr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("The server you will create in this tutorial part will handle requests to a single resource. That resource will serve an HTML template and that HTML template will serve your Vue app.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file.")]),r("p",[r("code-block",{attrs:{title:"app.ts",language:"typescript",line_highlight:"3"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [HomeResource],\n  directory: "/path/to/your/project",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("p",[e._v("When this file is run, it will load in Drash, set up your server, and start your server.")]),r("p",[e._v("You will notice that there is an "),r("code",[e._v("import")]),e._v(" statement for your resource file (highlighted). You will be creating this file in the next tutorial part. For now, you just need to make sure your server expects and registers it.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your app in its current state, you will get an error. The TypeScript compiler will throw an error stating it cannot resolve your resource file. So, before you verify that your server is working, you need to comment out the lines relevant to your resource file.")]),r("ol",[r("li",[e._v("Comment out the code relevant to your resource file."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\n// import HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n//  resources: [HomeResource],\n  directory: "/path/to/your/project",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("Not Found")]),r("p",[e._v("You will receive a "),r("code",[e._v("404 Not Found")]),e._v(" error because your server does not have any resources. This is expected. You will be creating your resource next.")])],1),r("li",[e._v("Before moving on, uncomment the code you commented out."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3,7"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [HomeResource],\n  directory: "/path/to/your/project",\n  static_paths: ["/public"]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}})],1)};tr._withStripped=!0;const rr={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-vue/part-1"],meta:{title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 1: Creating The Server"}};var sr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-vue",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 1: Creating The Server"}}},or=Object(ge.a)(sr,tr,[],!1,null,null,null);or.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_vue_app/deno_tweets/part_1.vue";var ar=or.exports,nr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Your server will not be able to serve your HTML file until you give it the resource that can do so. In Part 1, you made your server expect a home resource. You will create this file next and will verify your server runs properly with it in the Verification section.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    home_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your home resource file.")]),r("p",[r("code-block",{attrs:{title:"home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nconst decoder = new TextDecoder();\n\nexport default class HomeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/"\n  ];\n\n  public GET() {\n    try {\n      let fileContentsRaw = Deno.readFileSync("./index.html");\n      let template = decoder.decode(fileContentsRaw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error reading HTML template.`\n      );\n    }\n    return this.response;\n  }\n}')])],1),r("p",[e._v("Your home resource will serve an HTML file and that file will display your Vue app. You will be creating this HTML file in the next tutorial part.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 1. Now that you have your resource file that your server is expecting, you can start your server and make a "),r("code",[e._v("GET")]),e._v(" request to it.")]),r("ol",[r("li",[e._v("Run your app."),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser. You should receive the following response:")]),r("p",[r("code-block",{attrs:{header:!1}},[e._v("Error reading HTML template.")])],1),r("p",[e._v("This is the proper response since you have not written your "),r("code",[e._v("index.html")]),e._v(" yet.")])])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}})],1)};nr._withStripped=!0;const ir={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-vue/part-2"],meta:{title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 2: Creating The Resource"}};var lr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-vue",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 2: Creating The Resource"}}},cr=Object(ge.a)(lr,nr,[],!1,null,null,null);cr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_vue_app/deno_tweets/part_2.vue";var ur=cr.exports,dr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}}),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    home_resource.ts\n    index.html")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/index.html",language:"html"}},[e._v(e._s(e.index_html))])],1),r("p",[e._v("To make things easier, your HTML file comes with the embedded Twitter Timeline widget. This widget will show Deno's tweets.")]),r("p",[e._v("You will notice there are two Vue template variables: "),r("code",[e._v("title")]),e._v(" and "),r("code",[e._v("description")]),e._v(". You will be assigning these variables in the next tutorial part.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser. You should receive a response similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_vue_app/deno_tweets/part_3.png"}})])])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}})],1)};dr._withStripped=!0;const pr={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-vue/part-3"],meta:{title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 3: Creating The HTML Template"}};var hr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-vue",toc:["Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 3: Creating The HTML Template",index_html:_r}}};const _r='<!DOCTYPE html>\n<html class="h-full w-full">\n  <head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n    <title>Deno Tweets</title>\n  </head>\n  <body>\n    <div id="vue_app" style="max-width: 640px; margin: 0 auto;">\n      <h1 class="text-5xl">{{ title }}</h1>\n      <p class="text-xl mb-5">{{ description }}</p>\n      <hr class="mb-5">\n      <a class="twitter-timeline" href="https://twitter.com/deno_land?ref_src=twsrc%5Etfw">Tweets by deno_land</a>\n      <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"><\/script>\n    </div>\n  </body>\n  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n  <script src="/public/vue_app.js"><\/script>\n</html>\n';var vr=hr,mr=Object(ge.a)(vr,dr,[],!1,null,null,null);mr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_vue_app/deno_tweets/part_3.vue";var fr=mr.exports,gr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("By now, you should have your server serving an HTML file; and that HTML file should be displaying Deno's tweets. In this next tutorial part, you will create the Vue app and assign the following Vue variables: "),r("code",[e._v("title")]),e._v(" and "),r("code",[e._v("description")]),e._v(".")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ public/\n        vue_app.js\n    app.ts\n    home_resource.ts\n    index.html")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your Vue app file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/public/vue_app.js",language:"javascript"}},[e._v('console.log("vue_app.js is now included!");\n\nconst app = new Vue({\n  el: \'#vue_app\',\n  data: {\n    title: "Deno",\n    description: "A secure runtime for JavaScript and TypeScript"\n  }\n})')])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser. You should receive a response similar to the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_vue_app/deno_tweets/part_4.png"}})])])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}})],1)};gr._withStripped=!0;const br={paths:["/advanced-tutorials/creating-a-client-side-rendered-app-vue/part-4"],meta:{title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 4: Creating The Vue App"}};var yr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-a-client-side-rendered-app-vue",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating A Client Side Rendered App (Vue)",subtitle:"Part 4: Creating The Vue App"}}},wr=Object(ge.a)(yr,gr,[],!1,null,null,null);wr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_a_vue_app/deno_tweets/part_4.vue";var kr=wr.exports,xr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to create a simple API powered by Drash. You will learn how to make a Drash server serve "),r("code",[e._v("application/json")]),e._v(" responses to clients based on the clients' requests. The data your Drash server will serve will be data on coffees and teas.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below are samples of what you will create.")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_an_api/coffee_and_tea/2.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_an_api/coffee_and_tea/1.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_an_api/coffee_and_tea/3.png"}})]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_an_api/coffee_and_tea/4.png"}})]),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:4}})],1)};xr._withStripped=!0;const Tr={paths:["/advanced-tutorials/creating-an-api/","/advanced-tutorials/creating-an-api/introduction"],meta:{title:"Creating An API"}};var Sr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-an-api",title:"Creating An API",subtitle:"Introduction"}}},Dr=Object(ge.a)(Sr,xr,[],!1,null,null,null);Dr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_an_api/introduction.vue";var Rr=Dr.exports,Cr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Before you start building your application, you need the data that will drive this tutorial. For simplicity, you will simulate retrieving records from a database. You will pretend that you have queried a database for coffee and tea records. This data will be parsable as JSON.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create the "),r("code",[e._v("coffee.json")]),e._v(" file.")]),r("p",[r("code-block",{attrs:{title:"coffee.json",language:"json"}},[e._v('{\n  "17": {\n    "id": 17,\n    "name": "Light Roast: Breakfast Blend",\n    "price": 2.25\n  },\n  "28": {\n    "id": 28,\n    "name": "Medium Roast: Classico",\n    "price": 2.50\n  },\n  "32": {\n    "id": 32,\n    "name": "Medium Roast: Premium Single Origin (Sumatra)",\n    "price": 3.50\n  }\n}')])],1)]),r("li",[r("p",[e._v("Create the "),r("code",[e._v("tea.json")]),e._v(" file.")]),r("p",[r("code-block",{attrs:{title:"tea.json",language:"json"}},[e._v('{\n  "50": {\n    "id": 50,\n    "name": "Earl Gray",\n    "price": 4.00\n  },\n  "68": {\n    "id": 68,\n    "name": "Citrus Chamomile",\n    "price": 3.50\n  },\n  "83": {\n    "id": 83,\n    "name": "Imperial Blend",\n    "price": 4.50\n  }\n}')])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("This step is optional.")]),r("p",[e._v("Since you just made JSON files and will be parsing these files as JSON in a later part, you should test that deno can parse it as JSON.")]),r("ol",[r("li",[e._v("Open up the deno REPL by typing in "),r("code",[e._v("deno")]),e._v(" in your terminal."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno\n>")])],1),r("li",[e._v("Parse your files."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v('> let coffee = Deno.readFileSync("./coffee.json");\nundefined\n\n> let tea = Deno.readFileSync("./tea.json");\nundefined\n\n> const decoder = new TextDecoder();\nundefined\n\n> JSON.parse(decoder.decode(coffee));\n{ 17: { id: 17, name: "Light Roast: Breakfast Blend", price: 2.25 }, 28: { id: 28, name: "Medium Roast: Classico", price: 2.5 }, 32: { id: 32, name: "Medium Roast: Premium Single Origin (Sumatra)", price: 3.5 } }\n\n> JSON.parse(decoder.decode(tea));\n{ 50: { id: 50, name: "Earl Gray", price: 4 }, 68: { id: 68, name: "Citrus Chamomile", price: 3.5 }, 83: { id: 83, name: "Imperial Blend", price: 4.5 } }\n\n>')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:4}})],1)};Cr._withStripped=!0;const Er={paths:["/advanced-tutorials/creating-an-api/part-1"],meta:{title:"Creating An API",subtitle:"Part 1: Simulate Database Records"}};var qr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-an-api",title:"Creating An API",subtitle:"Part 1: Simulate Database Records",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},jr=Object(ge.a)(qr,Cr,[],!1,null,null,null);jr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_an_api/part_1.vue";var Hr=jr.exports,$r=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v('Now that you have your "database" records in place from Part 1, you need a server to handle requests for that data. The server you will create in this tutorial part will handle requests via the following resources:')]),r("ul",[r("li",[r("code",[e._v("CoffeeResource")])]),r("li",[r("code",[e._v("TeaResource")])])]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file.")]),r("p",[e._v("When this file is run, it will load in Drash, set up your server, and start your server.")]),r("p",[e._v("You will notice that there are "),r("code",[e._v("import")]),e._v(" statements for your resource files (highlighted). You will be creating these files in the next tutorial part. For now, you just need to make sure your server expects and registers them.")]),r("p",[r("code-block",{attrs:{title:"app.ts",language:"typescript",line_highlight:"3-4,9-10"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport CoffeeResource from "./coffee_resource.ts";\nimport TeaResource from "./tea_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    CoffeeResource,\n    TeaResource\n  ],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your app in its current state, you will get an error. The TypeScript compiler will throw an error stating it cannot resolve your resource files. So, before you verify that your server is working, you need to comment out the lines relevant to your resource files.")]),r("ol",[r("li",[e._v("Comment out the code relevant to your resource files."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3-4,9-10"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\n// import CoffeeResource from "./coffee_resource.ts";\n// import TeaResource from "./tea_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    // CoffeeResource,\n    // TeaResource\n  ],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Not Found"')]),r("p",[e._v("You will receive a "),r("code",[e._v("404 Not Found")]),e._v(" error because your server does not have any resources. This is expected. You will be creating your resources next.")])],1),r("li",[e._v("Before moving on, uncomment the code you commented out."),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"3-4,9-10"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport CoffeeResource from "./coffee_resource.ts";\nimport TeaResource from "./tea_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    CoffeeResource,\n    TeaResource\n  ],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:4}})],1)};$r._withStripped=!0;const Ar={paths:["/advanced-tutorials/creating-an-api/part-2"],meta:{title:"Creating An API",subtitle:"Part 2: Creating The Server"}};var Pr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-an-api",subtitle:"Part 2: Creating The Server",title:"Creating An API",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},Yr=Object(ge.a)(Pr,$r,[],!1,null,null,null);Yr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_an_api/part_2.vue";var Lr=Yr.exports,Ir=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,title:e.title,subtitle:e.subtitle,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Your server will not be able to handle requests for coffee and tea records until you give it resources that can send your records back to clients. In Part 2, you made your server expect a coffee and tea resource. You will create these files next and will verify your server runs properly with them in the Verification section.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    coffee.json\n    coffee_resource.ts\n    tea.json\n    tea_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your coffee resource file.")]),r("p",[r("code-block",{attrs:{language:"typescript",title:"coffee_resource.ts"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class CoffeeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/coffee/:id"\n  ];\n\n  public GET() {\n    let coffeeId = this.request.getPathParam("id");\n    this.response.body = this.getCoffee(coffeeId);\n    return this.response;\n  }\n\n  protected getCoffee(coffeeId: number) {\n    let record = null;\n\n    try {\n      let fileContentsRaw = Deno.readFileSync("./coffee.json");\n      let decoder = new TextDecoder();\n      let records = decoder.decode(fileContentsRaw);\n      records = JSON.parse(records);\n      record = records[coffeeId];\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error getting coffee with ID "${coffeeId}". Error: ${error.message}.`\n      );\n    }\n\n    if (!record) {\n      throw new Drash.Exceptions.HttpException(\n        404,\n        `Coffee with ID "${coffeeId}" not found.`\n      );\n    }\n\n    return record;\n  }\n}')])],1),r("p",[e._v("Your coffee resource will try to match the specified coffee "),r("code",[e._v("id")]),e._v(' path param to a coffee ID in your "database". If the '),r("code",[e._v("id")]),e._v(" is matched, then the record will be sent as the response. If not, then an error response will be sent.")])]),r("li",[r("p",[e._v("Create your tea resource file."),r("code-block",{attrs:{title:"tea_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class TeaResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/tea/:id"\n  ];\n\n  public GET() {\n    let teaId = this.request.getPathParam("id");\n    this.response.body = this.getTea(teaId);\n    return this.response;\n  }\n\n  protected getTea(teaId: number) {\n    let record = null;\n\n    try {\n      let fileContentsRaw = Deno.readFileSync("./tea.json");\n      let decoder = new TextDecoder();\n      let records = decoder.decode(fileContentsRaw);\n      records = JSON.parse(records);\n      record = records[teaId];\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        `Error getting tea with ID "${teaId}". Error: ${error.message}.`\n      );\n    }\n\n    if (!record) {\n      throw new Drash.Exceptions.HttpException(\n        404,\n        `Tea with ID "${teaId}" not found.`\n      );\n    }\n\n    return record;\n  }\n}')])],1),r("p",[e._v("Your tea resource will try to match the specified tea "),r("code",[e._v("id")]),e._v(' path param to a tea ID in your "database". If the '),r("code",[e._v("id")]),e._v(" is matched, then the record will be sent as the response. If not, then an error response will be sent.")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Stop your server ("),r("code",[e._v("ctrl + c")]),e._v(") if you still have it running from Part 2. Now that you have your resource files that your server is expecting, you can start your server and make "),r("code",[e._v("GET")]),e._v(" requests to them.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[r("p",[e._v("Make a coffee request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/coffee/17")]),e._v(" in your browser.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/coffee/17")])],1),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "id": 17,\n  "name": "Light Roast: Breakfast Blend",\n  "price": 2.25\n}')])],1)]),r("li",[r("p",[e._v("Make a coffee request to "),r("code",[e._v("localhost:1447/coffee/32")]),e._v(". You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "id": 32,\n  "name": "Medium Roast: Premium Single Origin (Sumatra)",\n  "price": 3.5\n}')])],1)]),r("li",[r("p",[e._v("Make a bad coffee request to "),r("code",[e._v("localhost:1447/coffee/9000")]),e._v(". You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v('"Coffee with ID \\"9000\\" not found."')])],1)]),r("li",[r("p",[e._v("Make a tea request to "),r("code",[e._v("localhost:1447/tea/50")]),e._v(". You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "id": 50,\n  "name": "Earl Gray",\n  "price": 4\n}')])],1)]),r("li",[r("p",[e._v("Make a tea request to "),r("code",[e._v("localhost:1447/tea/68")]),e._v(". You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "id": 68,\n  "name": "Citrus Chamomile",\n  "price": 3.5\n}')])],1)]),r("li",[r("p",[e._v("Make a bad tea request to "),r("code",[e._v("localhost:1447/tea/2710")]),e._v(".")]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("p",[r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v('"Tea with ID \\"2710\\" not found."')])],1)])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:4}})],1)};Ir._withStripped=!0;const Mr={paths:["/advanced-tutorials/creating-an-api/part-3"],meta:{title:"Creating An API",subtitle:"Part 3: Creating The Resources"}};var Or={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-an-api",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating An API",subtitle:"Part 3: Creating The Resources"}}},Br=Object(ge.a)(Or,Ir,[],!1,null,null,null);Br.options.__file="src/drash/vue/pages/advanced_tutorials/creating_an_api/part_3.vue";var Gr=Br.exports,Nr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,title:e.title,subtitle:e.subtitle,toc:e.toc}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Currently, when clients make requests to your records, they receive the following response schema for "),r("code",[e._v("200")]),e._v(" responses ...")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "id": 50,\n  "name": "Earl Gray",\n  "price": 4\n}')])],1),r("p",[e._v("... and the following response schema for error responses (like the "),r("code",[e._v("404")]),e._v(" response below) ...")]),r("p",[r("code-block",{attrs:{header:!1,language:"text"}},[e._v('"Tea with ID \\"2710\\" not found."')])],1),r("p",[e._v("This is perfectly fine to some clients, but to others it does not contain enough information. Some clients want a "),r("code",[e._v("200")]),e._v(" response schema like ...")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 200,\n  "status_text": "OK",\n  "data": {\n    "id": 50,\n    "name": "Earl Gray",\n    "price": 4\n  },\n  "request": {\n    "method": "GET",\n    "uri": "/tea/50"\n  }\n}')])],1),r("p",[e._v("... and an error response schema like ...")]),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 404,\n  "status_text": "Not Found",\n  "data": null,\n  "request": {\n    "method": "GET",\n    "uri": "/tea/2710"\n  }\n}')])],1),r("p",[e._v("In this tutorial part, you will override and replace "),r("code",[e._v("Drash.Http.Response")]),e._v(" so it can send a more informative response schema.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    app.ts\n    coffee.json\n    coffee_resource.ts\n    tea.json\n    tea_resource.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("response.ts")]),e._v(" file that will be used to override "),r("code",[e._v("Drash.Http.Response")]),e._v(".")]),r("p",[r("code-block",{attrs:{title:"response.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class Response extends Drash.Http.Response {\n  public generateResponse(): any {\n    let schema = {\n      status_code: this.status_code,\n      status_message: this.getStatusMessage(),\n      data: this.body,\n      request: {\n        method: this.request.method.toUpperCase(),\n        uri: this.request.uri\n      }\n    };\n\n    return JSON.stringify(schema);\n  }\n}')])],1),r("p",[e._v("The only method you need to override is "),r("code",[e._v("generateResponse()")]),e._v(". The following methods and objects are accessible from the "),r("code",[e._v("Drash.Http.Response")]),e._v(".")]),r("ul",[r("li",[r("code",[e._v("this.status_code")])]),r("li",[r("code",[e._v("this.getStatusMessage()")])]),r("li",[r("code",[e._v("this.body")])]),r("li",[r("code",[e._v("this.request")])])])]),r("li",[r("p",[e._v("Import your "),r("code",[e._v("response.ts")]),e._v(" file and replace "),r("code",[e._v("Drash.Http.Response")]),e._v(" in your "),r("code",[e._v("app.ts")]),e._v(".")]),r("p",[r("code-block",{attrs:{title:"app.ts",language:"typescript",line_highlight:"3,4"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nimport response from "./response.ts";\nDrash.Http.Response = response;\n\nimport CoffeeResource from "./coffee_resource.ts";\nimport TeaResource from "./tea_resource.ts";\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    CoffeeResource,\n    TeaResource\n  ],\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("p",[e._v("Now, when your Drash server runs, it will use your response class instead of its original "),r("code",[e._v("Drash.Http.Response")]),e._v(".")])])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Now that you have your new response object that can generate a more informative response schema, you can restart your server and test it out.")]),r("ol",[r("li",[e._v("Run your app."),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1)]),r("li",[e._v("Make a coffee request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/coffee/17")]),e._v(" in your browser."),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/coffee/17")])],1),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):"),r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 200,\n  "status_message": "OK",\n  "data": {\n    "id": 17,\n    "name": "Light Roast: Breakfast Blend",\n    "price": 2.25\n  },\n  "request": {\n    "method": "GET",\n    "uri": "/coffee/17"\n  }\n}')])],1)]),r("li",[e._v("Make a bad coffee request to "),r("code",[e._v("localhost:1447/coffee/9000")]),e._v(". You should receive the following response (we pretty-printed the response for you):"),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 404,\n  "status_message": "Not Found",\n  "data": "Coffee with ID \\"9000\\" not found.",\n  "request": {\n    "method": "GET",\n    "uri": "/coffee/9000"\n  }\n}')])],1)]),r("li",[e._v("Make a tea request to "),r("code",[e._v("localhost:1447/tea/50")]),e._v(". You should receive the following response (we pretty-printed the response for you):"),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 200,\n  "status_message": "OK",\n  "data": {\n    "id": 50,\n    "name": "Earl Gray",\n    "price": 4\n  },\n  "request": {\n    "method": "GET",\n    "uri": "/tea/50"\n  }\n}')])],1)]),r("li",[e._v("Make a bad tea request to "),r("code",[e._v("localhost:1447/tea/1337")]),e._v(". You should receive the following response (we pretty-printed the response for you):"),r("p",[r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "status_code": 404,\n  "status_message": "Not Found",\n  "data": "Tea with ID \\"1337\\" not found.",\n  "request": {\n    "method": "GET",\n    "uri": "/tea/1337"\n  }\n}')])],1)])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:4}})],1)};Nr._withStripped=!0;const Ur={paths:["/advanced-tutorials/creating-an-api/part-4"],meta:{title:"Creating An API",subtitle:"Part 4: Modifying The Response Schema"}};var Vr={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/creating-an-api",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],title:"Creating An API",subtitle:"Part 4: Modifying The Response Schema"}}},Fr=Object(ge.a)(Vr,Nr,[],!1,null,null,null);Fr.options.__file="src/drash/vue/pages/advanced_tutorials/creating_an_api/part_4.vue";var Wr=Fr.exports,Kr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{subtitle:e.subtitle,title:e.title}},[r("h2-hash",[e._v("About The Advanced Tutorials")]),r("p",[e._v("The advanced tutorials assume you have read through the following tutorials:")]),r("ul",[r("li",[e._v("Resources")]),r("li",[e._v("Requests")]),r("li",[e._v("Servers")])]),r("p",[e._v("Understanding the above tutorials is crucial to understanding all the moving parts in the advanced tutorials. Please make sure you understand the above tutorials before moving on to an advanced tutorial.")]),r("p",[e._v("All advanced tutorials come as a series of tutorial parts. The parts are ordered in a way to help you build towards the tutorial's end state from scratch. In each part, you will see a Folder Structure End State section. That section shows you what your project's folder structure should look like by the time you finish the part you are on. In addition, there will be a Verification section (the last section of each part) to help you match your end state to the tutorial's end state.")])],1)};Kr._withStripped=!0;const Jr={paths:["/advanced-tutorials","/advanced-tutorials/introduction"],meta:{title:"Advanced Tutorials",subtitle:"Introduction"}};var zr={data:()=>({title:"Advanced Tutorials",subtitle:"Introduction"})},Qr=Object(ge.a)(zr,Kr,[],!1,null,null,null);Qr.options.__file="src/drash/vue/pages/advanced_tutorials/introduction.vue";var Xr=Qr.exports,Zr=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:6}}),r("hr"),r("h2-hash",[e._v("Overview")]),r("p",[e._v("In this tutorial series, you will learn how to create a Drash server within a Docker environment. You will use the "),r("code",[e._v("docker-compose")]),e._v(" command and Nginx or Apache acting as the proxy to pass connections to the Drash server. You will learn how to set up the "),r("code",[e._v(".dockerfile")]),e._v(" files and configure Nginx or Apache for your Docker environment. You will also learn how to serve static "),r("code",[e._v(".js")]),e._v(" and "),r("code",[e._v(".css")]),e._v(" files.")]),r("p",[e._v("Although this tutorial has code blocks that you can copy and paste, it is highly recommended that you read about "),r("a",{attrs:{href:"https://docs.docker.com/compose/"}},[e._v("Docker Compose")]),e._v(" so you have knowledge of how it works.")]),r("p",{staticClass:"mt-10 text-center"},[r("a-get-started",{attrs:{href:e.base_url+"/#"+e.base_uri+"/part-1"}})],1),r("hr"),r("h2-hash",[e._v("End State")]),r("p",[e._v("Below are samples of what you will create.")]),r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_docker_container/docker_compose_setup/1.png"}}),r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_docker_container/docker_compose_setup/2.png"}}),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:-1,parts:6}})],1)};Zr._withStripped=!0;const es={paths:["/advanced-tutorials/using-drash-with-docker-compose","/advanced-tutorials/using-drash-with-docker-compose/introduction"],meta:{title:"Using Drash With Docker Compose",subtitle:"Introduction"}};var ts={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Introduction"}}},rs=Object(ge.a)(ts,Zr,[],!1,null,null,null);rs.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/introduction.vue";var ss=rs.exports,os=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("You will be creating a basic Drash server. If you haven't read the "),r("a",{attrs:{href:"/#/tutorials/servers/creating-a-server"}},[e._v("Creating A Server")]),e._v(" section then do so before reading this tutorial.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ src/\n        app.ts")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("src")]),e._v(" directory.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ mkdir src")])],1)]),r("li",[r("p",[e._v("Create your app file.")]),r("p",[e._v("Your app file will contain a single resource: "),r("code",[e._v("HomeResource")]),e._v(".")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/src/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nclass HomeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/"\n  ];\n\n  public GET() {\n    this.response.body = \'Hello World!\';\n    return this.response;\n  }\n}\n\nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    HomeResource\n  ],\n});\n\nserver.run({\n  hostname: "drash_app_drash",\n  port: 1447\n});')])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("Verify that your app is working by running it.")]),r("ol",[r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net src/app.ts")])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:1,parts:6}})],1)};os._withStripped=!0;const as={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-1"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 1: Creating The Source Code"}};var ns={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 1: Creating The Source Code",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},is=Object(ge.a)(ns,os,[],!1,null,null,null);is.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_1.vue";var ls=is.exports,cs=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have a working Drash server, you can add it to the docker orchestration. In this tutorial part, you will be creating new services for Docker to build and start, such as a Drash container and an Nginx or Apache container.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ src/\n        app.ts\n    docker-compose.yml")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create the Compose file and create the service blocks.")]),r("p",[e._v("You will notice that there are "),r("code",[e._v(".dockerfile")]),e._v(" files mentioned, you will be creating this in the next tutorial part.")]),r("p",[e._v("You can choose to ignore either the Nginx or Apache service block, depending on which one you wish to use for a reverse proxy")]),r("code-block",{attrs:{title:"/path/to/your/project/docker-compose.yml",language:"yml"}},[e._v('version: \'3\'\n\nservices:\n\n  nginx:\n    container_name: drash_app_nginx\n    build:\n      context: .\n      dockerfile: .docker/nginx.dockerfile\n    volumes:\n      - ./src:/var/www/src\n    working_dir: /var/www/src\n    depends_on:\n      - drash\n    ports:\n      - "8080:80"\n    networks:\n      - drash-app-network\n\n  apache:\n    container_name: drash_app_apache\n    build:\n      context: .\n      dockerfile: .docker/apache.dockerfile\n    volumes:\n      - ./src:/var/www/src\n    working_dir: /var/www/src\n    depends_on:\n      - drash\n    ports:\n      - "8080:80"\n    networks:\n      - drash-app-network\n\n  drash:\n    container_name: drash_app_drash\n    build:\n      context: .\n      dockerfile: .docker/drash.dockerfile\n    volumes:\n      - ./src:/var/www/src\n    working_dir: /var/www/src\n    ports:\n      - "1447:1447"\n    command: bash -c "deno run --allow-net app.ts"\n    networks:\n      - drash-app-network\n\nnetworks:\n  drash-app-network:\n    driver: bridge')]),r("p",[e._v("You are mapping the "),r("code",[e._v("/path/to/your/project/src")]),e._v(" directory to directories inside the containers ("),r("code",[e._v("/var/www/src")]),e._v(").")]),r("p",[e._v("You have also specified a command for the Drash container to run when the container is up. In this case, that command will start the Drash server.")]),r("p",[e._v("You should also note that the port for the Drash container is the same as the port the Drash server is running on in "),r("code",[e._v("/path/to/your/project/src/app.ts")]),e._v(".")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("If you run your Docker application in its current state, you will get an error because the "),r("code",[e._v(".dockerfile")]),e._v(" files have not yet been created. Instead, verify your "),r("code",[e._v("docker-compose.yml")]),e._v(" file is configured properly.")]),r("ol",[r("li",[e._v("Check the file."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ docker-compose config")]),r("p",[e._v("You should not see any errors when running the above command. Instead, you should see the contents of your "),r("code",[e._v("docker-compose.yml")]),e._v(" file. That is how you know it is properly configured.")])],1)]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:2,parts:6}})],1)};cs._withStripped=!0;const us={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-2"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 2: Creating The Services"}};var ds={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 2: Creating The Services",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},ps=Object(ge.a)(ds,cs,[],!1,null,null,null);ps.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_2.vue";var hs=ps.exports,_s=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have your "),r("code",[e._v("docker-compose.yml")]),e._v(" file set up, you now need your "),r("code",[e._v(".dockerfile")]),e._v(" files (also known as "),r("code",[e._v("Dockerfile")]),e._v(" files). These files will tell Docker how it should build. The "),r("code",[e._v("Dockerfile")]),e._v(" files you will create in this tutorial part will be used by each container.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ .docker/\n        apache.dockerfile\n        drash.dockerfile\n        nginx.dockerfile\n    ▾ src/\n        app.ts\n    docker-compose.yml")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create the Drash "),r("code",[e._v("Dockerfile")]),e._v(".")]),r("p",[e._v("This file will be used by the Drash service block you added in the last tutorial part — inside of your "),r("code",[e._v("docker-compose.yml")]),e._v(" file.")]),r("p",[r("em",[r("strong",[e._v("Note that you can change the version of Deno to install to suit your requirements.")])])]),r("code-block",{attrs:{title:"/path/to/your/project/.docker/drash.dockerfile",language:"dockerfile"}},[e._v("FROM debian:stable-slim\n\nRUN apt update -y\nRUN apt install bash curl unzip -y\n\nRUN curl -fsSL https://deno.land/x/install/install.sh | DENO_INSTALL=/usr/local sh -s "+e._s(e.$conf.deno.latest_version)+'\nRUN export DENO_INSTALL="/root/.local"\nRUN export PATH="$DENO_INSTALL/bin:$PATH"')])],1),r("li",[r("p",[e._v("Create the Nginx "),r("code",[e._v("Dockerfile")]),e._v(".")]),r("p",[r("em",[e._v("If you prefer to use Apache, then skip this step and follow the next step below.")])]),r("p",[e._v("This file will be used by the Nginx container.")]),r("code-block",{attrs:{title:"/path/to/your/project/.docker/nginx.dockerfile",language:"dockerfile"}},[e._v('FROM nginx:latest\n\nRUN apt update\n\nCOPY ./.docker/conf/nginx.conf /etc/nginx/conf.d/default.conf\n\nENTRYPOINT ["nginx"]\nCMD ["-g", "daemon off;"]')]),r("p",[e._v("You will create the configuration file for Nginx in the next tutorial part. Nginx will use the configuration file pass connections to the Drash server.")])],1),r("li",[r("p",[e._v("Create the Apache "),r("code",[e._v("Dockerfile")]),e._v(".")]),r("p",[e._v("This file will be used by the Apache container.")]),r("code-block",{attrs:{title:"/path/to/your/project/.docker/apache.dockerfile",language:"dockerfile"}},[e._v('FROM httpd:2.4\n\nRUN apt update -y\nCOPY .docker/conf/apache.conf /usr/local/apache2/conf/demoapache.conf\nRUN echo "\\nInclude /usr/local/apache2/conf/demoapache.conf" >> /usr/local/apache2/conf/httpd.conf')]),r("p",[e._v("You will create the configuration file for Apache in the next tutorial part. Apache will use the configuration file pass connections to the Drash server.")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("There are no verification steps for this tutorial part.")]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:3,parts:6}})],1)};_s._withStripped=!0;const vs={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-3"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 1: Creating The Dockerfiles"}};var ms={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 1: Creating The Dockerfiles",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},fs=Object(ge.a)(ms,_s,[],!1,null,null,null);fs.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_3.vue";var gs=fs.exports,bs=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have your "),r("code",[e._v("Dockerfile")]),e._v(" files set up for the containers, you now need to create the configuration file for your selected proxy server. If you are using Nginx, then you will create an Nginx configuration file. If you are using Apache, then you will create an Apache configuration file.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ .docker/\n        ▾ conf/\n            apache.conf\n            nginx.conf\n        apache.dockerfile\n        drash.dockerfile\n        nginx.dockerfile\n    ▾ src/\n        app.ts\n    docker-compose.yml")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your Nginx configuration file.")]),r("p",[r("em",[e._v("If you are using Apache as your proxy server, then skip this step and follow the next step below.")])]),r("p",[e._v("This file is to configure Nginx to make it act as the proxy server.")]),r("code-block",{attrs:{title:"/path/to/your/project/.docker/conf/nginx.conf",language:"nginx"}},[e._v("server {\n  listen 80;\n  location / {\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Host $host;\n    proxy_set_header Origin \"\";\n    proxy_pass http://drash_app_drash:1447;\n  }\n}")]),r("p",[e._v("Any HTTP request will be routed to the Drash server.")])],1),r("li",[r("p",[e._v("Create your Apache configuration file.")]),r("p",[e._v("This file will make Apache act as a reverse proxy server, passing requests to the Drash server")]),r("code-block",{attrs:{title:"/path/to/your/project/.docker/conf/apache.conf",language:"apacheconf"}},[e._v("LoadModule proxy_module /usr/local/apache2/modules/mod_proxy.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\n\nServerName localhost\n\n<VirtualHost *:80>\n  ProxyPass / http://drash_app_drash:1447/\n</VirtualHost>")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("There are no verification steps for this tutorial part.")]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:4,parts:6}})],1)};bs._withStripped=!0;const ys={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-4"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 4: Creating The Proxy Server"}};var ws={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 4: Creating The Proxy Server",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},ks=Object(ge.a)(ws,bs,[],!1,null,null,null);ks.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_4.vue";var xs=ks.exports,Ts=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:5,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have your configuration set up for the containers, you can now build and start your Docker environment.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ .docker/\n        ▾ conf/\n            apache.conf\n            nginx.conf\n        apache.dockerfile\n        drash.dockerfile\n        nginx.dockerfile\n    ▾ src/\n        app.ts\n    docker-compose.yml")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Build the containers. This could take up to a few minutes.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ docker-compose build")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Start Docker. Running without the "),r("code",[e._v("-d")]),e._v(" option will allow you to see all output of the container and Drash server.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ docker-compose up")])],1)]),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:8080")]),e._v(" in your browser.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:8080")])],1),r("p",[e._v("You should receive the following response:")]),r("p",[r("code-block",{attrs:{header:!1}},[e._v('"Hello World!"')])],1)])]),r("div-alert-next-tutorial-part"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:5,parts:6}})],1)};Ts._withStripped=!0;const Ss={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-5"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 5: Starting The Environment"}};var Ds={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 5: Starting The Environment",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]}}},Rs=Object(ge.a)(Ds,Ts,[],!1,null,null,null);Rs.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_5.vue";var Cs=Rs.exports,Es=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc,base_url:e.base_url,base_uri:e.base_uri,subtitle:e.subtitle,title:e.title}},[r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:6,parts:6}}),r("hr"),r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Now that you have a working Docker environment, you can try linking client-side assets.")]),r("hr"),r("folder-structure-end-state",[r("code-block",{attrs:{header:!1,language:"text",line_numbers:!1}},[e._v("▾ /path/to/your/project/\n    ▾ .docker/\n        ▾ conf/\n            apache.conf\n            nginx.conf\n        apache.dockerfile\n        drash.dockerfile\n        nginx.dockerfile\n    ▾ src/\n        app.ts\n        index.html\n        index.js\n        index.css\n    docker-compose.yml")])],1),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Modify the content response type in your Drash server configs and update the "),r("code",[e._v("GET")]),e._v(" request method.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/src/app.ts",language:"typescript",line_highlight:"10-14,19"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nclass HomeResource extends Drash.Http.Resource {\n\n  static paths = [\n    "/"\n  ];\n\n  public GET() {\n    let fileContents = Deno.readFileSync("./index.html")\n    const decoder = new TextDecoder();\n    let template = decoder.decode(fileContents);\n    this.response.body = template;\n    return this.response;\n  }\n}\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [\n  HomeResource\n  ],\n});\n\nserver.run({\n  hostname: "drash_app_drash",\n  port: 1447\n});')])],1)]),r("li",[r("p",[e._v("Add the "),r("code",[e._v("--allow-read")]),e._v(" flag in your "),r("code",[e._v("docker-compose.yml")]),e._v(" file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/docker-compose.yml",language:"yml",line_highlight:"9"}},[e._v("version: '3'\n\nservices:\n\n ...\n\n drash:\n   ...\n   command: bash -c \"deno run --allow-net --allow-read app.ts\"\n   ...")])],1)]),r("li",[r("p",[e._v("Create your HTML file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/src/index.html",language:"html"}},[e._v(e._s(e.index_html))])],1)]),r("li",[r("p",[e._v("Create your CSS file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/src/index.css",language:"css"}},[e._v("h1, p {\n    color: blue;\n}")])],1)]),r("li",[r("p",[e._v("Create your JS file.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/src/index.js",language:"javascript"}},[e._v("document.addEventListener(\"DOMContentLoaded\", function() {\n  const p = document.querySelector('p')\n  p.innerText += ' Hello From The JavaScript!'\n});")])],1)]),r("li",[r("p",[e._v("Update your Nginx configuration.")]),r("p",[e._v("You only need to do this if you are using Nginx as your reverse proxy server.")]),r("p",[e._v("Any request for a "),r("code",[e._v(".js")]),e._v(" or "),r("code",[e._v(".css")]),e._v(" file (e.g., "),r("code",[e._v("index.js")]),e._v(") will pass through this location block. This will make Nginx look for the requested file in the specified directory.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/.docker/conf/nginx.conf",language:"nginx",line_highlight:"3-5"}},[e._v("server {\n    listen 80;\n    location ~ \\.(css|js) {\n      root /var/www/src;\n    }\n    location / {\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade';\n      proxy_set_header Host $host;\n      proxy_set_header Origin \"\";\n      proxy_pass http://drash_app_drash:1447;\n    }\n}")])],1)]),r("li",[r("p",[e._v("Update your Apache configuration.")]),r("p",[e._v("You only need to do this if you are using Apache as your reverse proxy server.")]),r("p",[e._v("These new configuration lines will make sure any requests for a "),r("code",[e._v(".js")]),e._v(" or a "),r("code",[e._v(".css")]),e._v(" file will not be passed to your Drash server and will instead be handled by your Apache server.")]),r("p",[e._v("You should note that the below does allow Apache to access the files as it is required for when a request for the JavaScripts or StyleSheets come in, but is very insecure as it is allowing full access to your source code. Ideally, you would place your assets in a "),r("code",[e._v("/public")]),e._v(" directory and modify the below to match this. That way you would only allow your public files to be accessible and you would link your files in your HTML like so: "),r("code",[e._v("/public/index.css")]),e._v(".")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/.docker/conf/apache.conf",language:"apacheconf"}},[e._v("<VirtualHost *:80>\n    DocumentRoot /var/www/src\n    "),e._v(" /var/www/src/>\n          AllowOverride All\n          Require all granted\n          Allow from all\n    "),e._v("\n    ProxyPassMatch ^(.(?!.*\\.css$|.*\\.js))*$ http://drash_app_drash:1447/\n</VirtualHost>")])],1)])]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Build docker again. This will update the containers "),r("code",[e._v("Nginx")]),e._v(" or "),r("code",[e._v("Apache")]),e._v(" configuration file and also restart your server to register the new response type.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ docker-compose build")])],1)]),r("li",[r("p",[e._v("Start docker.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ docker-compose up -d")])],1)]),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:8080")]),e._v(" in your browser and you should see the following:")]),r("p",[r("img",{attrs:{src:"/drash-assets/drash/img/example_code/advanced_tutorials/creating_a_docker_container/docker_compose_setup/2.png"}})])])]),r("div-alert-finished-tutorial-series"),r("hr"),r("breadcrumbs",{attrs:{base_url:e.base_url+"/#"+e.base_uri,part:6,parts:6}})],1)};Es._withStripped=!0;const qs={paths:["/advanced-tutorials/using-drash-with-docker-compose/part-6"],meta:{title:"Using Drash With Docker Compose",subtitle:"Part 6: (Optional) Linking JavaScripts and Stylesheets"}};var js={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/advanced-tutorials/using-drash-with-docker-compose",title:"Using Drash With Docker Compose",subtitle:"Part 6: (Optional) Linking JavaScripts and Stylesheets",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"],index_html:Hs}}};const Hs='<!DOCTYPE html>\n<html class="h-full w-full">\n<head>\n    <meta charset="utf-8"/>\n    <meta name="viewport" content="width=device-width, minimum-scale=1.0, user-scalable=no"/>\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css">\n    <link rel="stylesheet" href="index.css">\n    <script src="index.js"><\/script>\n    <title>Home</title>\n</head>\n<body>\n<div>\n    <h1 class="text-5xl">Home</h1>\n    <p class="text-xl mb-5">This is the home page!</p>\n</div>\n</body>\n</html>';var $s=js,As=Object(ge.a)($s,Es,[],!1,null,null,null);As.options.__file="src/drash/vue/pages/advanced_tutorials/using_drash_with_docker_compose/part_6.vue";var Ps=As.exports,Ys=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,base_uri:e.base_uri,title:e.title}},[r("p",[e._v("The links below will redirect you to "),r("a",{attrs:{href:"https://doc.deno.land",target:"_BLANK"}},[e._v("https://doc.deno.land")]),e._v(".")]),r("ul",[r("li",[r("p",[e._v("Drash"),r("ul",[r("li",[r("p",[e._v("Compilers")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/compilers/template_engine.ts"),target:"_BLANK"}},[e._v("TemplateEngine")]),r("span",[e._v(" (Deprecated. Removal date: 01-01-2021. Find out more "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash/issues/430"}},[e._v("here")]),e._v(".)")])])])])]),r("li",[r("p",[e._v("CoreLoggers")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/loggers/console_logger.ts"),target:"_BLANK"}},[e._v("ConsoleLogger")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/loggers/file_logger.ts"),target:"_BLANK"}},[e._v("FileLogger")])])])])]),r("li",[r("p",[e._v("Dictionaries")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/dictionaries/log_levels.ts"),target:"_BLANK"}},[e._v("LogLevels")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/dictionaries/mime_db.ts"),target:"_BLANK"}},[e._v("MimeDb")])])])])]),r("li",[r("p",[e._v("Exceptions")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/exceptions/http_exception.ts"),target:"_BLANK"}},[e._v("HttpException")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/exceptions/http_middleware_exception.ts"),target:"_BLANK"}},[e._v("HttpMiddlewareException")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/exceptions/http_response_exception.ts"),target:"_BLANK"}},[e._v("HttpResponseException")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/exceptions/name_collision_exception.ts"),target:"_BLANK"}},[e._v("NameCollisionException")])])])])]),r("li",[r("p",[e._v("Http")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/http/middleware.ts"),target:"_BLANK"}},[e._v("Middleware")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/http/request.ts"),target:"_BLANK"}},[e._v("Request")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/http/resource.ts"),target:"_BLANK"}},[e._v("Resource")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/http/response.ts"),target:"_BLANK"}},[e._v("Response")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/http/server.ts"),target:"_BLANK"}},[e._v("Server")])])])])]),r("li",[r("p",[e._v("Interfaces")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/log_level_structure.ts"),target:"_BLANK"}},[e._v("LogLevelStructure")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/logger_configs.ts"),target:"_BLANK"}},[e._v("LoggerConfigs")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/parsed_request_body.ts"),target:"_BLANK"}},[e._v("ParsedRequestBody")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/resource.ts"),target:"_BLANK"}},[e._v("Resource")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/resource_paths.ts"),target:"_BLANK"}},[e._v("ResourcePaths")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/response_output.ts"),target:"_BLANK"}},[e._v("ResponseOutput")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/server_configs.ts"),target:"_BLANK"}},[e._v("ServerConfigs")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/interfaces/server_middleware.ts"),target:"_BLANK"}},[e._v("ServerMiddleware")])])])])]),r("li",[r("p",[e._v("Services")]),r("ul",[r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/services/http_service.ts"),target:"_BLANK"}},[e._v("HttpService")])])]),r("li",[r("p",[r("a",{attrs:{href:e.docDenoLandLink("/services/string_service.ts"),target:"_BLANK"}},[e._v("StringService")])])])])])])])])])])};Ys._withStripped=!0;const Ls={paths:["/api-reference"],meta:{title:"API Reference"}};var Is={data(){return{base_url:this.$conf.drash.base_url,base_uri:"/api-reference",title:"API Reference"}},methods:{docDenoLandLink(e){return"https://doc.deno.land/https/deno.land/x/drash@"+this.$conf.drash.latest_version+"/src"+e}}},Ms=(r(131),Object(ge.a)(Is,Ys,[],!1,null,"0a08ede2",null));Ms.options.__file="src/drash/vue/pages/api_reference.vue";var Os=Ms.exports,Bs=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"bg-red-100 border-t-4 border-red-500 rounded-b text-red-900 px-4 py-3 shadow-md",attrs:{role:"alert"}},[t("h1",{staticClass:"text-2xl"},[this._v("404 (Not Found)")]),t("p",[this._v("URI "),t("code",[this._v(this._s(this.$route.path))]),this._v(" could not be found.")])])};Bs._withStripped=!0;const Gs={paths:["/404"],meta:{title:"404 (Not Found)",error_code:404}};var Ns={data:()=>({})},Us=Object(ge.a)(Ns,Bs,[],!1,null,null,null);Us.options.__file="src/drash/vue/pages/error_404.vue";var Vs=Us.exports,Fs=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("introduction-header",{attrs:{heading:"Drash",description:"Drash is a REST microframework for Deno's HTTP server with zero dependencies"}}),e._m(0),r("div",[r("hr"),r("h2-hash",[e._v("Drash In A Nutshell")]),e._m(1),r("p",[e._v("Drash is designed to help you build your projects quickly with the ability to scale. You can build an API, a web app, an SPA (like these documentation pages), or even a static HTML site. How you use Drash is up to you, so it can be everything you need and nothing you don't — like a DRASH tent.")]),e._m(2)],1),r("div",[r("hr"),r("h2-hash",[e._v("Quickstart")]),r("ol",[r("li",[e._m(3),r("code-block",{attrs:{title:"app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nclass HomeResource extends Drash.Http.Resource {\n  static paths = ["/"];\n  public GET() {\n    this.response.body = "Hello World!";\n    return this.response;\n  }\n}\n\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [HomeResource]\n});\n\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[e._m(4),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Make a request.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447\n\nHello World!")])],1)]),r("hr"),r("h2-hash",[e._v("Importing")]),r("div",[r("code-block",{attrs:{language:"typescript",header:!1}},[e._v('// Import a specific version of Drash\nimport { Drash } from "https://deno.land/x/drash@{tag}/mod.ts";\n\n// Always import the latest release\nimport { Drash } from "https://deno.land/x/drash/mod.ts";')]),r("p",[e._v("Drash versions can be found "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash/releases",target:"_BLANK"}},[e._v("here")]),e._v(".")])],1),e._m(5),e._m(6),r("hr"),r("h2-hash",[e._v("Features")]),e._m(7)],1)],1)};Fs._withStripped=!0;const Ws={paths:["/","/introduction"],meta:{title:"Introduction"}};var Ks={data:()=>({})},Js=Object(ge.a)(Ks,Fs,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"flex mb-5"},[t("a",{attrs:{href:"https://github.com/drashland/deno-drash/releases",target:"_BLANK"}},[t("img",{staticClass:"mr-1",attrs:{alt:"Latest Drash Release",src:"https://img.shields.io/github/release/drashland/deno-drash.svg?color=brightgreen&label=Latest",width:"auto",height:"20"}})]),t("a",{attrs:{href:"https://github.com/drashland/deno-drash/actions",target:"_BLANK"}},[t("img",{staticClass:"mr-1",attrs:{alt:"Drash CI",src:"https://img.shields.io/github/workflow/status/drashland/deno-drash/master?label=CI",width:"auto",height:"20"}})]),t("a",{attrs:{href:"https://discord.gg/SgejNXq",target:"_BLANK"}},[t("img",{staticClass:"mr-1",attrs:{alt:"Drash Land Discord",src:"https://img.shields.io/badge/Chat-on%20Discord-blue"}})]),t("a",{attrs:{href:"https://twitter.com/drash_land",target:"_BLANK"}},[t("img",{staticClass:"mr-1",attrs:{alt:"Drash Land Twitter",src:"https://img.shields.io/twitter/url?label=%40drash_land&style=social&url=https%3A%2F%2Ftwitter.com%2Fdrash_land",width:"auto",height:"20"}})]),t("a",{attrs:{href:"https://rb.gy/vxmeed",target:"_BLANK"}},[t("img",{attrs:{alt:"Drash YouTube",src:"https://img.shields.io/badge/Tutorials-YouTube-red",width:"auto",height:"20"}})])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Drash is a REST microframework for "),t("a",{attrs:{href:"https://deno.land",target:"_BLANK"}},[this._v("Deno")]),this._v("'s HTTP server with zero dependencies.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Learn more about Drash "),t("a",{attrs:{href:"/drash/#/about-drash"}},[this._v("here")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Write your "),t("code",[this._v("app.ts")]),this._v(" file.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Run your "),t("code",[this._v("app.ts")]),this._v(" file.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",[t("strong",[this._v("Mirrors")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://nest.land/package/deno-drash",target:"_BLANK"}},[this._v("nest.land")])])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[e._v("Zero Dependencies")])]),r("li",[r("p",[e._v("Extensively Documented")])]),r("li",[r("p",[e._v("Tutorials")])]),r("li",[r("p",[e._v("Lightweight")])]),r("li",[r("p",[e._v("Content Negotiation")])]),r("li",[r("p",[e._v("Routing")])]),r("li",[r("p",[e._v("Middleware")])]),r("li",[r("p",[e._v("Request Body Handling")])])])}],!1,null,null,null);Js.options.__file="src/drash/vue/pages/introduction.vue";var zs=Js.exports,Qs=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{toc:e.toc}},[r("div",{staticClass:"row"},[r("div",{staticClass:"col"},[r("hr"),r("h2-hash",[e._v("File An Issue")]),r("p",[e._v("File an issue regarding Drash (bugs, feature requests, testing, etc.) "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash/issues",target:"_BLANK"}},[e._v("here")]),e._v(".")]),r("p",[e._v("File an issue regarding Drash Documentation (bugs, tutorials, etc.) "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash-docs/issues",target:"_BLANK"}},[e._v("here")]),e._v(".")]),r("p",[e._v("Also, contributors are welcomed!")])],1)]),r("div",{staticClass:"row"},[r("div",{staticClass:"col"},[r("hr"),r("h2-hash",[e._v("Current Issues")]),r("div",{staticClass:"row"},[r("div",{staticClass:"col-md"},[r("h3",[e._v("Drash ("+e._s(e.issues_drash.length)+")")]),e._l(e.issues_drash,(function(t){return r("a",{staticClass:"card-a",attrs:{href:t.html_url,target:"_BLANK"}},[r("div",{staticClass:"alert",class:t.assignee?"alert-secondary":"alert-light"},[r("h4",{staticStyle:{"padding-right":"5rem"}},[e._v(e._s(t.title))]),t.assignee?r("span",{staticClass:"badge badge-success",staticStyle:{display:"inline-block","font-size":"1rem",position:"absolute",top:"1rem",right:"1rem"}},[e._v("Assigned")]):e._e()])])}))],2),r("div",{staticClass:"col-md"},[r("h3",[e._v("Drash Documentation ("+e._s(e.issues_drash_docs.length)+")")]),e._l(e.issues_drash_docs,(function(t){return r("a",{staticClass:"card-a",attrs:{href:t.html_url,target:"_BLANK"}},[r("div",{staticClass:"alert",class:t.assignee?"alert-secondary":"alert-light",staticStyle:{position:"relative"}},[r("h4",{staticStyle:{"padding-right":"5rem"}},[e._v(e._s(t.title))]),t.assignee?r("span",{staticClass:"badge badge-success",staticStyle:{display:"inline-block","font-size":"1rem",position:"absolute",top:"1rem",right:"1rem"}},[e._v("Assigned")]):e._e()])])}))],2)])],1)])])};Qs._withStripped=!0;const Xs={paths:["/issues"],meta:{title:"Issues",source_code_uri:"/issues"}};var Zs={data:()=>({toc:{items:["File An Issue","Current Issues"]},issues_drash:[],issues_drash_docs:[]}),mounted(){this.fetchIssues()},methods:{async fetchIssues(){const e=new this.$api_service("https://api.github.com"),t=await e.makeRequest("get","/repos/drashland/deno-drash/issues");t&&(this.issues_drash=t);const r=await e.makeRequest("get","/repos/drashland/deno-drash-docs/issues");t&&(this.issues_drash_docs=r)}}},eo=(r(133),Object(ge.a)(Zs,Qs,[],!1,null,"fdfe2424",null));eo.options.__file="src/drash/vue/pages/issues.vue";var to=eo.exports,ro=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{title:e.title}},[r("h2-hash",[e._v("About The Diagram")]),r("p",[e._v("The diagram below shows Drash's complete request-resource-response lifecycle. The diagram starts at the top left (at "),r("code",[e._v("server.run()")]),e._v(") and works it way down towards the bottom (at "),r("code",[e._v("End request")]),e._v(").")]),r("p",[e._v("Things to note:")]),r("ul",[r("li",[e._v("Any process with a dashed border means it can throw an error. If an error is thrown, the process will immediately jump to the C connector. The C connector is in red.")]),r("li",[e._v("If an error is thrown in the C connector flow, Drash will pass the error to the Deno server for further processing.")]),r("li",[e._v("If an error is thrown in the "),r("code",[e._v("for await (req of server) { ... }")]),e._v(" process, Drash will pass the error to the Deno server for further processing.")]),r("li",[e._v("Middleware execution points are in orange.")]),r("li",[e._v("Runtime middleware only executes if compile time middleware is defined at server creation.")])]),r("p",[e._v("You can click the diagram to enlarge it.")]),r("p",[r("a",{attrs:{href:"/drash-assets/drash/img/drash_lifecycle_diagram_v1.3.0.svg",target:"_BLANK"}},[r("img",{attrs:{src:"/drash-assets/drash/img/drash_lifecycle_diagram_v1.3.0.svg"}})])])],1)};ro._withStripped=!0;const so={paths:["/lifecycle-diagram"],meta:{title:"Lifecycle Diagram"}};var oo={data:()=>({title:so.meta.title})},ao=Object(ge.a)(oo,ro,[],!1,null,null,null);ao.options.__file="src/drash/vue/pages/lifecycle_diagram.vue";var no=ao.exports,io=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("The "),r("code",[e._v("create_app.ts")]),e._v(" script can create a boilerplate project for you, so you can quickly get a Drash application up and running, all with one simple command.")]),r("hr"),r("h2-hash",[e._v("Usage")]),r("p",[e._v("All commands will create the recommended files and directories for your project. It will also include all the required code to start up a development server in an instant.")]),r("ul",[r("li",[r("p",[e._v("Create an API boilerplate project:")]),r("p",[e._v("This will create a boilerplate proejct tailored to a Drash API")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-run --allow-read --allow-write --allow-net https://deno.land/x/drash@"+e._s(e.$conf.drash.latest_version)+"/create_app.ts --api")])],1),r("li",[r("p",[e._v("Create a Web App boilerplate project:")]),r("p",[e._v("This will create a boilerplate tailored to a full web application")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-run --allow-read --allow-write --allow-net https://deno.land/x/drash@"+e._s(e.$conf.drash.latest_version)+"/create_app.ts --web-app")]),r("p",[e._v("Options:")]),r("ul",[r("li",[r("p",[e._v("Include React with the frontend")]),r("p",[e._v("Adding the "),r("code",[e._v("--with-react")]),e._v(" flag will include React in your Web App project, so you do not need to configure webpack or set it up yourself.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-run --allow-read --allow-write --allow-net https://deno.land/x/drash@"+e._s(e.$conf.drash.latest_version)+"/create_app.ts --web-app --with-react")])],1),r("li",[r("p",[e._v("Include Vue with the frontend")]),r("p",[e._v("Adding the "),r("code",[e._v("--with-vue")]),e._v(" flag will will include Vue in your Web App project, so you do not need to configure webpack or set it up yourself.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-run --allow-read --allow-write --allow-net https://deno.land/x/drash@"+e._s(e.$conf.drash.latest_version)+"/create_app.ts --web-app --with-vue")])],1)])],1)])],1)};io._withStripped=!0;const lo={paths:["/tutorials/cli/create-app"],meta:{title:"Create App"}};var co={data:()=>({title:lo.meta.title,toc:["Before You Get Started","Usage"]})},uo=Object(ge.a)(co,io,[],!1,null,null,null);uo.options.__file="src/drash/vue/pages/tutorials/cli/create_app.vue";var po=uo.exports,ho=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Basics")]),r("p",[e._v("Drash provides a CLI to improve the Drash development experience:")]),r("ul",[r("li",[e._v("You can create a boilerplate project of the following types:"),r("ul",[r("li",[e._v("React")]),r("li",[e._v("Vue")]),r("li",[e._v("API")]),r("li",[e._v("Web Application (without a front-end framework)")])])])]),r("p",[e._v("Using the CLI is useful when you want to quickly scaffold a Drash project in a simple and easy to use way.")]),r("hr"),r("h2-hash",[e._v("Commands")]),r("ul",[r("li",[r("a",{attrs:{href:e.$conf.drash.base_url+"/#/tutorials/cli/create-app"}},[e._v("Create App (create a boilerplate)")])])])],1)};ho._withStripped=!0;const _o={paths:["/tutorials/cli/introduction"],meta:{title:"CLI: Introduction"}};var vo={data:()=>({title:"CLI: Introduction",toc:["Basics","Commands"]})},mo=Object(ge.a)(vo,ho,[],!1,null,null,null);mo.options.__file="src/drash/vue/pages/tutorials/cli/introduction.vue";var fo=mo.exports,go=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will learn how to get cookies from a request and parse them into a key-value pair object.")]),r("p",[e._v("Drash uses "),r("a",{attrs:{href:"https://deno.land/std/http/cookie.ts",target:"_BLANK"}},[e._v("cookie.ts")]),e._v(" from Deno Standard Modules' HTTP module for its cookie schema.")]),r("p",[e._v("Getting a cookie from a request can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const cookieValue = this.request.getCookie("my_cookie");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. This file will get the "),r("code",[e._v("my_cookie")]),e._v(" cookie value and use it in the response body.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    const cookieValue = this.request.getCookie("my_cookie");\n    this.response.body = `You passed in the following cookie value: ${cookieValue}`;\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(" and pass in the following cookie key-value pair: "),r("code",[e._v("my_cookie=chocolate")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --cookie my_cookie=chocolate localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("You passed in the following cookie value: chocolate")])],1)])],1)};go._withStripped=!0;const bo={paths:["/tutorials/cookies/request-cookies"],meta:{title:"Request Cookies",tutorial_title:"Request Cookies",source_code_uri:"/tutorials/cookies/request_cookies"}};var yo={data:()=>({title:bo.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},wo=Object(ge.a)(yo,go,[],!1,null,null,null);wo.options.__file="src/drash/vue/pages/tutorials/cookies/request_cookies.vue";var ko=wo.exports,xo=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will learn how to set cookies on a response object and delete them.")]),r("p",[e._v("Drash uses "),r("a",{attrs:{href:"https://deno.land/std/http/cookie.ts",target:"_BLANK"}},[e._v("cookie.ts")]),e._v(" from Deno Standard Modules' HTTP module for its cookie schema.")]),r("p",[e._v("Setting a cookie on a response object can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('this.response.setCookie({\n  name: "MINI",\n  value: "Cooper",\n  expiry: \'some date\'\n  ...\n});')]),r("p",[e._v("Deleting a cookie from a response object can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('this.response.delCookie("cookie_name");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. This file will set the "),r("code",[e._v("my_cookie")]),e._v(" cookie on the response object.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.setCookie({name: "my_cookie", value: "chocolate"})\n    this.response.body = "my_cookie cookie sent!"\n    return this.response;\n  }\n \n  public DELETE() {\n    this.response.setCookie({\n      name: "my_cookie",\n      value: "chocolate"\n    });\n    this.response.delCookie("my_cookie");\n    this.response.body = "my_cookie cookie was set and deleted!"\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --verbose localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,line_highlight:"11"}},[e._v('*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 1447 (#0)\n> GET / HTTP/1.1\n> Host: localhost:1447\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< content-type: application/json\n< set-cookie: my_cookie=chocolate\n< content-length: 24\n<\n* Connection #0 to host localhost left intact\n"my_cookie cookie sent!"* Closing connection 0')])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("DELETE")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request DELETE --verbose localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,line_highlight:"11"}},[e._v('*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 1447 (#0)\n> DELETE / HTTP/1.1\n> Host: localhost:1447\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< content-type: application/json\n< set-cookie: my_cookie=; Expires=Thu, 01 Jan 1970 00:00:00 GMT\n< content-length: 39\n<\n* Connection #0 to host localhost left intact\n"my_cookie cookie was set and deleted!"* Closing connection 0')])],1)])],1)};xo._withStripped=!0;const To={paths:["/tutorials/cookies/response-cookies"],meta:{title:"Response Cookies",tutorial_title:"Response Cookies"}};var So={data:()=>({title:To.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Do=Object(ge.a)(So,xo,[],!1,null,null,null);Do.options.__file="src/drash/vue/pages/tutorials/cookies/response_cookies.vue";var Ro=Do.exports,Co=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("This tutorial assumes you have a working Angular app stacked with Deno and Drash.")]),r("p",[e._v("This tutorial solves the issue commonly surfaced from "),r("a",{attrs:{href:"https://angular.io/guide/deployment#server-configuration",target:"_BLANK"}},[e._v("https://angular.io/guide/deployment#server-configuration")]),e._v(".")]),r("p",[e._v("In order to solve the issue, you have to override "),r("code",[e._v("Drash.Http.Server")]),e._v(" and override its "),r("code",[e._v("handleHttpRequestError()")]),e._v(" method.")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("app.ts")]),e._v(" file. Take note of the highlighted code. This code will help your Angular app by serving your default "),r("code",[e._v("index.html")]),e._v(" file. Your default "),r("code",[e._v("index.html")]),e._v(" file is the one you define for your Angular app. If a deep link is used, Drash will throw a "),r("code",[e._v("404")]),e._v(" error in your Angular app. By adding the highlighted code, you tell Drash to reroute back to your Angular app's "),r("code",[e._v("index.html")]),e._v(" file on "),r("code",[e._v("404")]),e._v(" errors.")]),r("p",[r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"25-28"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\nconst decoder = new TextDecoder();\n\n// Define your custom Angular server\nclass AngularServer extends Drash.Http.Server {\n  public handleHttpRequestError(\n    request: Drash.Http.Request,\n    error: Drash.Exceptions.HttpException,\n    resource: Drash.Http.Resource | null = null,\n    response: Drash.Http.Response | null = null,\n  ): Promise<Drash.Interfaces.ResponseOutput> {\n \n    if (resource) {\n      if (!response) {\n        if (typeof resource[request.method.toUpperCase()] !== "function") {\n          error = new Drash.Exceptions.HttpException(405);\n        }\n      }\n    }\n \n    response = new Drash.Http.Response(request);\n    response.status_code = error.code ? error.code : null;\n    response.body = error.message ? error.message : response.getStatusMessage();\n \n    if (response.status_code == 404) {\n      response.headers.set("Content-Type", "text/html");\n      response.body = new TextDecoder().decode(Deno.readFileSync("./path/to/your/index.html"));\n    }\n \n    try {\n      this.executeMiddlewareServerLevelAfterRequest(request, null, response);\n    } catch (error) {\n      // Do nothing\n    }\n \n    return response.send();\n  }\n}\n\n// Use your Angular server as the Drash.Http.Server\nDrash.Http.Server = AngularServer;\n \n// Create your resource\nexport class AngularResource extends Drash.Http.Resource {\n  static paths = ["/"];\n  public GET() {\n    try {\n      const raw = Deno.readFileSync("./path/to/your/index.html");\n      const template = decoder.decode(raw);\n      this.response.body = template;\n    } catch (error) {\n      throw new Drash.Exceptions.HttpException(400, "index error");\n    }\n    return this.response;\n  }\n}\n\n// Create your server\nconst server = new Drash.Http.Server({\n  response_output: "text/html",\n  resources: [AngularResource],\n  directory: `${await Deno.realpath(".")}`,\n  static_paths: ["/public"],\n});\n\n// Run your server\nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)])])],1)};Co._withStripped=!0;const Eo={paths:["/tutorials/error-handling/angular-deep-linking"],meta:{title:"Angular Deep Linking"}};var qo={data:()=>({title:Eo.meta.title,toc:["Before You Get Started","Steps"]})},jo=Object(ge.a)(qo,Co,[],!1,null,null,null);jo.options.__file="src/drash/vue/pages/tutorials/error_handling/angular_deep_linking.vue";var Ho=jo.exports,$o=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("About Jae")]),r("p",[e._v("Drash has the ability to power a front-end with the help of its Tengine middleware. Specifically, its Tengine middleware and default template engine: Jae. Jae allows you to:")]),r("ul",[r("li",[r("p",[e._v("Create templates with template variables")])]),r("li",[r("p",[e._v("Extend templates")])]),r("li",[r("p",[e._v("Add template partials")])]),r("li",[r("p",[e._v("Add in-template JavaScript")])])]),r("p",[e._v("The idea behind Jae is to help you create a single page application (SPA) — allowing you to chose the front-end framework of your choice.")]),r("p",[e._v("If you want to get started using Jae, follow the Tengine documentation in Drash's middleware repository "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash-middleware/tree/master/tengine"}},[e._v("here")]),e._v(".")])],1)};$o._withStripped=!0;const Ao={paths:["/tutorials/front-end"],paths:["/tutorials/front-end/using-jae"],meta:{title:"Front-end: Using Jae"}};var Po={data:()=>({title:Ao.meta.title,toc:["About Jae"]})},Yo=Object(ge.a)(Po,$o,[],!1,null,null,null);Yo.options.__file="src/drash/vue/pages/tutorials/front_end/introduction.vue";var Lo=Yo.exports,Io=function(){var e=this.$createElement,t=this._self._c||e;return t("page",{attrs:{title:this.title}},[t("h2-hash",[this._v("About The Tutorials")]),t("p",[this._v("The tutorials in the sidebar are ordered (from top to bottom) in a way that will help you understand Drash's request-resource-response lifecycle quickly. Since all tutorials have example code of setting up and starting a server, it is not required that you read the tutorials in order. However, it is greatly recommended.")])],1)};Io._withStripped=!0;var Mo=r(5),Oo=r(18);const Bo={paths:["/tutorials","/tutorials/introduction"],meta:{title:"Tutorials: Introduction"}};var Go={components:{H2Hash:Mo.a,Page:Oo.a},data:()=>({title:"Tutorials: Introduction"})},No=Object(ge.a)(Go,Io,[],!1,null,null,null);No.options.__file="src/drash/vue/pages/tutorials/introduction.vue";var Uo=No.exports,Vo=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Unlike server-level middleware, resource-level middleware is specified using "),r("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/decorators.html",target:"_BLANK"}},[e._v("decorators")]),e._v(" and a "),r("code",[e._v("tsconfig.json")]),e._v(" file.")]),r("p",[e._v("Resource-level middleware is middleware that can only be executed by resources. That is, if a resource is decorated with middleware, then the middleware specified in the decorators will be executed.")]),r("p",[e._v("Your "),r("code",[e._v("tsconfig.json")]),e._v(" file will require the following:")]),r("code-block",{attrs:{language:"json",header:!1}},[e._v('{\n  "compilerOptions": {\n    "experimentalDecorators": true\n  }\n}')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts\n  log_access_middleware.ts\n  secret_resource.ts\n  tsconfig.json\n  verify_token_middleware.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("tsconfig.json")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/tsconfig.json",language:"json"}},[e._v('{\n  "compilerOptions": {\n    "experimentalDecorators": true\n  }\n}')])],1),r("li",[r("p",[e._v("Create your middleware files. These middleware files take in the "),r("code",[e._v("request")]),e._v(" and "),r("code",[e._v("response")]),e._v(" params.")]),r("code-block",{attrs:{title:"/path/to/your/project/log_access_middleware.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport function LogAccessMiddleware(\n  request: Drash.Http.Request,\n  response: Drash.Http.Response\n): void {\n  console.log("Secret resource was accessed by: {username}");\n}')]),r("code-block",{attrs:{title:"/path/to/your/project/verify_token_middleware.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport function VerifyTokenMiddleware(\n  request: Drash.Http.Request,\n  response: Drash.Http.Response\n): void {\n  let token = request.getUrlQueryParam(\'super_secret_token\');\n \n  if (!token) {\n    throw new Drash.Exceptions.HttpMiddlewareException(400, "Where is the token?");\n  }\n \n  if (token != "AllYourBaseAreBelongToUs") {\n    throw new Drash.Exceptions.HttpMiddlewareException(403, `Mmm... "${token}" is a bad token.`);\n  }\n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("HomeResource")]),e._v(" file. This file will not have middleware.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = {\n      method: "GET",\n      body: "Hello!"\n    };\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("SecretResource")]),e._v(" file. This resource will use the "),r("code",[e._v("VerifyTokenMiddleware")]),e._v(" function to verify that the correct token has been passed in through the URL query params before the request is executed. If the token is incorrect, then the middleware will throw a "),r("code",[e._v("400")]),e._v(" or "),r("code",[e._v("403")]),e._v(" error response. If the token is correct, then the request will be processed further and the "),r("code",[e._v("LogAccessMiddleware")]),e._v(" function will log that the resource has been accessed.")]),r("code-block",{attrs:{title:"/path/to/your/project/secret_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\nimport { LogAccessMiddleware } from "./log_access_middleware.ts";\nimport { VerifyTokenMiddleware } from "./verify_token_middleware.ts";\n \n@Drash.Http.Middleware({\n  before_request: [VerifyTokenMiddleware],\n  after_request: []\n})\nexport default class SecretResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/secret"\n  ];\n \n  @Drash.Http.Middleware({\n    before_request: [LogAccessMiddleware],\n    after_request: []\n  })\n  public GET() {\n    this.response.body = {\n      method: "GET",\n      body: "You have accessed the secret resource!"\n    };\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file. Notice that you do not need to register your middleware here like you do with server-level middleware.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\nimport SecretResource from "./secret_resource.ts";\n \nconst server = new Drash.Http.Server({\n  resources: [\n    HomeResource,\n    SecretResource\n  ],\n  response_output: "application/json",\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});\n \nconsole.log("Server listening: http://localhost:1447");')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("You can verify that your app's code works by making requests like the ones below. Since this tutorial's app sets "),r("code",[e._v("application/json")]),e._v(" as the "),r("code",[e._v("response_output")]),e._v(", the server responds to requests with JSON by default.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --config tsconfig.json app.ts")])],1),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/")]),r("p",[e._v("This request is not filtered by "),r("code",[e._v("VerifyTokenMiddleware")]),e._v("; therefore, you should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{language:"json",header:!1}},[e._v('{\n  "method": "GET",\n  "body": "Hello!"\n}')])],1),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/secret")]),e._v(" in your browser.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/secret")]),r("p",[e._v("This request is filtered by "),r("code",[e._v("VerifyTokenMiddleware")]),e._v(", but it is missing the "),r("code",[e._v("super_secret_token")]),e._v(" query param; therefore, you should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Where is the token?"')])],1),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/secret?super_secret_token=IsThisIt")]),e._v(" in your browser.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/secret?super_secret_token=IsThisIt")]),r("p",[e._v("This request is filtered by "),r("code",[e._v("VerifyTokenMiddleware")]),e._v(", but it has the wrong "),r("code",[e._v("super_secret_token")]),e._v(" query param; therefore you should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Mmm... \\"IsThisIt\\" is a bad token."')])],1),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/secret?super_secret_token=AllYourBaseAreBelongToUs")]),e._v(" in your browser.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/secret?super_secret_token=AllYourBaseAreBelongToUs")]),r("p",[e._v("This request is filtered by "),r("code",[e._v("VerifyTokenMiddleware")]),e._v(" and it has the correct "),r("code",[e._v("super_secret_token")]),e._v(" query param; therefore you should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{language:"json",header:!1}},[e._v('{\n  "method": "GET",\n  "body": "You have accessed the secret resource!"\n}')]),r("p",[e._v("Also, in the terminal where you started your server, you should see the following message:")]),r("code-block",{attrs:{header:!1}},[e._v('"Secret resource was accessed by: {username}"')])],1)])],1)};Vo._withStripped=!0;const Fo={paths:["/tutorials/middleware/adding-resource-level-middleware"],meta:{title:"Adding Resource-Level Middleware"}};var Wo={data:()=>({title:Fo.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Ko=Object(ge.a)(Wo,Vo,[],!1,null,null,null);Ko.options.__file="src/drash/vue/pages/tutorials/middleware/adding_resource_level_middleware.vue";var Jo=Ko.exports,zo=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Server-level middleware is middleware that is executed by the server on "),r("strong",[r("em",[e._v("every")])]),e._v(" request.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts\n  verify_token_middleware.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = {\n      method: "GET",\n      body: "Hello!"\n    };\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your middleware file. This middleware file takes in the "),r("code",[e._v("request")]),e._v(" and "),r("code",[e._v("response")]),e._v(" params.")]),r("code-block",{attrs:{title:"/path/to/your/project/verify_token_middleware.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default function VerifyTokenMiddleware(\n  request: Drash.Http.Request,\n  response?: Drash.Http.Response\n): void {\n  let token = request.getUrlQueryParam(\'super_secret_token\');\n \n  if (!token) {\n    throw new Drash.Exceptions.HttpMiddlewareException(400, "Where is the token?");\n  }\n \n  if (token != "AllYourBaseAreBelongToUs") {\n    throw new Drash.Exceptions.HttpMiddlewareException(403, `Mmm... "${token}" is a bad token.`);\n  }\n}')]),r("p",[e._v("Your middleware will check if "),r("code",[e._v("super_secret_token")]),e._v(" was passed in the request's URL. If not, then a "),r("code",[e._v("400")]),e._v(" error will be thrown. It will also check if the value of "),r("code",[e._v("super_secret_token")]),e._v(" is "),r("code",[e._v("AllYourBaseAreBelongToUs")]),e._v(". If not, then a "),r("code",[e._v("403")]),e._v(" error will be thrown.")])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\nimport VerifyTokenMiddleware from "./verify_token_middleware.ts";\n \nconst server = new Drash.Http.Server({\n  middleware: {\n    before_request: [\n      VerifyTokenMiddleware\n    ]\n  },\n  resources: [\n    HomeResource\n  ],\n  response_output: "application/json",\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("p",[e._v("You can verify that your app's code works by making requests like the ones below. Since this tutorial's app sets "),r("code",[e._v("application/json")]),e._v(" as the "),r("code",[e._v("response_output")]),e._v(", the server responds to requests with JSON by default.")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Make a request using "),r("code",[e._v("curl")]),e._v(" like below or go to "),r("code",[e._v("localhost:1447/")]),e._v(" in your browser.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/")]),r("p",[r("code",[e._v("VerifyTokenMiddleware")]),e._v(" is run on every request because it was specified as server-level middleware. This request is missing the "),r("code",[e._v("super_secret_token")]),e._v(" query param; therefore, you should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Where is the token?"')])],1),r("li",[r("p",[e._v("Make the same request with a bad token.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/?super_secret_token=IsThisIt")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v('"Mmm... \\"IsThisIt\\" is a bad token."')])],1),r("li",[r("p",[e._v("Make the same request with the expected token.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/?super_secret_token=AllYourBaseAreBelongToUs")]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{language:"json",header:!1}},[e._v('{\n  "method": "GET",\n  "body": "Hello!"\n}')])],1)])],1)};zo._withStripped=!0;const Qo={paths:["/tutorials/middleware/adding-server-level-middleware"],meta:{title:"Adding Server-Level Middleware"}};var Xo={data:()=>({title:Qo.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Zo=Object(ge.a)(Xo,zo,[],!1,null,null,null);Zo.options.__file="src/drash/vue/pages/tutorials/middleware/adding_server_level_middleware.vue";var ea=Zo.exports,ta=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Basics")]),r("p",[e._v("Drash defines middleware according to the MDN: "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Middleware",target:"_BLANK"}},[e._v("https://developer.mozilla.org/en-US/docs/Glossary/Middleware")]),e._v(".")]),r("p",[e._v("Adding middleware to your application is useful when you want to:")]),r("ul",[r("li",[e._v("filter requests;")]),r("li",[e._v("process/manipulate request data; and/or")]),r("li",[e._v("process/manipulate response data.")])]),r("p",[e._v("There are two main types of middleware in Drash: server-level middleware and resource-level middleware.")]),r("p",[e._v("Middleware is executed throughout the request-resource-response lifecycle. Read the "),r("a",{attrs:{href:e.$conf.drash.base_url+"/#/tutorials/middleware/introduction#setting-the-execution-point"}},[e._v("Setting The Execution Point")]),e._v(" section below for more information on middleware execution points. You can also view the "),r("a",{attrs:{href:e.$conf.drash.base_url+"/#/lifecycle-diagram"}},[e._v("Lifecycle Diagram")]),e._v(" for a visual representation of where middleware is executed in the request-resource-response lifecycle.")]),r("hr"),r("h2-hash",[e._v("Server-Level Middleware")]),r("p",[e._v("Server-level middleware is middleware executed by the server on every request. You define server-level middleware when you create your server object. Server-level middleware can be executed at the following points in the request-resource-response lifecycle:")]),r("ul",[r("li",[e._v("when the server starts;")]),r("li",[e._v("before the request is made;")]),r("li",[e._v("after the request is matched to a resource; and")]),r("li",[e._v("after the request is made.")])]),r("p",[e._v("Take the example below. There is a set of server-level middleware that will execute throughout the request-resource-response lifecycle.")]),r("ul",[r("li",[r("code",[e._v("ServeTypeScript")]),e._v(" executes at compile time")]),r("li",[r("code",[e._v("Auth")]),e._v(" executes before each request is made")]),r("li",[r("code",[e._v("TemplateEngine")]),e._v(" executes after a request is matched to a resource")]),r("li",[r("code",[e._v("CleanUpData")]),e._v(" executes after each request is made")])]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"2-15"}},[e._v('const server = new Drash.Http.Server({\n  middleware: {\n    compile_time: [\n      ServeTypeScript,\n    ],\n    before_request: [\n      Auth,\n    ],\n    after_resource: [\n      TemplateEngine,\n    ],\n    after_request: [\n      CleanUpData,\n    ]\n  },\n  resources: [\n    HomeResource\n  ],\n  response_output: "application/json",\n});')]),r("hr"),r("h2-hash",[e._v("Resource-Level Middleware")]),r("p",[e._v("Unlike server-level middleware, resource-level middleware is specified using "),r("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/decorators.html",target:"_BLANK"}},[e._v("decorators")]),e._v(" and a "),r("code",[e._v("tsconfig.json")]),e._v(" file. Resource-level middleware can only be executed by resources. That is, if a resource is decorated with middleware, then the middleware specified in the decorators will be executed.")]),r("p",[e._v("Take the example below. This resource contains two types of resource-level middleware — class level and HTTP method level. With resource-level middleware, you can specify middleware to be more granular by decorating only HTTP methods or the resource class itself.")]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"1-4,11-14"}},[e._v('@Drash.Http.Middleware({\n  before_request: [VerifyTokenMiddleware],\n  after_request: []\n})\nexport default class SecretResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/secret"\n  ];\n \n  @Drash.Http.Middleware({\n    before_request: [LogAccessMiddleware],\n    after_request: []\n  })\n  public GET() {\n    this.response.body = {\n      method: "GET",\n      body: "You have accessed the secret resource!"\n    };\n    return this.response;\n  }\n}')]),r("hr"),r("h2-hash",[e._v("Setting The Execution Point")]),r("p",[e._v("There are four points where middleware is executed:")]),r("ul",[r("li",[e._v("when the server starts;")]),r("li",[e._v("before the request is made;")]),r("li",[e._v("after the request is matched to a resource; and")]),r("li",[e._v("after the request is made.")])]),r("h3",{attrs:{id:"before-the-request"}},[e._v("Compile Time")]),r("p",[e._v("Middleware executed at compile time means it is executed when the server is starting up. Compile time middleware is useful if you want to process data at compile time and use that data at runtime — keeping your server's performance up.")]),r("h3",{attrs:{id:"before-the-request"}},[e._v("Before The Request")]),r("p",[e._v("Middleware executed before the request means it is executed before a resource's HTTP method (e.g., "),r("code",[e._v("MyResource.GET()")]),e._v(", "),r("code",[e._v("MyResource.POST()")]),e._v(", "),r("code",[e._v("MyResource.DELETE()")]),e._v(") is called.")]),r("h3",{attrs:{id:"after-resource"}},[e._v("After Request Is Matched To Resource")]),r("p",[e._v("Middleware executed after a request is matched to a resource means it is executed immediately after the server figures out what resource will handle the request based on its URI.")]),r("h3",{attrs:{id:"after-the-request"}},[e._v("After The Request")]),r("p",[e._v("Middleware executed after the request means it is executed immediately after a resource's HTTP method (e.g., "),r("code",[e._v("MyResource.GET()")]),e._v(", "),r("code",[e._v("MyResource.POST()")]),e._v(", "),r("code",[e._v("MyResource.DELETE()")]),e._v(") is called and before a response is sent to the client that made the request.")]),r("h3",{attrs:{id:"setting-the-execution-point-of-server-level-middleware"}},[e._v("Setting The Execution Point Of Server-Level Middleware")]),r("p",[e._v("You can have server-level middleware execute at compile time, before the request, after a request is matched to a resource, and after a request by placing your middleware in the appropriate array. See the example below to see middleware defined in these arrays.")]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"3,6,9,12"}},[e._v('const server = new Drash.Http.Server({\n  middleware: {\n    compile_time: [\n      ServeTypeScript,\n    ],\n    before_request: [\n      Auth,\n    ],\n    after_resource: [\n      TemplateEngine,\n    ],\n    after_request: [\n      CleanUpData,\n    ]\n  },\n  resources: [\n    HomeResource\n  ],\n  response_output: "application/json",\n});')]),r("h3",{attrs:{id:"setting-the-execution-point-of-resource-level-middleware"}},[e._v("Setting The Execution Point Of Resource-Level Middleware")]),r("p",[e._v("You can have resource-level middleware execute before and after the request by placing your middleware in the appropriate array in your resource class' middleware decorators.  See the example below to see middleware defined in these arays.")]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"2,3,12,13"}},[e._v('@Drash.Http.Middleware({\n  before_request: [VerifyTokenMiddleware],\n  after_request: []\n})\nexport default class SecretResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/secret"\n  ];\n \n  @Drash.Http.Middleware({\n    before_request: [LogAccessMiddleware],\n    after_request: []\n  })\n  public GET() {\n    this.response.body = {\n      method: "GET",\n      body: "You have accessed the secret resource!"\n    };\n    return this.response;\n  }\n}')]),r("hr"),r("h2-hash",[e._v("Sorting Middleware")]),r("p",[e._v("Middleware is executed in the order you define them. Take the examples below.")]),r("p",[e._v("The following server-level middleware would execute in the following order:")]),r("ul",[r("li",[r("code",[e._v("OneMiddleware")])]),r("li",[r("code",[e._v("TwoMiddleware")])])]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"4-5"}},[e._v('const server = new Drash.Http.Server({\n  middleware: {\n    before_request: [\n      OneMiddleware,\n      TwoMiddleware\n    ]\n  },\n  resources: [\n    HomeResource\n  ],\n  response_output: "application/json",\n});')]),r("p",[e._v("The following resource-level middleware would execute in the following order:")]),r("ul",[r("li",[r("code",[e._v("RedMiddleware")])]),r("li",[r("code",[e._v("BlueMiddleware")])])]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"3-4"}},[e._v('@Drash.Http.Middleware({\n  before_request: [\n    RedMiddleware,\n    BlueMiddleware\n  ]\n})\nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/"\n  ];\n \n  public GET() {\n    this.response.body = "GET request received!";\n    return this.response;\n  }\n}')])],1)};ta._withStripped=!0;const ra={paths:["/tutorials/middleware/introduction"],meta:{title:"Introduction To Middleware"}};var sa={data:()=>({title:ra.meta.title,toc:["Basics","Server-Level Middleware","Resource-Level Middleware","Setting The Execution Point","Sorting Middleware"]})},oa=Object(ge.a)(sa,ta,[],!1,null,null,null);oa.options.__file="src/drash/vue/pages/tutorials/middleware/introduction.vue";var aa=oa.exports,na=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{title:e.title}},[r("p",[e._v("Drash has a middleware repository that contains a collection of middleware modules. The repository contains "),r("em",[e._v("only")]),e._v(" Drash-approved middleware modules. They are extensively documented and tested. Moreover, just like the tutorial pages you see on this website, there are tutorials on the repository that show you how to use each middleware module.")]),r("div",{staticClass:"mt-5 mb-5 bg-blue-100 border-l-4 border-teal-500 rounded-b text-blue-900 px-4 py-3 shadow-md",attrs:{role:"alert"}},[r("div",{staticClass:"py-1"},[r("p",{staticClass:"font-bold"},[e._v("Wait! Here's a note about third party dependencies!")]),r("p",{staticClass:"text-sm"},[e._v("Be aware that some modules "),r("em",[e._v("may")]),e._v(" use third-party dependencies whilst some will not.")])])]),r("p",[e._v("Although Drash provides a repository of middleware modules that you can easily plug straight into your Drash application, feel free to create your own middleware modules that suit your needs. Use of the Drash-approved middleware is not required to build a great Drash application.")]),r("p",[e._v("You can view the repository "),r("a",{attrs:{href:"https://github.com/drashland/deno-drash-middleware",target:"_BLANK"}},[e._v("here")]),e._v(".")])])};na._withStripped=!0;const ia={paths:["/tutorials/middleware/using-drash-middleware-modules"],meta:{title:"Use Drash Middleware Modules"}};var la={data:()=>({title:ia.meta.title})},ca=Object(ge.a)(la,na,[],!1,null,null,null);ca.options.__file="src/drash/vue/pages/tutorials/middleware/using_drash_middleware_modules.vue";var ua=ca.exports,da=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v('A global member is any "thing" you define the global member to be. It can be a service, an app, an array, a number, etc.')]),r("p",[e._v("You can add global members to the "),r("code",[e._v("Drash.Members")]),e._v(" namespace via "),r("code",[e._v("Drash.addMember()")]),e._v(".")]),r("p",[e._v('Adding global members is helpful when you want to access a "thing" without having to remember where it\'s physically located. This prevents you from having to import like '),r("code",[e._v('import MyThing from "../path/../to/../some/../dir/my_thing.ts"')]),e._v('. Instead, you can add your "thing" as a global member (e.g., '),r("code",[e._v('Drash.addMember("MyThing", myThing);')]),e._v(") and access it like "),r("code",[e._v("Drash.Members.MyThing")]),e._v(".")]),r("p",[e._v("All global members are added to the "),r("code",[e._v("Drash.Members")]),e._v(" namespace.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  bootstrap.ts\n  my_thing.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v('Create your "thing" to be added as a global member.')]),r("code-block",{attrs:{title:"/path/to/your/project/my_thing.ts",language:"typescript"}},[e._v('export default class MyThing {\n  public greet() {\n    return "Hello from MyThing!";\n  }\n}')])],1),r("li",[r("p",[e._v('Create a file that adds your "thing" as a global member.')]),r("code-block",{attrs:{title:"/path/to/your/project/bootstrap.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \n// Register MyThing as a global member\nimport myThing from "./my_thing.ts";\nDrash.addMember("MyThing", new myThing());')])],1),r("li",[r("p",[e._v("Create your app file and have it use your global member.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \n// When this file is imported, it will register MyThing as a global member\nimport "./bootstrap.ts";\n \nconsole.log(Drash.Members.MyThing.greet());')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("P",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run app.ts")]),r("p",[e._v("You should see the following after you have run your app:")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("Hello from MyThing!")]),r("p",[e._v("As you can see, "),r("code",[e._v("app.ts")]),e._v(" knows nothing about "),r("code",[e._v("MyThing")]),e._v(". All it knows is that it should be registered as a global member and that it can use it without having to import it.")])],1)])],1)};da._withStripped=!0;const pa={paths:["/tutorials/misc/adding-global-members"],meta:{title:"Adding Global Members"}};var ha={data:()=>({title:pa.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},_a=Object(ge.a)(ha,da,[],!1,null,null,null);_a.options.__file="src/drash/vue/pages/tutorials/misc/adding_global_members.vue";var va=_a.exports,ma=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:e.base_url,toc:e.toc,title:e.title}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("There are multiple ways to handle content negotation in Drash. Drash will go over three different ways in this tutorial:")]),r("ul",[r("li",[e._v("By First")]),r("li",[e._v("By Order Of Precedence")]),r("li",[e._v("By Random Selection")])]),r("hr"),r("h2-hash",[e._v("By First")]),r("p",[e._v("You can check the first acceptable content type of the request via its "),r("code",[e._v("Accept")]),e._v(" header by following the example below:")]),r("p",[r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('public GET() {\n  let contentType: string|undefined = this.request.headers.get("Accept").split(";").shift();\n  if (contentType) {\n    this.response.headers.set("Content-Type", contentType);\n    this.response.body = "some response";\n    return this.response;\n  }\n  ...\n  // Handle if undefined code\n  ...\n}')])],1),r("hr"),r("h2-hash",[e._v("By Order Of Preferred")]),r("p",[e._v("You can check the acceptable content types of the request via its "),r("code",[e._v("Accept")]),e._v(" header in the preferred order by following the example below:")]),r("p",[r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('public GET() {\n  let contentTypes: string[] = this.request.headers.get("Accept").split(";");\n  for (let content of contentTypes) {\n    content = content.trim();\n    if (content.indexOf("application/json") != -1) {\n      this.response.headers.set("Content-Type", "application/json");\n      this.response.body = {response: "something"};\n      return this.response;\n    }\n    if (content.indexOf("text/html") != -1) {\n      this.response.headers.set("Content-Type", "text/html");\n      this.response.body = "<div>response: something</div>";\n      return this.response;\n    }\n    if (content.indexOf("text/xml") != -1) {\n      this.response.headers.set("Content-Type", "text/xml");\n      this.response.body = "<response>something</response>";\n      return this.response;\n    }\n  }\n}')])],1),r("p",[e._v("The above code will return the first matched content type in the request's "),r("code",[e._v("Accept")]),e._v(" header.")]),r("hr"),r("h2-hash",[e._v("By Random Selection")]),r("p",[e._v("You can check the acceptable content types of the request in random order via its "),r("code",[e._v("Accept")]),e._v(" header by following the example below:")]),r("p",[r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('public GET() {\n  if (this.request.accepts("application/json")) {\n    this.response.headers.set("Content-Type", "application/json");\n    this.response.body = {response: "something"};\n    return this.response;\n  }\n  if (this.request.accepts("text/html")) {\n    this.response.headers.set("Content-Type", "text/html");\n    this.response.body = "<div>response: something</div>";\n    return this.response;\n  }\n  if (this.request.accepts(["text/xml", "application/xml"])) {\n    this.response.headers.set("Content-Type", "text/xml");\n    this.response.body = "<response>something</response>";\n    return this.response;\n  }\n}')])],1)],1)};ma._withStripped=!0;const fa={paths:["/tutorials/misc/content-negotiation"],meta:{title:"Content Negotiation"}};var ga={data(){return{base_url:this.$conf.drash.base_url,toc:["Before You Get Started","By First","By Order Of Preferred","By Random Selection"],title:"Content Negotiation"}}},ba=Object(ge.a)(ga,ma,[],!1,null,null,null);ba.options.__file="src/drash/vue/pages/tutorials/misc/content_negotiation.vue";var ya=ba.exports,wa=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("This tutorial assumes you have read the Servers: Serving Static Paths tutorial.")]),r("p",[e._v("This tutorial solves the issue of always having to specify "),r("code",[e._v("index.html")]),e._v(" at the end of a static path URI. For example, you can specify "),r("code",[e._v("/my-uri")]),e._v(" instead of "),r("code",[e._v("/my-uri/index.html")]),e._v(".")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("app.ts")]),e._v(" file. Take note of the highlighted code. Using this config will allow you to NOT have to specify "),r("code",[e._v("index.html")]),e._v(" for any static path.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"9"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  directory: "/path/to/your/project",\n  resources: [HomeResource],\n  response_output: "text/html",\n  pretty_links: true,\n  static_paths: ["/public"]\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)])],1)};wa._withStripped=!0;const ka={paths:["/tutorials/misc/pretty-links"],meta:{title:"Pretty Links"}};var xa={data:()=>({title:ka.meta.title,toc:["Before You Get Started","Steps"]})},Ta=Object(ge.a)(xa,wa,[],!1,null,null,null);Ta.options.__file="src/drash/vue/pages/tutorials/misc/pretty_links.vue";var Sa=Ta.exports,Da=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Drash provides a few methods to get all parameters in various scenarios, such as:")]),r("ul",[r("li",[e._v("Get all header params")]),r("li",[e._v("Get all body params")]),r("li",[e._v("Get all path params")]),r("li",[e._v("Get all URL query params")])]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v("const bodyParams = this.request.getAllBodyParams();\nconst headerParams = this.request.getAllHeaderParams();\nconst pathParams = this.request.getAllPathParams();\nconst queryParams = this.request.getAllUrlQueryParams();")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. You resource file will retrieve all header, body, query and path parameters for the request.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class HomeResource extends Drash.Http.Resource {\n  static paths = ["/:name/:region"];\n\n  public POST() {\n    const bodyParams = this.request.getAllBodyParams();\n    const headerParams = this.request.getAllHeaderParams();\n    const pathParams = this.request.getAllPathParams();\n    const queryParams = this.request.getAllUrlQueryParams();\n    const data = {\n      bodyParams,\n      headerParams,\n      pathParams,\n      queryParams\n    };\n    this.response.body = data;\n    return this.response\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\nimport HomeResource from "./home_resource.ts";\n\nconst server = new Drash.Http.Server({\n  resources: [HomeResource]\n});\n\nawait server.run({\n  hostname: "localhost",\n  port: 1337\n});\n\nconsole.log(`Server running on http://${server.hostname}:${server.port}`);')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("POST")]),e._v(" request to "),r("code",[e._v("localhost:1447/Edward/UK")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v('$ curl --header "Content-Type: application/json" \\\n  --request POST \\\n  --data \'{"name":"Edward","region":"UK"}\' \\\n  localhost:1337/Edward/UK')]),r("p",[e._v("You should receive the following response (we pretty-printed the response for you):")]),r("code-block",{attrs:{header:!1,language:"json"}},[e._v('{\n  "bodyParams": {\n    "data": {\n      "name": "Edward",\n      "region": "UK"\n    },\n    "content_type": "application/json"\n  },\n  "headerParams": {\n    "host": "localhost:1337",\n    "user-agent": "curl/7.54.0",\n    "accept": "*/*",\n    "content-type": "application/json",\n    "content-length": "31"\n  },\n  "pathParams": {\n    "name": "Edward",\n    "region": "UK"\n  }\n}')])],1)])],1)};Da._withStripped=!0;const Ra={paths:["/tutorials/requests/get-all-params"],meta:{title:"Get All Params",source_code_uri:"/tutorials/requests/get-all-params"}};var Ca={data:()=>({title:Ra.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Ea=Object(ge.a)(Ca,Da,[],!1,null,null,null);Ea.options.__file="src/drash/vue/pages/tutorials/requests/get_all_params.vue";var qa=Ea.exports,ja=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Getting a value from an "),r("code",[e._v("application/json")]),e._v(" request's body can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const param = this.request.getBodyParam("param_name");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. You resource file will check for the "),r("code",[e._v("name")]),e._v(" param in the request's body. If it exists, then it will return what was passed in. If it does not exist, then it will throw a "),r("code",[e._v("400 Bad Request")]),e._v(" response.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/"\n  ];\n \n  public POST() {\n    const param = this.request.getBodyParam("name");\n \n    if (!param) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires the `name` body param."\n      );\n    }\n \n    this.response.body = `You passed in the following body param: ${param}`;\n \n    return this.response;\n  }\n \n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/plain",\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("POST")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(" and pass in "),r("code",[e._v('{"name":"denosaurus"}')]),e._v(" in the request body.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v('$ curl --header "Content-Type: application/json" \\\n--request POST \\\n--data \'{"name":"denosaurus"}\' \\\nlocalhost:1447')]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("You passed in the following body param: denosaurus")])],1),r("li",[r("p",[e._v("Make the same request, but change the data to use "),r("code",[e._v("username")]),e._v(" instead of "),r("code",[e._v("name")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",line_highlight:"3",language:"shell-session"}},[e._v('$ curl --header "Content-Type: application/json" \\\n--request POST \\\n--data \'{"username":"denosaurus"}\' \\\nlocalhost:1447')]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("This resource requires the `name` body param.")])],1)])],1)};ja._withStripped=!0;const Ha={paths:["/tutorials/requests/handling-json-bodies"],meta:{title:"Handling JSON Bodies",source_code_uri:"/tutorials/requests/handling_application_json_bodies"}};var $a={data:()=>({title:Ha.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Aa=Object(ge.a)($a,ja,[],!1,null,null,null);Aa.options.__file="src/drash/vue/pages/tutorials/requests/handling_application_json_bodies.vue";var Pa=Aa.exports,Ya=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Getting a value from an "),r("code",[e._v("application/x-www-form-urlencoded")]),e._v(" request's body can be done using the following call:"),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const param = this.request.getBodyParam("param_name");')])],1),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. You resource file will check for the "),r("code",[e._v("snack")]),e._v(" param in the request's body. If it exists, then it will return what was passed in. If it does not exist, then it will throw a "),r("code",[e._v("400 Bad Request")]),e._v(" response.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/"\n  ];\n \n  public POST() {\n    const param = this.request.getBodyParam("snack");\n \n    if (!param) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires the `snack` body param."\n      );\n    }\n \n    this.response.body = `You passed in the following body param: ${param}`;\n \n    return this.response;\n  }\n \n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/plain",\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("POST")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(" and pass in "),r("code",[e._v('{"snack":"denosaurus"}')]),e._v(" in the request body.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --header \"Content-Type: application/x-www-form-urlencoded\" \\\n--request POST \\\n--data 'snack=denosaurus' \\\nlocalhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("You passed in the following body param: denosaurus")])],1),r("li",[r("p",[e._v("Make the same request, but change the data to use "),r("code",[e._v("meal")]),e._v(" instead of "),r("code",[e._v("snack")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",line_highlight:"3",language:"shell-session"}},[e._v("$ curl --header \"Content-Type: application/x-www-form-urlencoded\" \\\n--request POST \\\n--data 'meal=denosaurus' \\\nlocalhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("This resource requires the `snack` body param.")])],1)])],1)};Ya._withStripped=!0;const La={paths:["/tutorials/requests/handling-url-encoded-bodies"],meta:{title:"Handling URL Encoded Bodies",source_code_uri:"/tutorials/requests/handling_application_x_www_form_urlencoded_bodies"}};var Ia={data:()=>({title:La.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Ma=Object(ge.a)(Ia,Ya,[],!1,null,null,null);Ma.options.__file="src/drash/vue/pages/tutorials/requests/handling_application_x_www_form_urlencoded_bodies.vue";var Oa=Ma.exports,Ba=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Drash's "),r("code",[e._v("multipart/form-data")]),e._v(" parser uses Deno Standard Modules' "),r("code",[r("a",{attrs:{href:"https://github.com/denoland/deno/blob/master/std/mime/multipart.ts#L254",target:"_BLANK"}},[e._v("MultipartReader")])]),e._v(".")]),r("p",[e._v("Getting a value from a "),r("code",[e._v("multipart/form-data")]),e._v(" request's body can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const file = this.request.getBodyFile("file_name");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  ▾ uploads/\n    my_uploaded_file.txt\n  app.ts\n  files_resource.ts\n  my_file.txt")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. Your resource file will check for the "),r("code",[e._v("my_file")]),e._v(" file in the request's body. If it exists, then it will write its contents to "),r("code",[e._v("outputFile")]),e._v(". If it does not exist, then it will throw a "),r("code",[e._v("400 Bad Request")]),e._v(" response.")]),r("code-block",{attrs:{title:"/path/to/your/project/files_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/files"\n  ];\n \n  public POST() {\n    const decoder = new TextDecoder();\n    const file = this.request.getBodyFile("my_file");\n \n    if (!file || !file.content) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires files to be uploaded via the request body."\n      );\n    }\n \n    const outputFile = "./uploads/my_uploaded_file.txt";\n \n    Deno.writeFileSync(outputFile, file.content);\n \n    this.response.body = `You uploaded the following to ${outputFile}: `\n      + `\\n${decoder.decode(file.content)}`;\n \n    return this.response;\n  }\n \n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("my_file.txt")]),e._v(" file so it can be passed in the request body.")]),r("code-block",{attrs:{title:"/path/to/your/project/my_file.txt",language:"text"}},[e._v("Hello, world!\n\nI am a simple text file.")])],1),r("li",[r("p",[e._v("Create your app file. The "),r("code",[e._v("memory_allocation.multipart_form_data")]),e._v(" config is how much memory in megabytes you want to allow the "),r("code",[e._v("multipart/form-data")]),e._v(" reader to allocate to reading files. If you do not specify this config, Drash will default to "),r("code",[e._v("10")]),e._v(" megabytes.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\nimport FilesResource from "./files_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/plain",\n  resources: [FilesResource],\n  memory_allocation: {\n    multipart_form_data: 128\n  },\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});\n \nconsole.log(`Server running on ${server.hostname}:${server.port}`)')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-write app.ts")])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("uploads")]),e._v(" folder in your project's directory. This is where the output file will be stored. If you skip this step, you will get the following error: "),r("code",[e._v('"No such file or directory (os error 2)"')]),e._v(".")])]),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("POST")]),e._v(" request to "),r("code",[e._v("localhost:1447/files")]),e._v(" and pass in "),r("code",[e._v("my_file.txt")]),e._v(" in the request body. The name of the file is before "),r("code",[e._v("=@")]),e._v(". This is the name your resource will check for when trying to get the file.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v('$ curl -F "my_file=@my_file.txt" localhost:1447/files')]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("You uploaded the following to ./uploads/my_uploaded_file.txt:\nHello, world!\n\nI am a simple text file.")])],1),r("li",[r("p",[e._v("Check your "),r("code",[e._v("uploads")]),e._v(" directory. You should see "),r("code",[e._v("my_uploaded_file.txt")]),e._v(" with the following contents:")]),r("code-block",{attrs:{title:"/path/to/your/project/uploads/my_uploaded_file.txt"}},[e._v("Hello, world!\n\nI am a simple text file.")])],1),r("li",[r("p",[e._v("Make the same request, but change the file's name to hello.")]),r("p",[r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v('$ curl -F "hello=@my_file.txt" localhost:1447/files')])],1),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{title:"Terminal",header:!1}},[e._v("This resource requires files to be uploaded via the request body.")])],1)])],1)};Ba._withStripped=!0;const Ga={paths:["/tutorials/requests/handling-multipart-bodies"],meta:{title:"Handling Multipart Bodies",source_code_uri:"/tutorials/requests/handling_multipart_form_data_bodies"}};var Na={data:()=>({title:Ga.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Ua=Object(ge.a)(Na,Ba,[],!1,null,null,null);Ua.options.__file="src/drash/vue/pages/tutorials/requests/handling_multipart_form_data_bodies.vue";var Va=Ua.exports,Fa=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Getting a value from a request's path params can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const param = this.request.getPathParam("param_name");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  users_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. You resource file will check for the "),r("code",[e._v(":id")]),e._v(" path param in the request's URL. If it exists and is a "),r("code",[e._v("number")]),e._v(", then it will return what was passed in. If it is "),r("code",[e._v("NaN")]),e._v(", then it will throw a "),r("code",[e._v("400 Bad Request")]),e._v(" response.")]),r("code-block",{attrs:{title:"/path/to/your/project/users_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class UsersResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/users/:id"\n  ];\n \n  public GET() {\n    const userId = parseInt(this.request.getPathParam("id"));\n \n    if (isNaN(userId)) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires the `:id` path param to be a number."\n      );\n    }\n \n    this.response.body = `You passed in the following user ID as the path param: ${userId}`;\n \n    return this.response;\n  }\n \n}')]),r("p",[e._v("You can also specify optional parameters by adding "),r("code",[e._v("?")]),e._v(". The resource would still match even if the optional parameters are not passed in. For example:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('static paths = ["/users/:id/:name?"];\n// or\nstatic paths = ["/users/:name?"];\n// or\nstatic paths = ["/users/:id/:name/:age?/:city?"];')]),r("p",[e._v("You can specify as many optional parameters as you want, but required parameters must precede optional parameters. Using the path "),r("code",[e._v("/users/:id/:name/:age?/:city")]),e._v(" from the example above, the resource will match for the following URI's:")]),r("ul",[r("li",[r("code",[e._v("/users/1/John")])]),r("li",[r("code",[e._v("/users/1/John/")])]),r("li",[r("code",[e._v("/users/1/John/54")])]),r("li",[r("code",[e._v("/users/1/John/54/")])]),r("li",[r("code",[e._v("/users/1/John/54/UK")])]),r("li",[r("code",[e._v("/users/1/John/54/UK/")])])])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport UsersResource from "./users_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/plain",\n  resources: [UsersResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/users/1")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users/1")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("You passed in the following user ID as the path param: 1")])],1),r("li",[r("p",[e._v("Make the same request, but change the "),r("code",[e._v(":id")]),e._v(" path param to "),r("code",[e._v("one")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users/one")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("This resource requires the `:id` path param to be a number.")])],1)])],1)};Fa._withStripped=!0;const Wa={paths:["/tutorials/requests/handling-path-params"],meta:{title:"Handling Path Params",source_code_uri:"/tutorials/requests/handling_path_params"}};var Ka={data:()=>({title:Wa.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Ja=Object(ge.a)(Ka,Fa,[],!1,null,null,null);Ja.options.__file="src/drash/vue/pages/tutorials/requests/handling_path_params.vue";var za=Ja.exports,Qa=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Getting a value from a request's URL query params can be done using the following call:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('const param = this.request.getUrlQueryParam("param_name");')]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. You resource file will check for the "),r("code",[e._v("id")]),e._v(" URL query param in the request's URL. If it exists and is a "),r("code",[e._v("number")]),e._v(", then it will return what was passed in. If it is "),r("code",[e._v("NaN")]),e._v(" or does not exist, then it will throw a "),r("code",[e._v("400 Bad Request")]),e._v(" response.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/users"\n  ];\n \n  public GET() {\n    let userId = this.request.getUrlQueryParam("id");\n \n    if (!userId) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires the `id` URL query param."\n      );\n    }\n \n    userId = parseInt(userId);\n    if (isNaN(userId)) {\n      throw new Drash.Exceptions.HttpException(\n        400,\n        "This resource requires the `id` URL query param to be a number."\n      );\n    }\n \n    this.response.body = `You passed in the following user ID as the URL query param: ${userId}`;\n \n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "text/plain",\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[e._v("Run your app."),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/users?id=1")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users?id=1")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("You passed in the following user ID as the URL query param: 1")])],1),r("li",[r("p",[e._v("Make the same request, but change the "),r("code",[e._v("id")]),e._v(" URL query param to "),r("code",[e._v("one")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/users?id=one")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("This resource requires the `id` URL query param to be a number.")])],1),r("li",[r("p",[e._v("Make the same request, but do not add the "),r("code",[e._v("id")]),e._v(" URL query param.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1,language:"shell-session"}},[e._v("This resource requires the `id` URL query param.")])],1)])],1)};Qa._withStripped=!0;const Xa={paths:["/tutorials/requests/handling-url-query-params"],meta:{title:"Handling URL Query Params",source_code_uri:"/tutorials/requests/handling_url_query_params"}};var Za={data:()=>({title:Xa.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},en=Object(ge.a)(Za,Qa,[],!1,null,null,null);en.options.__file="src/drash/vue/pages/tutorials/requests/handling_url_query_params.vue";var tn=en.exports,rn=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Drash defines resources according to the MDN: "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web",target:"_BLANK"}},[e._v("https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web")])]),r("p",[e._v("Unlike most other frameworks, Drash uses resource classes to handle requests and send responses. So, instead of defining a route with a specific HTTP method (e.g., "),r("code",[e._v("app.get()")]),e._v("), creating a controller class, and mapping that controller class to that route; you create a resource class, define its routes in its "),r("code",[e._v("paths")]),e._v(" property, and define its HTTP methods as "),r("code",[e._v("public")]),e._v(" functions.")]),r("p",[e._v("You create a resource by extending the "),r("code",[e._v("Drash.Http.Resource")]),e._v(" class. This is the base class for all resources. You can define your own base resource class, but it MUST extend the "),r("code",[e._v("Drash.Http.Resource")]),e._v(" class.")]),r("p",[e._v("Drash servers only register the resources that are specified in their "),r("code",[e._v("resources")]),e._v(" config. In the example code below, the "),r("code",[e._v("HomeResource")]),e._v(" class is the only resource that will be regisrered by the server.")]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"6"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  resources: [HomeResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')]),r("p",[e._v("When Drash servers register resources, they also register their paths as accessible URIs. An accessible URI is a URI that a client can target. In other words, if a resource specifies "),r("code",[e._v("/my-resource")]),e._v(" in its "),r("code",[e._v("paths")]),e._v(" property, then clients can go to "),r("code",[e._v("{server-adress.tld}/my-resource")]),e._v(".")]),r("p",[e._v("Any URI that does not exist in any resource is a non-accessible URI. Non-accessible URIs ultimately lead to a "),r("code",[e._v("404 Not Found")]),e._v(" error response.")]),r("p",[e._v("Adding resources is as simple as importing the resource and adding it to the "),r("code",[e._v("resources")]),e._v(" config (see below). The "),r("code",[e._v("UsersResource")]),e._v(" class is imported and added to the "),r("code",[e._v("resources")]),e._v(" config.")]),r("code-block",{attrs:{header:!1,language:"typescript",line_highlight:"4,9"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\nimport UsersResource from "./users_resource.ts";\n \nconst server = new Drash.Http.Server({\n  resources: [\n    HomeResource,\n    UsersResource\n  ],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')]),r("hr"),r("h2-hash",[e._v("Creating A Resource")]),r("p",[e._v("Take the example below. This resource handles requests at the "),r("code",[e._v("/")]),e._v(" URI. If a client makes a request to "),r("code",[e._v("/")]),e._v(", this resource would handle that request.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = "GET request received!";\n    return this.response;\n  }\n \n  public POST() {\n    this.response.body = "POST request received!";\n    return this.response;\n  }\n}')]),r("h3",[e._v("Adding More HTTP Methods")]),r("p",[e._v("Giving a resource the ability to handle diffrent types of requests is as easy as adding the HTTP method to handle that request. Taking the above code, you can add more HTTP methods like the ones highlighted below; and your resource would be able to handle those requests.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript",line_highlight:"16-24"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = "GET request received!";\n    return this.response;\n  }\n \n  public POST() {\n    this.response.body = "POST request received!";\n    return this.response;\n  }\n \n  public PUT() {\n    this.response.body = "PUT request received!";\n    return this.response;\n  }\n \n  public DELETE() {\n    this.response.body = "DELETE request received!";\n    return this.response;\n  }\n}')]),r("p",[e._v("As you can see, the HTTP methods you add and make "),r("code",[e._v("public")]),e._v(" in a resource are the HTTP methods clients are allowed to call. If a client tries to make a "),r("code",[e._v("PATCH")]),e._v(" request to this resource, it would receive a "),r("code",[e._v("405 Method Not Allowed")]),e._v(" error as a response because this resource does not have "),r("code",[e._v("public PATCH() { ... }")]),e._v(" defined.")]),r("hr"),r("h2-hash",[e._v("Path Params")]),r("p",[e._v("Resources are able to specify path params in their paths to allow them to cover multiple endpoints.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript",line_highlight:"5"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n  static paths = [\n    "/:my_param",\n  ];\n \n  public GET() {\n    this.response.body = "GET request received!";\n \n    let myParam = this.request.getPathParam("my_param");\n \n    this.response.body += ` You passed in the following path param: ${myParam}`;\n \n    return this.response;\n  }\n}')]),r("p",[e._v("Examples of URIs that this resource would handle:")]),r("ul",[r("li",[r("request",{attrs:{method:"get",url:"/hello"}}),e._v("Responds with: Get request received! You passed in the following path param: hello")],1),r("li",[r("request",{attrs:{method:"get",url:"/world"}}),e._v("Responds with: Get request received! You passed in the following path param: world")],1),r("li",[r("request",{attrs:{method:"get",url:"/something"}}),e._v("Responds with: Get request received! You passed in the following path param: something")],1)]),r("hr"),r("h2-hash",[e._v("Optional Path Params")]),r("p",[e._v("Path parameters can also be optional, allowing a resource to accept a URI that doesn't depend on certain parameters, but still wishes to accept the request, with or without them.")]),r("code-block",{attrs:{title:"/path/to/your/project/users_resource.ts",language:"typescript",line_highlight:"5"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class UsersResource extends Drash.Http.Resource {\n  static paths = [\n    "/users/:id/:name?/:age?/:city?",\n  ];\n \n  public GET() {\n    this.response.body = "GET request received!";\n \n    const id   = this.request.getPathParam("id");\n    const name = this.request.getPathParam("name");\n    const age  = this.request.getPathParam("age");\n    const city = this.request.getPathParam("city");\n \n    this.response.body += ` You passed in the following path params: |${id}|${name}|${age}|${city}|`;\n \n    return this.response;\n  }\n}')]),r("p",[e._v("You can have as many optional parameters as you wish, but required parameters must precede optional parameters.")]),r("P",[e._v("Examples of URIs that this resource would handle:")]),r("ul",[r("li",[r("request",{attrs:{method:"get",url:"/users/1"}}),e._v("Responds with: Get request received! You passed in the following path params: |1||||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/"}}),e._v("Responds with: Get request received! You passed in the following path params: |1||||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John/"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John/54"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|54||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John/54/"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|54||")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John/54/UK"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|54|UK|")],1),r("li",[r("request",{attrs:{method:"get",url:"/users/1/John/54/UK/"}}),e._v("Responds with: Get request received! You passed in the following path params: |1|John|54|UK|")],1)]),r("hr"),r("h2-hash",[e._v("Regular Expression URIs")]),r("p",[e._v("Resources are able to specify regular expressions in their paths to allow them to cover multiple endpoints.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript",line_highlight:"5"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n  static paths = [\n    "/([0-9]$)",\n  ];\n \n  public GET() {\n    this.response.body = "GET request received!";\n \n    return this.response;\n  }\n}')]),r("p",[e._v("Examples of URIs that this resource would handle:")]),r("ul",[r("li",[r("request",{attrs:{method:"get",url:"/1"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/2"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/3"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/9"}})],1)]),r("p",[e._v("This resource would not handle the following URIs because they do not match the regular expression:")]),r("ul",[r("li",[r("request",{attrs:{method:"get",url:"/11"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/12"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/13"}})],1),r("li",[r("request",{attrs:{method:"get",url:"/99"}})],1)])],1)};rn._withStripped=!0;const sn={paths:["/tutorials/resources/creating-a-resource"],meta:{title:"Creating A Resource",source_code_uri:"/tutorials/resources/creating_a_resource"}};var on={data:()=>({title:"Creating A Resource",toc:["Before You Get Started","Creating A Resource","Path Params","Optional Path Params","Regular Expression URIs"]})},an=Object(ge.a)(on,rn,[],!1,null,null,null);an.options.__file="src/drash/vue/pages/tutorials/resources/creating_a_resource.vue";var nn=an.exports,ln=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("Drash defines redirections according to the MDN: "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections",target:"_BLANK"}},[e._v("https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections")])]),r("p",[e._v("Permanently redirect:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('this.response.redirect(301, "https://drash.land")')]),r("p",[e._v("Temporarily redirect:")]),r("code-block",{attrs:{header:!1,language:"typescript"}},[e._v('this.response.redirect(302, "/cola/1")')]),r("p",[e._v("You can redirect using a fully-qualified URL or a relative URL as seen in the example code blocks above.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  cola_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("ColaResource")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/cola_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class ColaResource extends Drash.Http.Resource {\n  protected COLAS: any = {\n    1: "Diet Cola",\n    2: "Vanilla Cola",\n    3: "Cherry Cola",\n  };\n \n  static paths = ["/cola/:id"];\n \n  public GET() {\n    let colaId = this.request.getPathParam("id");\n \n    if (!COLAS[colaId]) {\n      return this.response.redirect(302, "/colas/1");\n    }\n \n    this.response.body = this.getCola(colaId);\n    return this.response;\n  }\n \n  protected getCola(colaId: string) {\n    return this.COLAS[colaId];\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport ColaResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [ColaResource],\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/cola?id=5")]),e._v(" to be redirected to "),r("code",[e._v("/cola/1")]),e._v(".")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl localhost:1447/cola?id=5")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("Diet Cola")])],1)])],1)};ln._withStripped=!0;const cn={paths:["/tutorials/responses/redirects"],meta:{title:"Redirects"}};var un={data:()=>({title:cn.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},dn=Object(ge.a)(un,ln,[],!1,null,null,null);dn.options.__file="src/drash/vue/pages/tutorials/responses/redirects.vue";var pn=dn.exports,hn=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will create a very basic server that handles some common requests: "),r("code",[e._v("GET")]),e._v(", "),r("code",[e._v("POST")]),e._v(", "),r("code",[e._v("PUT")]),e._v(", and "),r("code",[e._v("DELETE")]),e._v(".")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your resource file. Your resource file will be able to handle "),r("code",[e._v("GET")]),e._v(", "),r("code",[e._v("POST")]),e._v(", "),r("code",[e._v("PUT")]),e._v(", and "),r("code",[e._v("DELETE")]),e._v(" requests to the "),r("code",[e._v("/")]),e._v(" URI.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = "GET request received!";\n    return this.response;\n  }\n \n  public POST() {\n    this.response.body = "POST request received!";\n    return this.response;\n  }\n \n  public PUT() {\n    this.response.body = "PUT request received!";\n    return this.response;\n  }\n \n  public DELETE() {\n    this.response.body = "DELETE request received!";\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your app file. Your app file will register your resource via the "),r("code",[e._v("resources")]),e._v(" config. By default, your Drash server will send "),r("code",[e._v("application/json")]),e._v(" responses via the "),r("code",[e._v("response_output")]),e._v(".")]),r("p",[e._v("Optionally, you can "),r("code",[e._v("await")]),e._v(" on the "),r("code",[e._v("server.run()")]),e._v(" call in case you want to run subsequent code after the call. "),r("code",[e._v("await")]),e._v("ing for the "),r("code",[e._v("server.run()")]),e._v(" call ensures that your server is running before any subsequent code runs.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json", // Accepts text/html, text/xml, application/xml\n  resources: [HomeResource],\n});\n \nserver.run({ // or await server.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net app.ts")])],1),r("li",[r("p",[e._v("Using "),r("code",[e._v("curl")]),e._v(" (or similar command), make a "),r("code",[e._v("GET")]),e._v(" request to "),r("code",[e._v("localhost:1447/")]),e._v(". You should receive the following response:")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request GET localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("GET request received!")])],1),r("li",[r("p",[e._v("Make a "),r("code",[e._v("PUT")]),e._v(" request.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request PUT localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("PUT request received!")])],1),r("li",[r("p",[e._v("Make a "),r("code",[e._v("POST")]),e._v(" request.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request POST localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("POST request received!")])],1),r("li",[r("p",[e._v("Make a "),r("code",[e._v("DELETE")]),e._v(" request.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request DELETE localhost:1447")]),r("p",[e._v("You should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("DELETE request received!")])],1),r("li",[r("p",[e._v("Make a "),r("code",[e._v("PATCH")]),e._v(" request.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ curl --request PATCH localhost:1447")]),r("p",[e._v("Since "),r("code",[e._v("PATCH")]),e._v(" is not defined in your resource, it is not allowed; therefore, you should receive the following response:")]),r("code-block",{attrs:{header:!1}},[e._v("Method Not Allowed")])],1)])],1)};hn._withStripped=!0;const _n={paths:["/tutorials/servers/creating-an-http-server"],meta:{title:"Creating An HTTP Server"}};var vn={data:()=>({title:"Creating An HTTP Server",toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},mn=Object(ge.a)(vn,hn,[],!1,null,null,null);mn.options.__file="src/drash/vue/pages/tutorials/servers/creating_an_http_server.vue";var fn=mn.exports,gn=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("The only difference between running an HTTP server and an HTTPS server is the method you use to run the server.")]),r("p",[e._v("HTTP servers use "),r("code",[e._v("server.run()")]),e._v(" and HTTPS servers use "),r("code",[e._v("server.runTLS()")]),e._v(" with two extra configs: "),r("code",[e._v("certFile")]),e._v(" and "),r("code",[e._v("keyFile")]),e._v(".")]),r("hr"),r("h2-hash",[e._v("Server Syntax")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [HomeResource],\n});\n \nserver.runTLS({\n  hostname: "localhost",\n  port: 1447,\n  certFile: "/path/to/certFile.crt",\n  keyFile: "/path/to/keyFile.key"\n});')])],1)};gn._withStripped=!0;const bn={paths:["/tutorials/servers/creating-an-https-server"],meta:{title:"Creating A HTTPS Server",source_code_uri:"/tutorials/servers/creating_an_https_server"}};var yn={data:()=>({title:"Creating A HTTPS Server",toc:["Before You Get Started","Server Syntax"]})},wn=Object(ge.a)(yn,gn,[],!1,null,null,null);wn.options.__file="src/drash/vue/pages/tutorials/servers/creating_an_https_server.vue";var kn=wn.exports,xn=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will build a very simple HTML page that can serve a CSS file.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  ▾ public/\n    style.css\n  app.ts\n  home_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file. The "),r("code",[e._v("static_paths")]),e._v(" config tells your Drash server what paths on your filesystem contain static files that can be served to clients. Ultimately, your Drash server will prefix the "),r("code",[e._v("directory")]),e._v(" config with your paths in your "),r("code",[e._v("static_paths")]),e._v(" config. For example, your Drash server will take a request to "),r("code",[e._v("/public/assets/css/style.css")]),e._v(" and resolve it to "),r("code",[e._v("{directory_config}/public/assets/css/style.css")]),e._v(".")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript",line_highlight:"6,9"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  directory: "/path/to/your/project",\n  resources: [HomeResource],\n  response_output: "text/html",\n  static_paths: ["/public"]\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("style.css")]),e._v(" file in your static directory.")]),r("code-block",{attrs:{title:"/path/to/your/project/public/style.css",language:"css"}},[e._v(".my-text {\n    color: #ff0000;\n}")])],1),r("li",[r("p",[e._v("Create your resource file. Your resource file will serve HTML; and your HTML will reference "),r("code",[e._v("/public/style.css")]),e._v(".")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = `\n    <!DOCTYPE html>\n    '),r("html",[r("head",[r("title",[e._v("Drash")]),e._v(" "),r("link",{attrs:{href:"/public/style.css",rel:"stylesheet"}})]),e._v(" "),r("body",[r("h1",{staticClass:"my-text"},[e._v("This is my title and it is red.")])])]),e._v("`;\n \n    return this.response;\n  }\n}")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser. You should receive the following response:")]),r("p",[r("strong",{staticStyle:{color:"#ff0000","font-family":"'Times New Roman', 'Times'"}},[e._v("This is my title and it is red.")])])])])],1)};xn._withStripped=!0;const Tn={paths:["/tutorials/servers/serving-static-paths"],meta:{title:"Serving Static Paths",source_code_uri:"/tutorials/servers/serving_static_paths"}};var Sn={data:()=>({title:Tn.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},Dn=Object(ge.a)(Sn,xn,[],!1,null,null,null);Dn.options.__file="src/drash/vue/pages/tutorials/servers/serving_static_paths.vue";var Rn=Dn.exports,Cn=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will build a very simple HTML page that can serve a CSS file that is defined at a virtual path. A virtual path is a path that maps to a physical path on your server and has its own set of permissions. With virtual paths, you can keep your project's folder structure flexible and secure.")]),r("p",[e._v("Virtual paths are enabled by defining them in the "),r("code",[e._v("static_paths")]),e._v(" server config.")]),r("p",[e._v("Using virtual paths requires the "),r("code",[e._v("directory")]),e._v(" server config. This config helps the server map virtual paths to physical paths on your server.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  ▾ back_end/\n    app.ts\n    home_resource.ts\n  ▾ front_end/\n    style.css")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your app file. You will be using the "),r("code",[e._v("static_paths")]),e._v(" config to define your virtual paths. Also, you will define the "),r("code",[e._v("directory")]),e._v(" config to help your server map virtual paths to physical paths.")]),r("div",{staticClass:"mt-5 mb-5 bg-blue-100 border-l-4 border-teal-500 rounded-b text-blue-900 px-4 py-3 shadow-md",attrs:{role:"alert"}},[r("div",{staticClass:"py-1"},[r("p",{staticClass:"font-bold"},[e._v("Wait! Please read this before continuing!")]),r("p",{staticClass:"text-sm"},[e._v("Your "),r("code",{staticClass:"bg-transparent text-blue-900"},[e._v("directory")]),e._v(" config SHOULD NOT HAVE a trailing slash and your physical paths SHOULD HAVE a leading slash. If you do not set this up properly, then your server will not map virtual paths to physical paths correctly.")])])]),r("p",[e._v("In the example code block below, you are defining a virtual path of "),r("code",[e._v("/assets")]),e._v(" to the physical path of "),r("code",[e._v("/front_end")]),e._v(" (the key is the virtual path and the value is the physical path). The physical path must be "),r("em",[e._v("relative")]),e._v(" to the directory you specify in the "),r("code",[e._v("directory")]),e._v(" config.")]),r("code-block",{attrs:{title:"/path/to/your/project/back_end/app.ts",language:"typescript",line_highlight:"6,10"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\n \nconst server = new Drash.Http.Server({\n  directory: "/path/to/your/project",\n  resources: [HomeResource],\n  response_output: "text/html",\n  static_paths: {\n    "/assets": "/front_end", // The physical path needs to be relative to your directory config\n  }\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("style.css")]),e._v(" file in the physical path's location.")]),r("code-block",{attrs:{title:"/path/to/your/project/front_end/style.css",language:"css"}},[e._v(".my-text {\n    color: #ff0000;\n}")])],1),r("li",[r("p",[e._v("Create your resource file. Your resource file will serve HTML; and your HTML will reference "),r("code",[e._v("/assets/style.css")]),e._v(" — the virtual path.")]),r("code-block",{attrs:{title:"/path/to/your/project/back_end/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class HomeResource extends Drash.Http.Resource {\n \n  static paths = ["/"];\n \n  public GET() {\n    this.response.body = `\n    <!DOCTYPE html>\n    '),r("html",[r("head",[r("title",[e._v("Drash")]),e._v(" "),r("link",{attrs:{href:"/assets/style.css",rel:"stylesheet"}})]),e._v(" "),r("body",[r("h1",{staticClass:"my-text"},[e._v("This is my title and it is red.")])])]),e._v("`;\n \n    return this.response;\n  }\n}")])],1)]),r("hr"),r("h2-hash",[e._v("Verification")]),r("ol",[r("li",[r("p",[e._v("Run your app.")]),r("code-block",{attrs:{title:"Terminal",language:"shell-session"}},[e._v("$ deno run --allow-net --allow-read app.ts")])],1),r("li",[r("p",[e._v("Go to "),r("code",[e._v("localhost:1447")]),e._v(" in your browser. You should receive the following response:")]),r("p",[r("strong",{staticStyle:{color:"#ff0000","font-family":"'Times New Roman', 'Times'"}},[e._v("This is my title and it is red.")])])])])],1)};Cn._withStripped=!0;const En={paths:["/tutorials/servers/serving-virtual-paths"],meta:{title:"Serving Virtual Paths",source_code_uri:"/tutorials/servers/serving_virtual_paths"}};var qn={data:()=>({title:En.meta.title,toc:["Before You Get Started","Folder Structure End State","Steps","Verification"]})},jn=Object(ge.a)(qn,Cn,[],!1,null,null,null);jn.options.__file="src/drash/vue/pages/tutorials/servers/serving_virtual_paths.vue";var Hn=jn.exports,$n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page",{attrs:{base_url:this.$conf.drash.base_url,title:e.title,toc:e.toc}},[r("h2-hash",[e._v("Before You Get Started")]),r("p",[e._v("In this tutorial, you will learn how to test your Drash server and its resources using Deno Standard Modules' "),r("a",{attrs:{href:"https://github.com/denoland/deno/tree/master/std/testing",target:"_BLANK"}},[e._v("testing")]),e._v(" module.")]),r("p",[e._v("This tutorial will cover testing three resources in a single Drash server. Two of the resources will have a "),r("code",[e._v("database")]),e._v(" property to simulate querying a database for records.")]),r("hr"),r("folder-structure-end-state",[e._v("▾ /path/to/your/project/\n  app.ts\n  home_resource.ts\n  orders_resource.ts\n  run_tests.ts\n  tests.ts\n  users_resource.ts")]),r("hr"),r("h2-hash",[e._v("Steps")]),r("ol",[r("li",[r("p",[e._v("Create your "),r("code",[e._v("HomeResource")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/home_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n\nexport default class HomeResource extends Drash.Http.Resource {\n\n  static paths = ["/"];\n\n  public GET() {\n    this.response.body = "Welcome home!";\n    return this.response;\n  }\n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("OrdersResource")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/orders_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class OrdersResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/orders/:id"\n  ];\n \n  // Simulate a database with order records\n  protected database: {[key: string]: {\n      id: number,\n      name: string,\n      quantity: number,\n      price: number\n    }} = {\n    "1090987": {\n      id: 1090987,\n      name: "Gadgets",\n      quantity: 50,\n      price: 1000\n    },\n    "8878213": {\n      id: 8878213,\n      name: "Gizmos",\n      quantity: 25,\n      price: 2000\n    },\n  };\n \n  public GET() {\n    const id = this.request.getPathParam("id");\n    if (!id) {\n      throw new Drash.Exceptions.HttpException(400, "`id` parameter must be passed in")\n    }\n    this.response.body = this.getOrder(id);\n    return this.response;\n  }\n \n  protected getOrder(id: string) {\n    if (this.database[id]) {\n      return this.database[id];\n    }\n \n    throw new Drash.Exceptions.HttpException(404, `Order #${id} not found.`);\n  }\n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("UsersResource")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/users_resource.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nexport default class UsersResource extends Drash.Http.Resource {\n \n  static paths = [\n    "/users/:id"\n  ];\n \n  // Simulate a database with user records\n  protected database: {[key: string]: {\n    id: number,\n    name: string\n  }} = {\n    "1388873": {\n      id: 1388873,\n      name: "Seller",\n    },\n    "1983765": {\n      id: 1983765,\n      name: "Buyer",\n    },\n  };\n \n  public GET() {\n    const id = this.request.getPathParam("id");\n    if (!id) {\n      throw new Drash.Exceptions.HttpException(400, "`id` must be passed in")\n    }\n    this.response.body = this.getUser(id);\n    return this.response;\n  }\n \n  protected getUser(id: string) {\n    if (this.database[id]) {\n      return this.database[id];\n    }\n \n    throw new Drash.Exceptions.HttpException(404, `User #${id} not found.`);\n  }\n}')])],1),r("li",[r("p",[e._v("Create your "),r("code",[e._v("app")]),e._v(" file.")]),r("code-block",{attrs:{title:"/path/to/your/project/app.ts",language:"typescript"}},[e._v('import { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\n \nimport HomeResource from "./home_resource.ts";\nimport OrdersResource from "./orders_resource.ts";\nimport UsersResource from "./users_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n    HomeResource,\n    OrdersResource,\n    UsersResource\n  ]\n});\n \nserver.run({\n  hostname: "localhost",\n  port: 1447\n});')])],1)]),r("hr"),r("h2-hash",[e._v("Writing Your Tests")]),r("ol",[r("li",[r("p",[e._v("Create your test runner file. Your test runner file will import and run your tests. Your server needs to be running so the testing module can make requests to your server using "),r("code",[e._v("fetch()")]),e._v(" and receive the responses you expect.")]),r("code-block",{attrs:{title:"/path/to/your/project/run_tests.ts",language:"typescript"}},[e._v('// A single file to run all your tests\nimport "./tests.ts";')])],1),r("li",[r("p",[e._v("Write your tests.")]),r("code-block",{attrs:{title:"/path/to/your/project/tests.ts",language:"typescript"}},[e._v('import { assertEquals } from "https://deno.land/std@0.75.0/testing/asserts.ts";\nimport { Drash } from "https://deno.land/x/drash@'+e._s(e.$conf.drash.latest_version)+'/mod.ts";\nimport HomeResource from "./home_resource.ts";\nimport OrdersResource from "./orders_resource.ts";\nimport UsersResource from "./users_resource.ts";\n \nconst server = new Drash.Http.Server({\n  response_output: "application/json",\n  resources: [\n      HomeResource,\n      UsersResource,\n      OrdersResource\n  ]\n});\nconst httpOptions = {\n  hostname: "localhost",\n  port: 1447\n};\n \nDeno.test({\n  name: "HomeResource - GET /",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), "Welcome home!");\n    server.close()\n  }\n});\n \nDeno.test({\n  name: "UsersResource - GET /users/1",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/users/1", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), "User #1 not found.");\n    server.close()\n  }\n});\n \nDeno.test({\n  name: "UsersResource - GET /users/1388873",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/users/1388873", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), {\n      id: 1388873,\n      name: "Seller",\n    });\n    await server.close();\n  }\n});\n \nDeno.test({\n  name: "UsersResource - GET /users/1983765",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/users/1983765", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), {\n      id: 1983765,\n      name: "Buyer",\n    });\n    server.close()\n  }\n});\n \nDeno.test({\n  name: "OrdersResource - GET /orders/1",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/orders/1", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), "Order #1 not found.");\n    server.close()\n  }\n});\n \nDeno.test({\n  name: "OrdersResource - GET /orders/1090987",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/orders/1090987", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), {\n      id: 1090987,\n      name: "Gadgets",\n      quantity: 50,\n      price: 1000\n    });\n    server.close()\n  }\n});\n \nDeno.test({\n  name: "OrdersResource - GET /orders/8878213",\n  async fn(): Promise<void> {\n    await server.run(httpOptions);\n    const response = await fetch("http://localhost:1447/orders/8878213", {\n      method: "GET",\n    });\n    assertEquals(JSON.parse(await response.text()), {\n      id: 8878213,\n      name: "Gizmos",\n      quantity: 25,\n      price: 2000\n    });\n    server.close()\n  }\n});')])],1),r("li",[r("p",[e._v("Run your test runner file.")]),r("code-block",{attrs:{title:"Terminal"}},[e._v("deno test --allow-net run_tests.ts")]),r("p",[e._v("You should receive the following output:")]),r("code-block",{attrs:{title:"Terminal"}},[e._v("running 7 tests\ntest HomeResource - GET / ... ok (48ms)\ntest UsersResource - GET /users/1 ... ok (9ms)\ntest UsersResource - GET /users/1388873 ... ok (8ms)\ntest UsersResource - GET /users/1983765 ... ok (7ms)\ntest OrdersResource - GET /orders/1 ... ok (13ms)\ntest OrdersResource - GET /orders/1090987 ... ok (10ms)\ntest OrdersResource - GET /orders/8878213 ... ok (6ms)\n\ntest result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out (103ms)")])],1)])],1)};$n._withStripped=!0;const An={paths:["/tutorials/testing/unit-testing"],meta:{title:"Unit Testing"}};var Pn={data:()=>({title:"Unit Testing",toc:["Before You Get Started","Folder Structure End State","Steps","Writing Your Tests"]})},Yn=Object(ge.a)(Pn,$n,[],!1,null,null,null);Yn.options.__file="src/drash/vue/pages/tutorials/testing/unit_testing.vue";var Ln=Yn.exports;t.a=[s,o,a,n,i,l,c,u,d,p,h,_,v,m,f,g,b,y,w,k,x,T,S,D,R,C,E,q,j,H,$,A,P,Y,L,I,M,O,B,G,N,U,V,F,W,K,J,z,Q,X,Z,ee,te,re,se,oe,ae,ne,ie,le,ce,ue,de,pe,he,_e]},,,function(e,t,r){"use strict";var s=r(7);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,".environment-badge[data-v-4f481ef8]{background:#000000;color:#ffffff;padding:.5rem;text-transform:uppercase}p[data-v-4f481ef8]{line-height:1rem}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(8);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"ul li[data-v-2bfbcec6]{list-style-type:none}ul li ul li[data-v-2bfbcec6]{margin-left:0}ul li ul li a[data-v-2bfbcec6]{padding-left:3rem !important}.sidebar[data-v-2bfbcec6]{-webkit-overflow-scrolling:touch;display:block;height:100%;overflow:auto;top:0;left:0;height:100%;position:fixed;border-right:1px solid #e8e8e8;box-shadow:7px 0 12px -6px rgba(100,100,100,0.2);z-index:10}.sidebar a[data-v-2bfbcec6]{color:#f4f4f4}.sidebar a[data-v-2bfbcec6]:hover{text-decoration:none}.menu-name[data-v-2bfbcec6]{color:#f4f4f4;background:#36304a;border-bottom:1px solid #3f3955;font-weight:bold;letter-spacing:0.10875rem;margin:0;text-transform:uppercase}.menu-name-link[data-v-2bfbcec6]{display:block;padding:0.725rem 1.45rem}.menu-name-link[data-v-2bfbcec6]:hover{color:#f4f4f4}.menu-name-link.is-link[data-v-2bfbcec6]{cursor:pointer}.menu-name-link.is-link[data-v-2bfbcec6]:hover{color:#333333;background-color:#f4f4f4}.active .collapser[data-v-2bfbcec6]{transform:rotate(45deg)}.menu-item[data-v-2bfbcec6]{margin-left:0}.menu-item[data-v-2bfbcec6]:last-of-type{border-bottom:1px solid #3f3955}.menu-item[data-v-2bfbcec6]{background-color:#282633;transition-property:background-color;transition:.15s ease}.menu-item[data-v-2bfbcec6]:hover{background-color:#f4f4f4}.menu-item-link[data-v-2bfbcec6],.menu2-item-link[data-v-2bfbcec6]{display:block;color:#f4f4f4;padding:0 1.45rem;transition-property:color;transition:.15s ease}.menu-item-link[data-v-2bfbcec6]:hover,.menu2-item-link[data-v-2bfbcec6]:hover{color:#333333}span.menu-item-link[data-v-2bfbcec6]:hover{cursor:pointer}span.menu-item-link:hover>a[data-v-2bfbcec6]{color:#333333}.collapser[data-v-2bfbcec6]{padding-right:0.5rem;color:#019e01;display:inline-block;margin:0;font-size:1.2rem;transition:.2s transform ease;transform-origin:6px}.menu-item.active:hover a[data-v-2bfbcec6]{color:#333333}.menu-items-list li[data-v-2bfbcec6]{transition-property:opacity height;transition:.15s ease;opacity:0;height:0}.menu-item:hover .menu-items-shown a[data-v-2bfbcec6],.menu-item:hover .menu-items-shown .menu-item-link a[data-v-2bfbcec6]{color:#333333}.menu-item.active a[data-v-2bfbcec6]{color:#f4f4f4}.menu-item.active a[data-v-2bfbcec6]:hover{color:#ff7700}.menu-item.active li[data-v-2bfbcec6]{color:#333333;opacity:1;height:2.5rem}.version-selector .current-version[data-v-2bfbcec6]{color:#333333 !important}.version-selector .current-version .fa-caret-down[data-v-2bfbcec6]{top:.75rem;right:.75rem}.version-selector .version-menu[data-v-2bfbcec6]{opacity:0;pointer-events:none;transition:.2s opacity ease}.version-selector .version-menu.active[data-v-2bfbcec6]{pointer-events:auto;opacity:1}.version-selector .version-link[data-v-2bfbcec6]{color:#333333 !important}.version-selector .version-link[data-v-2bfbcec6]:hover{background:#f4f4f4}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(9);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"a,a:visited{color:#ff7700}a:hover{color:#333333}body{background-color:#f4f4f4;font-family:'Nunito', Helvetica, Arial, sans-serif;font-size:1.1rem;line-height:2.25rem}code{background:#e8e8e8;border-radius:0.18125rem;color:#e83e8c;display:inline-block;font-size:.9rem;line-height:1rem;margin-bottom:0;padding:0.1rem}h1{margin-bottom:1rem;line-height:3.5rem}h2{line-height:3.5rem}h3{font-weight:bold;margin-bottom:1rem}hr{border-width:2px;margin-top:2rem;margin-bottom:2rem}ol li{list-style-type:decimal;margin-left:2rem}p{margin-bottom:1rem}ul{margin-bottom:1rem}ul li{list-style-type:disc;margin-left:2rem}.line-highlight:before{display:none}.main{margin-left:375px}.main.is-mobile{margin-left:0}.sidebar{width:375px}.sidebar.is-mobile{width:100%}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(10);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"button[data-v-39202b4f]{background:#000000;border-radius:.5rem;padding:1rem;width:75px}.hide[data-v-39202b4f]{display:none}.buttons[data-v-39202b4f]{bottom:1rem;color:#f4f4f4;position:fixed;right:1rem;z-index:1000}.version-selector .current-version[data-v-39202b4f]{color:#333333 !important}.version-selector .current-version .fa-caret-down[data-v-39202b4f]{top:.75rem;right:.75rem}.version-selector .version-menu[data-v-39202b4f]{opacity:0;pointer-events:none;transition:.2s opacity ease}.version-selector .version-menu.active[data-v-39202b4f]{pointer-events:auto;opacity:1}.version-selector .version-link[data-v-39202b4f]{color:#333333 !important}.version-selector .version-link[data-v-39202b4f]:hover{background:#f4f4f4}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(11);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"a[data-v-0ba93d8a]{background-color:#282633;color:white}a[data-v-0ba93d8a]:hover{background-color:#1a4ae2}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(12);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,".breadcrumb-holder[data-v-22f88791]{flex-flow:row wrap;display:flex}.breadcrumb[data-v-22f88791]{background-color:#282633;color:white}.breadcrumb[data-v-22f88791]:hover{background-color:#1a4ae2}\n",""]),e.exports=t},,,,,,,,,,,,,,,,,,,,,,function(e,t,r){!function(){if("undefined"!=typeof self&&self.Prism&&self.document)if(Prism.plugins.toolbar){var e=window.ClipboardJS||void 0;e||(e=r(71));var t=[];if(!e){var s=document.createElement("script"),o=document.querySelector("head");s.onload=function(){if(e=window.ClipboardJS)for(;t.length;)t.pop()()},s.src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js",o.appendChild(s)}Prism.plugins.toolbar.registerButton("copy-to-clipboard",(function(r){var s=document.createElement("button");s.textContent="Copy";var o=r.element;return e?a():t.push(a),s;function a(){var t=new e(s,{text:function(){if(o.className.indexOf("shell-session")>-1){const e=o.textContent.split("\n"),t=[];for(let r of e)0===r.indexOf("$")&&(r=r.slice(2)),t.push(r);return t.join("\n")}return o.textContent}});t.on("success",(function(){s.textContent="Copied!",n()})),t.on("error",(function(){s.textContent="Press Ctrl+C to copy",n()}))}function n(){setTimeout((function(){s.textContent="Copy"}),5e3)}}))}else console.warn("Copy to Clipboard plugin loaded before Toolbar plugin.")}()},,function(e,t,r){"use strict";var s=r(13);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"[data-line][data-v-4eac90ec]{padding:1em}.header[data-v-4eac90ec]{border-radius:1rem 1rem 0 0;background-color:#454545;color:#ffffff}code.header[data-v-4eac90ec]{border-radius:0;line-height:1rem}.body[data-v-4eac90ec]{border-radius:0 0 1rem 1rem;margin:0}.body.no-header[data-v-4eac90ec]{border-radius:1rem}.is-mobile[data-v-4eac90ec]{margin-left:-2rem;margin-right:-2rem}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(14);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"ul .code-block.is-mobile,ol .code-block.is-mobile{margin-left:-4rem}.line-highlight:after,.line-highlight:before{display:none}\n",""]),e.exports=t},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";var s=r(15);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,"li p a[data-v-0a08ede2]{color:#ff7700 !important;cursor:pointer !important}li p a[data-v-0a08ede2]:hover{text-decoration:underline !important}\n",""]),e.exports=t},function(e,t,r){"use strict";var s=r(16);r.n(s).a},function(e,t,r){(t=r(4)(!1)).push([e.i,".alert-light[data-v-fdfe2424]{color:#ff7700}.alert[data-v-fdfe2424]{transition:background 0.1s, border 0.1s}.card-a[data-v-fdfe2424]{display:block;text-decoration:none}.card-a:hover .alert[data-v-fdfe2424]{border:1px solid #ffc99a;background:#ffeee0}.card-a p[data-v-fdfe2424]{color:#000000;text-decoration:none}\n",""]),e.exports=t},function(e,t,r){"use strict";r.r(t);var s=r(2),o=r.n(s),a=function(){var e=this.$createElement;return(this._self._c||e)("app-root",{attrs:{sidebar:this.sidebar,news_tags:"deno, drash",module:"Drash"}})};a._withStripped=!0;var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{on:{click:e.toggleElements}},[r("div",{staticClass:"buttons flex"},[r("button",{class:{"mr-3":e.is_mobile,hide:!e.can_scroll_to_top},attrs:{type:"button"},on:{click:function(t){return e.scrollToTop()}}},[r("i",{staticClass:"fa fa-arrow-up"})]),r("button",{staticClass:"open-sidebar",class:{hide:!e.is_mobile},attrs:{type:"button"},on:{click:function(t){return e.toggleSidebar()}}},[r("i",{staticClass:"fa fa-bars",class:{hide:e.open_sidebar}}),r("i",{staticClass:"fa fa-times",class:{hide:!e.open_sidebar}})])]),r("environment-badge",{staticClass:"environment-badge"}),r("sidebar",{class:{hide:e.is_mobile&&!e.open_sidebar,"is-mobile":e.is_mobile},attrs:{base_url:e.sidebar.base_url,menus:e.sidebar.menus,logo:e.sidebar.logo,module:e.sidebar.module,github_href:e.sidebar.github_href,api_reference_href:e.sidebar.api_reference_href,example_applications:e.sidebar.example_applications}}),r("div",{staticClass:"main",class:{"is-mobile":e.is_mobile},staticStyle:{"margin-top":"75px","margin-bottom":"125px"}},[r("div",{staticClass:"max-w-screen-md mx-auto px-10"},[r("transition",[r("keep-alive",[r("router-view")],1)],1),r("hr"),r("div",{staticClass:"mt-10 bg-teal-100 border-l-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md",attrs:{role:"alert"}},[r("div",{staticClass:"py-1"},[r("p",{staticClass:"font-bold"},[e._v("Having issues with this page?")]),r("p",{staticClass:"text-sm"},[e._v("This page was last updated on "+e._s(e.build_date)+". If you are having issues with this page (e.g., parts of the page are not loading, documentation does not make sense, etc.), please let us know "),r("a",{staticClass:"cursor-pointer",attrs:{href:"https://github.com/drashland/website/issues/new?assignees=&labels=Priority: Medium, Remark: Investigation Needed%2C+documentation&template=documentation_page_issue.md&title=Issue on "+e.module+" "+e.$route.path+" page",target:"_BLANK"}},[e._v("here")]),e._v(". We would love to help you out!")])])])],1)])],1)};n._withStripped=!0;var i=function(){var e=this,t=e.$createElement,r=e._self._c||t;return e.is_production?e._e():r("div",{staticClass:"environment-badge",staticStyle:{position:"fixed",right:"0",top:"0","text-align":"right","z-index":"1000"}},[r("p",{staticClass:"mb-0"},[e._v("ENVIRONMENT: "+e._s(e.environment))]),r("p",{staticClass:"mb-0",staticStyle:{"font-size":".65rem"}},[e._v("Build Date: "+e._s(e.build_date))])])};i._withStripped=!0;var l={data(){return{environment:this.$conf.environment}},computed:{build_date:()=>(new Date).toLocaleString(),is_production(){return"production"==this.$conf.environment}}},c=(r(37),r(0)),u=Object(c.a)(l,i,[],!1,null,"4f481ef8",null);u.options.__file="assets/common/vue/environment_badge.vue";var d=u.exports,p=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"sidebar text-sm",style:"background-color: "+e.styles.background_color+";"},[r("a",{attrs:{href:e.base_url+"/"}},[r("img",{staticClass:"mx-auto m-10",staticStyle:{height:"150px"},attrs:{alt:e.module,src:e.logo}})]),r("div",{staticClass:"version-selector mx-5 mb-5 cursor-pointer relative"},[r("div",{staticClass:"current-version relative"},[r("p",{staticClass:"self-center mb-0 block px-5 rounded-lg",staticStyle:{"background-color":"#f4f4f4"},attrs:{id:"current_version_item"},on:{click:function(t){return e.toggleVersionSelector()}}},[e._v(e._s(e.current_version)),r("span",{staticClass:"absolute ml-2 fas fa-caret-down"})])]),r("div",{staticClass:"version-menu bg-white rounded-lg overflow-hidden absolute w-full shadow-lg",class:{active:e.version_selector_is_active}},e._l(e.versions,(function(t){return r("a",{staticClass:"version-link block px-5",attrs:{href:"/"+e.module+"/"+t+"/"}},[e._v(e._s(t))])})),0)]),r("div",{staticStyle:{"border-top":"1px solid #3f3955"}},[e._l(e.menus,(function(t,s){return r("div",[r("div",{staticClass:"menu-name"},[r("a",{staticClass:"menu-name-link"},[e._v(e._s(s))])]),r("ul",{staticClass:"mb-0"},e._l(t,(function(o,a){return r("li",{staticClass:"menu-item"},["object"==typeof o?r("span",{staticClass:"menu-item-link",on:{click:e.toggleSubMenuItems}},[r("span",{staticClass:"collapser pointer-events-none"},[e._v("+")]),r("a",{staticClass:"pointer-events-none"},[e._v(e._s(a))])]):e._e(),"object"==typeof o?r("ul",{staticClass:"menu-items-list overflow-hidden mb-0"},e._l(t[a],(function(t,s){return r("li",{staticClass:"menu2-item"},[r("a",{staticClass:"menu2-item-link",attrs:{href:e.base_url+"/#"+t},on:{click:function(t){return e.closeSidebar()}}},[e._v(e._s(s))])])})),0):r("a","Latest News"==s?{staticClass:"menu-item-link",attrs:{href:e.getMenuItemLink(s,o),target:"Latest News"==s&&"No articles yet"!=a?"_BLANK":""},on:{click:function(t){return e.closeSidebar()}}}:{staticClass:"menu-item-link",attrs:{href:e.getMenuItemLink(s,o)},on:{click:function(t){return e.closeSidebar()}}},[e._v(e._s(a))])])})),0)])})),e.api_reference_href?r("div",{staticClass:"menu-name"},[r("a",{staticClass:"menu-name-link is-link",attrs:{href:e.api_reference_href},on:{click:function(t){return e.closeSidebar()}}},[e._v("API Reference")])]):e._e(),r("div",{staticClass:"menu-name"},[r("a",{staticClass:"menu-name-link is-link",attrs:{href:e.github_href},on:{click:function(t){return e.closeSidebar()}}},[e._v("GitHub")])]),e._m(0)],2),r("div",{staticClass:"mt-5 text-sm text-center",staticStyle:{color:"#f4f4f4"}},[r("p",{staticClass:"mb-2"},[e._v("© 2019-"+e._s(e.$conf.copyright_year)+" Drash Land")]),r("p",{staticClass:"mb-10"},[e._v("Built with Deno & Drash")])])])};p._withStripped=!0;var h={props:{api_reference_href:{type:String,required:!1},base_url:{type:String,required:!0},github_href:{type:String,required:!0},menus:{type:Object,required:!0},logo:{type:String,required:!0},module:{type:String,required:!0},styles:{type:Object,default:()=>({background_color:"#282633"})}},data(){return{version_selector_is_active:!1,versions:this.$conf[this.module].versions}},computed:{current_version:()=>window.location.href.match(/v[0-9].+\//)[0].replace(/\/#.+/,"")},mounted(){this.$root.$on("close-version-selector",()=>{this.toggleVersionSelector(!0)})},methods:{closeSidebar(){this.$root.$emit("close-sidebar")},toggleSubMenuItems(e){e.target.parentElement.classList.toggle("active")},getMenuItemLink(e,t){return"Latest News"==e||"Example Applications"==e?t:`${this.base_url}/#${t}`},toggleVersionSelector(e=!1){this.version_selector_is_active=!e&&!this.version_selector_is_active}}},_=(r(39),Object(c.a)(h,p,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"menu-name"},[t("a",{staticClass:"menu-name-link is-link",attrs:{href:"/"}},[this._v("Back To Drash Land")])])}],!1,null,"2bfbcec6",null));_.options.__file="assets/common/vue/sidebar.vue";var v={components:{EnvironmentBadge:d,Sidebar:_.exports},props:{module:{type:String,required:!0},news_tags:{type:String,default:""},sidebar:{type:Object,required:!0}},computed:{build_date:()=>(new Date).toISOString().replace("T"," at ").split(".")[0]},async mounted(){if(window.addEventListener("resize",this.handleWindowResize),window.addEventListener("scroll",this.handleWindowOnScroll),this.handleWindowResize(),this.handleWindowOnScroll(),this.$root.$on("close-sidebar",()=>{this.toggleSidebar()}),this.sidebar.menus["Latest News"]){const e="https://dev.to/api/articles?username=drash_land&tag="+this.news_tags,t=await fetch(e);let r=await t.json(),s={};r=r.slice(0,5);for(const e in r){const t=r[e];s[t.readable_publish_date+" - "+t.title]=t.url}this.sidebar.menus["Latest News"]=s}},data:()=>({can_scroll_to_top:!1,is_mobile:!1,open_sidebar:!1}),methods:{handleWindowOnScroll(e){document.body.scrollTop>20||document.documentElement.scrollTop>20?this.can_scroll_to_top=!0:this.can_scroll_to_top=!1},handleWindowResize(e){window.innerWidth<900?(this.is_mobile=!0,this.$root.$emit("is-mobile")):(this.$root.$emit("is-not-mobile"),this.is_mobile=!1)},async scrollToTop(){try{await this.$router.push(this.$route.path)}catch(e){document.body.scrollTop=0,document.documentElement.scrollTop=0}},toggleSidebar(){this.open_sidebar?this.open_sidebar=!1:this.open_sidebar=!0},toggleElements(e){"current_version_item"!=e.srcElement.id&&this.$root.$emit("close-version-selector")}}},m=(r(41),r(43),Object(c.a)(v,n,[],!1,null,"39202b4f",null));m.options.__file="assets/common/vue/app_root.vue";var f={components:{AppRoot:m.exports},data(){return{articles:[],sidebar:{api_reference_href:"/drash/#/api-reference",base_url:this.$conf.drash.base_url,github_href:"https://github.com/drashland/deno-drash",logo:"/assets/common/img/logo_drash.svg",menus:{Introduction:{"Drash In A Nutshell":"/#drash-in-a-nutshell",Quickstart:"/#quickstart",Importing:"/#importing",Features:"/#features","About Drash":"/about-drash","Lifecycle Diagram":"/lifecycle-diagram"},"Latest News":{},Tutorials:{Introduction:"/tutorials",Resources:{"Creating A Resource":"/tutorials/resources/creating-a-resource"},Servers:{"Creating An HTTP Server":"/tutorials/servers/creating-an-http-server","Creating An HTTPS Server":"/tutorials/servers/creating-an-https-server","Serving Static Paths":"/tutorials/servers/serving-static-paths","Serving Virtual Paths":"/tutorials/servers/serving-virtual-paths"},Requests:{"Handling JSON Bodies":"/tutorials/requests/handling-json-bodies","Handling URL Encoded Bodies":"/tutorials/requests/handling-url-encoded-bodies","Handling Multipart Bodies":"/tutorials/requests/handling-multipart-bodies","Handling URL Query Params":"/tutorials/requests/handling-url-query-params","Handling Path Params":"/tutorials/requests/handling-path-params","Get All Params":"/tutorials/requests/get-all-params"},Responses:{Redirects:"/tutorials/responses/redirects"},Middleware:{Introduction:"/tutorials/middleware/introduction","Adding Server-Level Middleware":"/tutorials/middleware/adding-server-level-middleware","Adding Resource-Level Middleware":"/tutorials/middleware/adding-resource-level-middleware","Using Drash Middleware Modules":"/tutorials/middleware/using-drash-middleware-modules"},Cookies:{"Request Cookies":"/tutorials/cookies/request-cookies","Response Cookies":"/tutorials/cookies/response-cookies"},"Front-End":{"Using Jae":"/tutorials/front-end/using-jae"},CLI:{Introduction:"/tutorials/cli/introduction","Create App":"/tutorials/cli/create-app"},Testing:{"Unit Testing":"/tutorials/testing/unit-testing"},"Error Handling":{"Angular Deep Linking":"/tutorials/error-handling/angular-deep-linking"},Misc:{"Adding Global Members":"/tutorials/misc/adding-global-members","Content Negotiation":"/tutorials/misc/content-negotiation","Enabling Pretty Links":"/tutorials/misc/pretty-links"}},"Advanced Tutorials":{Introduction:"/advanced-tutorials/introduction","Creating An API":"/advanced-tutorials/creating-an-api","Creating A Server Side Rendered App":"/advanced-tutorials/creating-a-server-side-rendered-app","Creating A Client Side Rendered App (Vue)":"/advanced-tutorials/creating-a-client-side-rendered-app-vue","Creating A Client Side Rendered App (React)":"/advanced-tutorials/creating-a-client-side-rendered-app-react","Content Negotiation":"/advanced-tutorials/content-negotiation","Using Drash With Docker Compose":"/advanced-tutorials/using-drash-with-docker-compose"},"Example Applications":{"Realworld Example":"https://github.com/drashland/deno-drash-realworld-example-app"}},module:"drash"}}}},g=Object(c.a)(f,a,[],!1,null,null,null);g.options.__file="src/drash/vue/app.vue";var b=g.exports,y=function(){var e=this.$createElement;return(this._self._c||e)("a",{staticClass:"text-white bg-blue-500 block md:inline hover:bg-blue-400 text-white font-bold py-2 px-4 border-blue-700 hover:border-blue-500 rounded",staticStyle:{color:"#ffffff"},attrs:{href:this.href}},[this._v("Get Started")])};y._withStripped=!0;var w={props:{href:{type:String,required:!0}}},k=(r(45),Object(c.a)(w,y,[],!1,null,"0ba93d8a",null));k.options.__file="assets/common/vue/a_get_started.vue";var x=k.exports,T=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"breadcrumb-holder"},e._l(e.breadcrumbs,(function(t){return r("a",{class:t.class,attrs:{href:t.href}},[e._v(e._s(t.name))])})),0)};T._withStripped=!0;var S={props:{base_url:{type:String,required:!0},part:{type:Number,required:!0},parts:{type:Number,required:!0}},data:()=>({breadcrumbs:[]}),mounted(){const e="breadcrumb bg-blue-500 block md:inline mb-1 text-white font-bold px-4 border-blue-600 rounded mr-2";let t=[{class:e+(-1===this.part?" border-b-4":""),href:this.base_url+"/introduction",name:"Introduction"}];for(let r=1;r<=this.parts;r+=1)t.push({class:e+(this.part===r?" border-b-4":""),href:`${this.base_url}/part-${r}`,name:"Part "+r});this.breadcrumbs=t}},D=(r(47),Object(c.a)(S,T,[],!1,null,"22f88791",null));D.options.__file="assets/common/vue/breadcrumbs.vue";var R=D.exports,C=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"code-block mb-5",class:{"is-mobile":e.is_mobile}},[!1!==e.header?r("pre",{staticClass:"header mb-0 p-4"},[r("code",{staticClass:"header"},[e._v(e._s(e.title))])]):e._e(),r("pre",{staticClass:"body",class:{"no-header":!1===e.header,"line-numbers":e.line_numbers},attrs:{"data-line":e.line_highlight}},[r("code",{class:"language-"+e.language},[e._t("default")],2)])])};C._withStripped=!0;var E=r(31),q=r.n(E),j=(r(49),r(51),r(52),r(53),r(54),r(55),r(56),r(57),r(58),r(59),r(60),r(61),r(62),r(64),r(65),r(67),r(69),r(70),{props:{header:{type:Boolean,default:!0},line_highlight:{type:String,required:!1},language:{type:String,default:"text"},title:{type:String},line_numbers:{type:Boolean,default:!1}},created(){this.$root.$on("is-mobile",()=>{this.is_mobile=!0}),this.$root.$on("is-not-mobile",()=>{this.is_mobile=!1})},data:()=>({is_mobile:!1}),mounted(){q.a.highlightAll()}}),H=(r(72),r(74),Object(c.a)(j,C,[],!1,null,"4eac90ec",null));H.options.__file="assets/common/vue/code_block.vue";var $=H.exports,A=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("code-block",{attrs:{language:"typescript",header:!1}},[e._v("// Import a specific version of "+e._s(e.name)+"\nimport { "+e._s(e.name)+' } from "https://deno.land/x/'+e._s(e.repo)+"@"+e._s(e.version)+'/mod.ts";')]),r("p",[e._v(e._s(e.name)+" versions can be found "),r("a",{attrs:{href:"https://github.com/drashland/"+e.repo+"/releases",target:"_BLANK"}},[e._v("here")]),e._v(".")])],1)};A._withStripped=!0;var P={components:{CodeBlock:$},props:{name:{type:String,required:!0},repo:{type:String,required:!0},version:{type:String,required:!0}}},Y=Object(c.a)(P,A,[],!1,null,null,null);Y.options.__file="assets/common/vue/code_block_import.vue";var L=Y.exports,I=function(){var e=this.$createElement;this._self._c;return this._m(0)};I._withStripped=!0;var M=Object(c.a)({},I,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4",attrs:{role:"alert"}},[t("p",{staticClass:"mb-0"},[this._v("You can now move on to the next tutorial part.")])])}],!1,null,null,null);M.options.__file="assets/common/vue/div_alert_next_tutorial_part.vue";var O=M.exports,B=function(){var e=this.$createElement;this._self._c;return this._m(0)};B._withStripped=!0;var G=Object(c.a)({},B,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"bg-green-100 border-l-4 border-green-500 text-green-700 p-4",attrs:{role:"alert"}},[t("p",{staticClass:"mb-0"},[this._v("Great job! You have finished this tutorial series!")])])}],!1,null,null,null);G.options.__file="assets/common/vue/div_alert_finished_tutorial_series.vue";var N=G.exports,U=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("h2-hash",[this._v("Folder Structure End State")]),t("p",[this._v("Upon completing the Steps section below, your project's folder structure should look similar to the following:")]),t("code-block",{attrs:{header:!1}},[this._t("default")],2)],1)};U._withStripped=!0;var V=r(5),F={components:{CodeBlock:$,H2Hash:V.a}},W=Object(c.a)(F,U,[],!1,null,null,null);W.options.__file="assets/common/vue/folder_structure_end_state.vue";var K=W.exports,J=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("h1",{staticClass:"text-5xl"},[t("strong",[this._v(this._s(this.heading))])]),t("p",[this._v(this._s(this.description))])])};J._withStripped=!0;var z={props:{heading:{type:String,required:!0},description:{type:String,required:!0}}},Q=Object(c.a)(z,J,[],!1,null,null,null);Q.options.__file="assets/common/vue/introduction_header.vue";var X=Q.exports,Z=r(18),ee=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("code",[this._v(this._s(this.method.toUpperCase()))]),t("span",{staticStyle:{display:"inline-block","margin-right":"10px"}}),t("code",[this._v(this._s(this.url))])])};ee._withStripped=!0;var te={props:["method","url"]},re=Object(c.a)(te,ee,[],!1,null,null,null);re.options.__file="assets/common/vue/request.vue";var se=re.exports;o.a.component("a-get-started",x),o.a.component("breadcrumbs",R),o.a.component("code-block",$),o.a.component("code-block-import",L),o.a.component("div-alert-next-tutorial-part",O),o.a.component("div-alert-finished-tutorial-series",N),o.a.component("folder-structure-end-state",K),o.a.component("h2-hash",V.a),o.a.component("introduction-header",X),o.a.component("page",Z.a),o.a.component("request",se);var oe=r(32),ae=r.n(oe),ne=r(17),ie=r(33);o.a.prototype.$conf=window.drash_api_configs;const le=new ae.a;o.a.filter("markdown-it",(function(e){return le.render(e)})),o.a.use(ne.a),window.app=new o.a({el:"#vue_app_mount",components:{VueAppRoot:b},router:ie.a})}]);